<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='UniversityFinder' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.2'>
      <aliases enabled='yes' />
      <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
        <calculation class='tableau' formula='162' />
        <range max='170' min='1' />
      </column>
      <column caption='GREWriting' datatype='real' datatype-customized='true' name='[GREVerbal (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
        <calculation class='tableau' formula='3.0' />
        <range max='6.0' min='1.0' />
      </column>
      <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
        <calculation class='tableau' formula='4.0' />
        <range max='4.0' min='1.0' />
      </column>
      <column caption='University' datatype='string' name='[MajorParam (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Mexico State University&quot;'>
        <calculation class='tableau' formula='&quot;New Mexico State University&quot;' />
        <members>
          <member value='&quot;American University&quot;' />
          <member value='&quot;Arizona State University&quot;' />
          <member value='&quot;Auburn University&quot;' />
          <member value='&quot;Boston University&quot;' />
          <member value='&quot;Brandeis University&quot;' />
          <member value='&quot;Brown University&quot;' />
          <member value='&quot;California State University, Long Beach&quot;' />
          <member value='&quot;Carleton University&quot;' />
          <member value='&quot;Carnegie Mellon University&quot;' />
          <member value='&quot;Case Western Reserve University&quot;' />
          <member value='&quot;Clemson University&quot;' />
          <member value='&quot;Colorado State University&quot;' />
          <member value='&quot;Columbia University&quot;' />
          <member value='&quot;Concordia University&quot;' />
          <member value='&quot;Cornell University&quot;' />
          <member value='&quot;Drexel University&quot;' />
          <member value='&quot;Duke University&quot;' />
          <member value='&quot;Emory University&quot;' />
          <member value='&quot;Florida International University&quot;' />
          <member value='&quot;Florida State University&quot;' />
          <member value='&quot;George Mason University&quot;' />
          <member value='&quot;George Washington University&quot;' />
          <member value='&quot;Georgetown University&quot;' />
          <member value='&quot;Georgia State University&quot;' />
          <member value='&quot;Harvard University&quot;' />
          <member value='&quot;Indiana University&quot;' />
          <member value='&quot;Iowa State University&quot;' />
          <member value='&quot;Johns Hopkins University&quot;' />
          <member value='&quot;Kansas State University&quot;' />
          <member value='&quot;Kent State University&quot;' />
          <member value='&quot;Lehigh University&quot;' />
          <member value='&quot;Louisiana State University&quot;' />
          <member value='&quot;Massachusetts Institute of Technology&quot;' />
          <member value='&quot;McMaster University&quot;' />
          <member value='&quot;Memorial University of Newfoundland&quot;' />
          <member value='&quot;Miami University&quot;' />
          <member value='&quot;Michigan State University&quot;' />
          <member value='&quot;Michigan Technological University&quot;' />
          <member value='&quot;Missouri University of Science and Technology&quot;' />
          <member value='&quot;Montana State University&quot;' />
          <member value='&quot;National University of Singapore&quot;' />
          <member value='&quot;New Mexico State University&quot;' />
          <member value='&quot;New York University&quot;' />
          <member value='&quot;Northeastern University&quot;' />
          <member value='&quot;Northwestern University&quot;' />
          <member value='&quot;Ohio State University&quot;' />
          <member value='&quot;Ohio University&quot;' />
          <member value='&quot;Oklahoma State University&quot;' />
          <member value='&quot;Old Dominion University&quot;' />
          <member value='&quot;Oregon Health and Science University&quot;' />
          <member value='&quot;Oregon State University&quot;' />
          <member value='&quot;Pennsylvania State University&quot;' />
          <member value='&quot;Portland State University&quot;' />
          <member value='&quot;Princeton University&quot;' />
          <member value='&quot;Purdue University&quot;' />
          <member value='&quot;Rice University&quot;' />
          <member value='&quot;Rush University&quot;' />
          <member value='&quot;Saint Louis University&quot;' />
          <member value='&quot;San Diego State University&quot;' />
          <member value='&quot;Simon Fraser University&quot;' />
          <member value='&quot;Southern Methodist University&quot;' />
          <member value='&quot;Stanford University&quot;' />
          <member value='&quot;Syracuse University&quot;' />
          <member value='&quot;Temple University&quot;' />
          <member value='&quot;Texas A&amp;M University&quot;' />
          <member value='&quot;Texas Tech University&quot;' />
          <member value='&quot;Tufts University&quot;' />
          <member value='&quot;Tulane University&quot;' />
          <member value='&quot;University College London&quot;' />
          <member value='&quot;University of Alberta&quot;' />
          <member value='&quot;University of Arizona&quot;' />
          <member value='&quot;University of Arkansas&quot;' />
          <member value='&quot;University of British Columbia&quot;' />
          <member value='&quot;University of Calgary&quot;' />
          <member value='&quot;University of California, Berkeley&quot;' />
          <member value='&quot;University of California, Davis&quot;' />
          <member value='&quot;University of California, Irvine&quot;' />
          <member value='&quot;University of California, Los Angeles&quot;' />
          <member value='&quot;University of California, Riverside&quot;' />
          <member value='&quot;University of California, San Diego&quot;' />
          <member value='&quot;University of California, Santa Barbara&quot;' />
          <member value='&quot;University of California, Santa Cruz&quot;' />
          <member value='&quot;University of Cambridge&quot;' />
          <member value='&quot;University of Chicago&quot;' />
          <member value='&quot;University of Cincinnati&quot;' />
          <member value='&quot;University of Connecticut&quot;' />
          <member value='&quot;University of Delaware&quot;' />
          <member value='&quot;University of Edinburgh&quot;' />
          <member value='&quot;University of Florida&quot;' />
          <member value='&quot;University of Georgia&quot;' />
          <member value='&quot;University of Guelph&quot;' />
          <member value='&quot;University of Houston&quot;' />
          <member value='&quot;University of Idaho&quot;' />
          <member value='&quot;University of Iowa&quot;' />
          <member value='&quot;University of Kansas&quot;' />
          <member value='&quot;University of Kentucky&quot;' />
          <member value='&quot;University of Maryland, Baltimore County&quot;' />
          <member value='&quot;University of Maryland, College Park&quot;' />
          <member value='&quot;University of Massachusetts&quot;' />
          <member value='&quot;University of Miami&quot;' />
          <member value='&quot;University of Michigan&quot;' />
          <member value='&quot;University of Minnesota&quot;' />
          <member value='&quot;University of Missouri&quot;' />
          <member value='&quot;University of Montana&quot;' />
          <member value='&quot;University of New Mexico&quot;' />
          <member value='&quot;University of Notre Dame&quot;' />
          <member value='&quot;University of Oklahoma&quot;' />
          <member value='&quot;University of Oregon&quot;' />
          <member value='&quot;University of Ottawa&quot;' />
          <member value='&quot;University of Oxford&quot;' />
          <member value='&quot;University of Pennsylvania&quot;' />
          <member value='&quot;University of Pittsburgh&quot;' />
          <member value='&quot;University of Rochester&quot;' />
          <member value='&quot;University of South Carolina&quot;' />
          <member value='&quot;University of South Dakota&quot;' />
          <member value='&quot;University of South Florida&quot;' />
          <member value='&quot;University of Southern California&quot;' />
          <member value='&quot;University of Southern Mississippi&quot;' />
          <member value='&quot;University of Tennessee, Knoxville&quot;' />
          <member value='&quot;University of Toledo&quot;' />
          <member value='&quot;University of Toronto&quot;' />
          <member value='&quot;University of Tulsa&quot;' />
          <member value='&quot;University of Utah&quot;' />
          <member value='&quot;University of Vermont&quot;' />
          <member value='&quot;University of Virginia&quot;' />
          <member value='&quot;University of Washington&quot;' />
          <member value='&quot;University of Waterloo&quot;' />
          <member value='&quot;University of Western Ontario&quot;' />
          <member value='&quot;University of Wisconsin&quot;' />
          <member value='&quot;University of Wyoming&quot;' />
          <member value='&quot;Vanderbilt University&quot;' />
          <member value='&quot;Wake Forest University&quot;' />
          <member value='&quot;Washington State University&quot;' />
          <member value='&quot;Wayne State University&quot;' />
          <member value='&quot;Yale University&quot;' />
          <member value='&quot;Yeshiva University&quot;' />
          <member value='&quot;York University&quot;' />
        </members>
      </column>
      <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
        <calculation class='tableau' formula='162' />
        <range max='170' min='1' />
      </column>
      <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
        <calculation class='tableau' formula='&quot;Computer Science&quot;' />
        <members>
          <member value='&quot; Planning&quot;' />
          <member value='&quot;Abbs&quot;' />
          <member value='&quot;Access&quot;' />
          <member value='&quot;Accounting&quot;' />
          <member value='&quot;Actuarial Science&quot;' />
          <member value='&quot;Administration&quot;' />
          <member value='&quot;Aem&quot;' />
          <member value='&quot;Aerec&quot;' />
          <member value='&quot;Aeronautics &amp; Astronautics&quot;' />
          <member value='&quot;Aerospace&quot;' />
          <member value='&quot;Affective Science&quot;' />
          <member value='&quot;African American Studies&quot;' />
          <member value='&quot;African Studies&quot;' />
          <member value='&quot;Africana Studies&quot;' />
          <member value='&quot;Agricultural &amp; Reource Economics&quot;' />
          <member value='&quot;Alternative Medicine&quot;' />
          <member value='&quot;American &amp; New England Studies&quot;' />
          <member value='&quot;American Studies&quot;' />
          <member value='&quot;Analytical Chemistry&quot;' />
          <member value='&quot;Ancient History&quot;' />
          <member value='&quot;Anthroplogy&quot;' />
          <member value='&quot;Anthropology&quot;' />
          <member value='&quot;Apparel Design&quot;' />
          <member value='&quot;Applied Developmental Sciences&quot;' />
          <member value='&quot;Applied Developmental Studies&quot;' />
          <member value='&quot;Applied Economics&quot;' />
          <member value='&quot;Applied Mathematics&quot;' />
          <member value='&quot;Applied science&quot;' />
          <member value='&quot;Applied Science&quot;' />
          <member value='&quot;Applied Statistics&quot;' />
          <member value='&quot;Arabic Studies&quot;' />
          <member value='&quot;Archaeology&quot;' />
          <member value='&quot;Architecture&quot;' />
          <member value='&quot;Art&quot;' />
          <member value='&quot;Arts&quot;' />
          <member value='&quot;Asian Cultures&quot;' />
          <member value='&quot;Asian Languages &amp; Cultures&quot;' />
          <member value='&quot;Astronautical Engineering&quot;' />
          <member value='&quot;Astrophysics&quot;' />
          <member value='&quot;Audiology&quot;' />
          <member value='&quot;Automotive Engineering&quot;' />
          <member value='&quot;Behavior Analysis&quot;' />
          <member value='&quot;Bible (Hebrew Bible)&quot;' />
          <member value='&quot;Biblical And Theological Studies (Nt)&quot;' />
          <member value='&quot;Bilingualeslmulticultural Education&quot;' />
          <member value='&quot;Bims&quot;' />
          <member value='&quot;Biochemical&quot;' />
          <member value='&quot;Biochemistry&quot;' />
          <member value='&quot;Bioinformatics&quot;' />
          <member value='&quot;Biology&quot;' />
          <member value='&quot;Biomedical&quot;' />
          <member value='&quot;Biomedical Sciences&quot;' />
          <member value='&quot;Biophysics&quot;' />
          <member value='&quot;Bioscience&quot;' />
          <member value='&quot;Biotechnology&quot;' />
          <member value='&quot;Chemical Engineering&quot;' />
          <member value='&quot;Chemistry&quot;' />
          <member value='&quot;Civil Engineering&quot;' />
          <member value='&quot;Cognitive Science&quot;' />
          <member value='&quot;Cognitive Sciences&quot;' />
          <member value='&quot;Communciation&quot;' />
          <member value='&quot;Communication&quot;' />
          <member value='&quot;Communication And Journalism&quot;' />
          <member value='&quot;Community Development&quot;' />
          <member value='&quot;Comparative And General Literature&quot;' />
          <member value='&quot;Computational Analysis &amp; Public Policy (Harris School Of Public Policy)&quot;' />
          <member value='&quot;Computational Biology&quot;' />
          <member value='&quot;Computer Science&quot;' />
          <member value='&quot;Conflict Resolution&quot;' />
          <member value='&quot;Counseling&quot;' />
          <member value='&quot;Creative Writing&quot;' />
          <member value='&quot;Criminal Justice&quot;' />
          <member value='&quot;Cultural Studies&quot;' />
          <member value='&quot;Dance Studies&quot;' />
          <member value='&quot;Data Science&quot;' />
          <member value='&quot;Divinity&quot;' />
          <member value='&quot;Documentary&quot;' />
          <member value='&quot;Drama&quot;' />
          <member value='&quot;E-Business&quot;' />
          <member value='&quot;Earth &amp; Planetary Sciences&quot;' />
          <member value='&quot;Ecology&quot;' />
          <member value='&quot;Economics&quot;' />
          <member value='&quot;Education&quot;' />
          <member value='&quot;Educational Studies&quot;' />
          <member value='&quot;Electrical and Computer Engineering&quot;' />
          <member value='&quot;Electrical Engineering&quot;' />
          <member value='&quot;Electronic Engineering&quot;' />
          <member value='&quot;Energy&quot;' />
          <member value='&quot;English&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Enviromental Studies&quot;' />
          <member value='&quot;Environmental Science&quot;' />
          <member value='&quot;Environmental studies&quot;' />
          <member value='&quot;Environmental Studies&quot;' />
          <member value='&quot;Environmental Studies &quot;' />
          <member value='&quot;Epidemiology&quot;' />
          <member value='&quot;Ethnic Studies&quot;' />
          <member value='&quot;Feminist Studies&quot;' />
          <member value='&quot;Film&quot;' />
          <member value='&quot;Finance&quot;' />
          <member value='&quot;Fine Art&quot;' />
          <member value='&quot;Food Science&quot;' />
          <member value='&quot;Foreign Studies&quot;' />
          <member value='&quot;Forestry&quot;' />
          <member value='&quot;Genetics&quot;' />
          <member value='&quot;Geography&quot;' />
          <member value='&quot;Geology&quot;' />
          <member value='&quot;German&quot;' />
          <member value='&quot;Governmental studies&quot;' />
          <member value='&quot;Health Sciences&quot;' />
          <member value='&quot;History&quot;' />
          <member value='&quot;Horticulture&quot;' />
          <member value='&quot;Human Centered Design&quot;' />
          <member value='&quot;Human Development&quot;' />
          <member value='&quot;Hydrological Sciences&quot;' />
          <member value='&quot;Immunology&quot;' />
          <member value='&quot;Industrial Engineering&quot;' />
          <member value='&quot;Information Science&quot;' />
          <member value='&quot;Information Technology&quot;' />
          <member value='&quot;Instructional Technology&quot;' />
          <member value='&quot;Intelligent Systems&quot;' />
          <member value='&quot;Interaction Design&quot;' />
          <member value='&quot;International Relations&quot;' />
          <member value='&quot;International studies&quot;' />
          <member value='&quot;International Studies&quot;' />
          <member value='&quot;Intustrial Engineering&quot;' />
          <member value='&quot;Journalism&quot;' />
          <member value='&quot;Kinesiology&quot;' />
          <member value='&quot;Language studies&quot;' />
          <member value='&quot;Languages And Civilization&quot;' />
          <member value='&quot;Languages and Literature&quot;' />
          <member value='&quot;Languages And Literatures&quot;' />
          <member value='&quot;Latin American Studies&quot;' />
          <member value='&quot;Law&quot;' />
          <member value='&quot;Liberal Studies&quot;' />
          <member value='&quot;Library Science&quot;' />
          <member value='&quot;Life Science&quot;' />
          <member value='&quot;Lifespan / Developmental&quot;' />
          <member value='&quot;Limnology&quot;' />
          <member value='&quot;Linguistics&quot;' />
          <member value='&quot;Lingusitics&quot;' />
          <member value='&quot;Macromolecular Science And Engineering&quot;' />
          <member value='&quot;Management&quot;' />
          <member value='&quot;Management studies&quot;' />
          <member value='&quot;Management Studies&quot;' />
          <member value='&quot;Marine Biology&quot;' />
          <member value='&quot;Marketing&quot;' />
          <member value='&quot;Material Culture&quot;' />
          <member value='&quot;Material Science&quot;' />
          <member value='&quot;Mathematics&quot;' />
          <member value='&quot;Mechanical&quot;' />
          <member value='&quot;Mechanical Engineering&quot;' />
          <member value='&quot;Mechanical Eningeering&quot;' />
          <member value='&quot;Mechanics&quot;' />
          <member value='&quot;Media Studies&quot;' />
          <member value='&quot;Medicine&quot;' />
          <member value='&quot;Meteorology&quot;' />
          <member value='&quot;Microbiology&quot;' />
          <member value='&quot;Molecular Biology&quot;' />
          <member value='&quot;Molecular sciences&quot;' />
          <member value='&quot;MPA&quot;' />
          <member value='&quot;Museum Studies&quot;' />
          <member value='&quot;Music&quot;' />
          <member value='&quot;Nanoscience&quot;' />
          <member value='&quot;Nanotechnology&quot;' />
          <member value='&quot;Neuroscience&quot;' />
          <member value='&quot;Nuclear Engineering&quot;' />
          <member value='&quot;Nursing&quot;' />
          <member value='&quot;Nutrition&quot;' />
          <member value='&quot;Nutritional Sciences&quot;' />
          <member value='&quot;Ocean Engineering&quot;' />
          <member value='&quot;Ocean Science And Engineering&quot;' />
          <member value='&quot;Operations Management&quot;' />
          <member value='&quot;Operations Research And Financial Engineering&quot;' />
          <member value='&quot;Operations Research And Industrial Engineering&quot;' />
          <member value='&quot;Operations Research And Information Engineering&quot;' />
          <member value='&quot;Optical Science&quot;' />
          <member value='&quot;Organismic And Evolutionary Biology&quot;' />
          <member value='&quot;Pathology&quot;' />
          <member value='&quot;Petroleum Engineering&quot;' />
          <member value='&quot;Pharmaceutical Science&quot;' />
          <member value='&quot;Philosohpy&quot;' />
          <member value='&quot;Philosophy&quot;' />
          <member value='&quot;Physics&quot;' />
          <member value='&quot;Physiology&quot;' />
          <member value='&quot;Planetary Science&quot;' />
          <member value='&quot;Planning&quot;' />
          <member value='&quot;Political Science&quot;' />
          <member value='&quot;Polymer Science&quot;' />
          <member value='&quot;Population Biology&quot;' />
          <member value='&quot;Prostitution Sciences&quot;' />
          <member value='&quot;Psychology&quot;' />
          <member value='&quot;Psycology&quot;' />
          <member value='&quot;Public administration&quot;' />
          <member value='&quot;Public Administration&quot;' />
          <member value='&quot;Quantitative Research&quot;' />
          <member value='&quot;Regional Studies&quot;' />
          <member value='&quot;Religious Studies&quot;' />
          <member value='&quot;Religious studies&quot;' />
          <member value='&quot;Rhetoric And Writing&quot;' />
          <member value='&quot;Robotics&quot;' />
          <member value='&quot;Science&quot;' />
          <member value='&quot;Security Studies&quot;' />
          <member value='&quot;Social Psychology&quot;' />
          <member value='&quot;Social sciences&quot;' />
          <member value='&quot;Social Sciences&quot;' />
          <member value='&quot;Social Work&quot;' />
          <member value='&quot;Sociology&quot;' />
          <member value='&quot;Software Engineering&quot;' />
          <member value='&quot;Space Engineering&quot;' />
          <member value='&quot;Speech Pathology&quot;' />
          <member value='&quot;Statistics&quot;' />
          <member value='&quot;Statitics&quot;' />
          <member value='&quot;Student Affairs&quot;' />
          <member value='&quot;Systems Engineering&quot;' />
          <member value='&quot;Teaching&quot;' />
          <member value='&quot;Telecommunication&quot;' />
          <member value='&quot;Telecommunications&quot;' />
          <member value='&quot;Theatre Arts&quot;' />
          <member value='&quot;Theology&quot;' />
          <member value='&quot;Tourism Administration&quot;' />
          <member value='&quot;Transportation Engineering&quot;' />
          <member value='&quot;Urban Planning&quot;' />
          <member value='&quot;Urban Studies&quot;' />
          <member value='&quot;Veterinary Medicine&quot;' />
          <member value='&quot;Visual Studies&quot;' />
          <member value='&quot;Water Resources Program&quot;' />
          <member value='&quot;Womens Studies&quot;' />
          <member value='&quot;Zoology&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='GradAdmit' inline='true' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='finDataFin' name='textscan.1re1agx13tpd0217hjhpz0gegrpx'>
            <connection class='textscan' directory='C:/DIC/TermProject/TermProjFiles/Final' filename='finDataFin.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='finUniList' name='excel-direct.10dxt8k0jjh2711g89fua1qln8dr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/DIC/TermProject/TermProjFiles/Final/finUniList.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='UniLocList' name='excel-direct.0wo5vc7088jvi718kd2h10youzxi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/DIC/TermProject/TermProjFiles/Final/UniLocList.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[UniversityRankList].[University_Name]' />
                <expression op='[UniversityLoc].[dt.University_Name]' />
              </expression>
              <expression op='='>
                <expression op='[UniversityRankList].[Country]' />
                <expression op='[UniversityLoc].[dt.Country]' />
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[UniversityRankList].[Country]' />
                <expression op='[CountryData.csv].[Country]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[finDataFin.csv].[uni_name]' />
                  <expression op='[UniversityRankList].[University_Name]' />
                </expression>
              </clause>
              <relation connection='textscan.1re1agx13tpd0217hjhpz0gegrpx' name='finDataFin.csv' table='[finDataFin#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='X' ordinal='1' />
                  <column datatype='string' name='uni_name' ordinal='2' />
                  <column datatype='integer' name='rowid' ordinal='3' />
                  <column datatype='string' name='major' ordinal='4' />
                  <column datatype='string' name='degree' ordinal='5' />
                  <column datatype='string' name='season' ordinal='6' />
                  <column datatype='string' name='decision' ordinal='7' />
                  <column datatype='string' name='decision_method' ordinal='8' />
                  <column datatype='string' name='decision_date' ordinal='9' />
                  <column datatype='integer' name='decision_timestamp' ordinal='10' />
                  <column datatype='real' name='ugrad_gpa' ordinal='11' />
                  <column datatype='real' name='gre_verbal' ordinal='12' />
                  <column datatype='real' name='gre_quant' ordinal='13' />
                  <column datatype='real' name='gre_writing' ordinal='14' />
                  <column datatype='boolean' name='is_new_gre' ordinal='15' />
                  <column datatype='string' name='gre_subject' ordinal='16' />
                  <column datatype='string' name='status' ordinal='17' />
                  <column datatype='string' name='post_data' ordinal='18' />
                  <column datatype='integer' name='post_timestamp' ordinal='19' />
                  <column datatype='date' name='date' ordinal='20' />
                </columns>
              </relation>
              <relation connection='excel-direct.10dxt8k0jjh2711g89fua1qln8dr' name='UniversityRankList' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:N2589:no:A1:N2589:0' header='yes' outcome='2'>
                  <column datatype='string' name='World_Rank' ordinal='0' />
                  <column datatype='string' name='University_Name' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='real' name='Teaching_Rating' ordinal='3' />
                  <column datatype='string' name='Inter_Outlook_Rating' ordinal='4' />
                  <column datatype='real' name='Research_Rating' ordinal='5' />
                  <column datatype='real' name='Citations_Rating' ordinal='6' />
                  <column datatype='string' name='Industry_Income_Rating' ordinal='7' />
                  <column datatype='string' name='Total_Score' ordinal='8' />
                  <column datatype='integer' name='Num_Students' ordinal='9' />
                  <column datatype='real' name='Student.Staff_Ratio' ordinal='10' />
                  <column datatype='integer' name='X._Inter_Students' ordinal='11' />
                  <column datatype='string' name='X._Female_Students' ordinal='12' />
                  <column datatype='integer' name='Year' ordinal='13' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1re1agx13tpd0217hjhpz0gegrpx' name='CountryData.csv' table='[CountryData#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Country' ordinal='0' />
                <column datatype='real' name='lat' ordinal='1' />
                <column datatype='real' name='lon' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0wo5vc7088jvi718kd2h10youzxi' name='UniversityLoc' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:E792:no:A1:E792:0' header='yes' outcome='2'>
              <column datatype='string' name='F1' ordinal='0' />
              <column datatype='string' name='dt.University_Name' ordinal='1' />
              <column datatype='string' name='dt.Country' ordinal='2' />
              <column datatype='real' name='lon' ordinal='3' />
              <column datatype='real' name='lat' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Citations_Rating]' value='[UniversityRankList].[Citations_Rating]' />
          <map key='[Country (CountryData.csv)]' value='[CountryData.csv].[Country]' />
          <map key='[Country]' value='[UniversityRankList].[Country]' />
          <map key='[F1 (finDataFin.csv)]' value='[finDataFin.csv].[F1]' />
          <map key='[F1]' value='[UniversityLoc].[F1]' />
          <map key='[Industry_Income_Rating]' value='[UniversityRankList].[Industry_Income_Rating]' />
          <map key='[Inter_Outlook_Rating]' value='[UniversityRankList].[Inter_Outlook_Rating]' />
          <map key='[Num_Students]' value='[UniversityRankList].[Num_Students]' />
          <map key='[Research_Rating]' value='[UniversityRankList].[Research_Rating]' />
          <map key='[Student.Staff_Ratio]' value='[UniversityRankList].[Student.Staff_Ratio]' />
          <map key='[Teaching_Rating]' value='[UniversityRankList].[Teaching_Rating]' />
          <map key='[Total_Score]' value='[UniversityRankList].[Total_Score]' />
          <map key='[University_Name]' value='[UniversityRankList].[University_Name]' />
          <map key='[World_Rank]' value='[UniversityRankList].[World_Rank]' />
          <map key='[X._Female_Students]' value='[UniversityRankList].[X._Female_Students]' />
          <map key='[X._Inter_Students]' value='[UniversityRankList].[X._Inter_Students]' />
          <map key='[X]' value='[finDataFin.csv].[X]' />
          <map key='[Year]' value='[UniversityRankList].[Year]' />
          <map key='[date]' value='[finDataFin.csv].[date]' />
          <map key='[decision]' value='[finDataFin.csv].[decision]' />
          <map key='[decision_date]' value='[finDataFin.csv].[decision_date]' />
          <map key='[decision_method]' value='[finDataFin.csv].[decision_method]' />
          <map key='[decision_timestamp]' value='[finDataFin.csv].[decision_timestamp]' />
          <map key='[degree]' value='[finDataFin.csv].[degree]' />
          <map key='[dt.Country]' value='[UniversityLoc].[dt.Country]' />
          <map key='[dt.University_Name]' value='[UniversityLoc].[dt.University_Name]' />
          <map key='[gre_quant]' value='[finDataFin.csv].[gre_quant]' />
          <map key='[gre_subject]' value='[finDataFin.csv].[gre_subject]' />
          <map key='[gre_verbal]' value='[finDataFin.csv].[gre_verbal]' />
          <map key='[gre_writing]' value='[finDataFin.csv].[gre_writing]' />
          <map key='[is_new_gre]' value='[finDataFin.csv].[is_new_gre]' />
          <map key='[lat (CountryData.csv)]' value='[CountryData.csv].[lat]' />
          <map key='[lat]' value='[UniversityLoc].[lat]' />
          <map key='[lon (CountryData.csv)]' value='[CountryData.csv].[lon]' />
          <map key='[lon]' value='[UniversityLoc].[lon]' />
          <map key='[major]' value='[finDataFin.csv].[major]' />
          <map key='[post_data]' value='[finDataFin.csv].[post_data]' />
          <map key='[post_timestamp]' value='[finDataFin.csv].[post_timestamp]' />
          <map key='[rowid]' value='[finDataFin.csv].[rowid]' />
          <map key='[season]' value='[finDataFin.csv].[season]' />
          <map key='[status]' value='[finDataFin.csv].[status]' />
          <map key='[ugrad_gpa]' value='[finDataFin.csv].[ugrad_gpa]' />
          <map key='[uni_name]' value='[finDataFin.csv].[uni_name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (finDataFin.csv)]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uni_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[uni_name]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>uni_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rowid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rowid]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>rowid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[major]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>major</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>degree</remote-name>
            <remote-type>129</remote-type>
            <local-name>[degree]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>degree</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision_method]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>decision_method</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision_date]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>decision_date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[decision_timestamp]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>decision_timestamp</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ugrad_gpa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ugrad_gpa]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>ugrad_gpa</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_verbal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_verbal]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>gre_verbal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_quant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_quant]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>gre_quant</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_writing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_writing]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>gre_writing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_new_gre</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_new_gre]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>is_new_gre</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gre_subject]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>gre_subject</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_data</remote-name>
            <remote-type>129</remote-type>
            <local-name>[post_data]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>post_data</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[post_timestamp]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>post_timestamp</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[finDataFin.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Rank</remote-name>
            <remote-type>130</remote-type>
            <local-name>[World_Rank]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>World_Rank</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>University_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[University_Name]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>University_Name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teaching_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Teaching_Rating]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Teaching_Rating</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inter_Outlook_Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Inter_Outlook_Rating]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Inter_Outlook_Rating</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Research_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Research_Rating]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Research_Rating</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Citations_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Citations_Rating]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Citations_Rating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry_Income_Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry_Income_Rating]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Industry_Income_Rating</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total_Score]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Total_Score</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Students]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Num_Students</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student.Staff_Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Student.Staff_Ratio]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Student.Staff_Ratio</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X._Inter_Students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X._Inter_Students]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>X._Inter_Students</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X._Female_Students</remote-name>
            <remote-type>130</remote-type>
            <local-name>[X._Female_Students]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>X._Female_Students</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UniversityRankList]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N2589:no:A1:N2589:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (CountryData.csv)]</local-name>
            <parent-name>[CountryData.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat (CountryData.csv)]</local-name>
            <parent-name>[CountryData.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon (CountryData.csv)]</local-name>
            <parent-name>[CountryData.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CountryData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt.University_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dt.University_Name]</local-name>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias>dt.University_Name</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt.Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[dt.Country]</local-name>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias>dt.Country</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UniversityLoc]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E792:no:A1:E792:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
      </column>
      <column caption='Citations Rating' datatype='real' name='[Citations_Rating]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country (CountryData.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
      </column>
      <column caption='Industry Income Rating' datatype='string' name='[Industry_Income_Rating]' role='dimension' type='nominal' />
      <column caption='Inter Outlook Rating' datatype='string' name='[Inter_Outlook_Rating]' role='dimension' type='nominal' />
      <column caption='Num Students' datatype='integer' name='[Num_Students]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='WritingLevel' datatype='string' name='[QuantLevel (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF(AVG([gre_writing]) &lt;= [Parameters].[GREVerbal (copy)] AND AVG([gre_writing]) &gt;= [Parameters].[GREVerbal (copy)]-0.5)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(AVG([gre_writing]) &gt; [Parameters].[GREVerbal (copy)] AND AVG([gre_writing]) &lt;= [Parameters].[GREVerbal (copy)]+0.5)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(AVG([gre_writing]) &gt; [Parameters].[GREVerbal (copy)]+0.5 AND AVG([gre_writing]) &lt;= [Parameters].[GREVerbal (copy)]+2)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(AVG([gre_writing]) &gt;= [Parameters].[GREVerbal (copy)]-2 AND AVG([gre_writing]) &lt; [Parameters].[GREVerbal (copy)]-0.5)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(AVG([gre_writing]) &lt; [Parameters].[GREVerbal (copy)]-2)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
      </column>
      <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
      </column>
      <column caption='Research Rating' datatype='real' name='[Research_Rating]' role='measure' type='quantitative' />
      <column caption='Student.Staff Ratio' datatype='real' name='[Student.Staff_Ratio]' role='measure' type='quantitative' />
      <column caption='Teaching Rating' datatype='real' name='[Teaching_Rating]' role='measure' type='quantitative' />
      <column caption='Total Score' datatype='string' name='[Total_Score]' role='dimension' type='nominal' />
      <column caption='University Name' datatype='string' name='[University_Name]' role='dimension' type='nominal' />
      <column caption='VerbalLev' datatype='string' name='[VerbalLevel (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF(AVG([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND AVG([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(AVG([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND AVG([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(AVG([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND AVG([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(AVG([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND AVG([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(AVG([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
      </column>
      <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
      </column>
      <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='X. Female Students' datatype='string' default-role='measure' default-type='quantitative' name='[X._Female_Students]' role='dimension' type='nominal' />
      <column caption='X. Inter Students' datatype='integer' name='[X._Inter_Students]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
      <column caption='Decision Date' datatype='string' name='[decision_date]' role='dimension' type='nominal' />
      <column caption='Decision Method' datatype='string' name='[decision_method]' role='dimension' type='nominal' />
      <column caption='Decision Timestamp' datatype='integer' name='[decision_timestamp]' role='measure' type='quantitative' />
      <column caption='Degree' datatype='string' name='[degree]' role='dimension' type='nominal' />
      <column datatype='string' name='[dt.Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='dt.University Name' datatype='string' name='[dt.University_Name]' role='dimension' type='nominal' />
      <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
      <column caption='Gre Subject' datatype='string' name='[gre_subject]' role='dimension' type='nominal' />
      <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
      <column caption='Gre Writing' datatype='real' name='[gre_writing]' role='measure' type='quantitative' />
      <column caption='Is New Gre' datatype='boolean' name='[is_new_gre]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[lat (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[lon (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
      <column caption='Post Data' datatype='string' name='[post_data]' role='dimension' type='nominal' />
      <column caption='Post Timestamp' datatype='integer' name='[post_timestamp]' role='measure' type='quantitative' />
      <column caption='Rowid' datatype='integer' name='[rowid]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
      <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
      <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gre_writing]' derivation='Avg' name='[avg:gre_writing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[World_Rank]' derivation='None' name='[none:World_Rank:nk]' pivot='key' type='nominal' />
      <column-instance column='[degree]' derivation='None' name='[none:degree:nk]' pivot='key' type='nominal' />
      <column-instance column='[lat (CountryData.csv)]' derivation='None' name='[none:lat (CountryData.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
      <column-instance column='[lon (CountryData.csv)]' derivation='None' name='[none:lon (CountryData.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[lon]' derivation='None' name='[none:lon:ok]' pivot='key' type='ordinal' />
      <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
      <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
      <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[ugrad_gpa]' derivation='Sum' name='[sum:ugrad_gpa:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
      <group caption='Action (Country (CountryData.csv),lat (CountryData.csv),lon (CountryData.csv))' hidden='true' name='[Action (Country (CountryData.csv),lat (CountryData.csv),lon (CountryData.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country (CountryData.csv)]' />
          <groupfilter function='level-members' level='[none:lat (CountryData.csv):ok]' />
          <groupfilter function='level-members' level='[none:lon (CountryData.csv):ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Lat,Lon)' hidden='true' name='[Action (Lat,Lon)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:lat:ok]' />
          <groupfilter function='level-members' level='[none:lon:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (World Rank,Lat,Lon)' hidden='true' name='[Action (World Rank,Lat,Lon)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[World_Rank]' />
          <groupfilter function='level-members' level='[none:lat:ok]' />
          <groupfilter function='level-members' level='[none:lon:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/DIC/TermProject/TermProjFiles/Final/finDataFin.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 04:48:11 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Citations_Rating]' value='[Extract].[Citations_Rating]' />
            <map key='[Country (CountryData.csv)]' value='[Extract].[Country]' />
            <map key='[Country]' value='[Extract].[Country1]' />
            <map key='[F1 (finDataFin.csv)]' value='[Extract].[F1]' />
            <map key='[F1]' value='[Extract].[F11]' />
            <map key='[Industry_Income_Rating]' value='[Extract].[Industry_Income_Rating]' />
            <map key='[Inter_Outlook_Rating]' value='[Extract].[Inter_Outlook_Rating]' />
            <map key='[Num_Students]' value='[Extract].[Num_Students]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Research_Rating]' value='[Extract].[Research_Rating]' />
            <map key='[Student.Staff_Ratio]' value='[Extract].[Student.Staff_Ratio]' />
            <map key='[Teaching_Rating]' value='[Extract].[Teaching_Rating]' />
            <map key='[Total_Score]' value='[Extract].[Total_Score]' />
            <map key='[University_Name]' value='[Extract].[University_Name]' />
            <map key='[World_Rank]' value='[Extract].[World_Rank]' />
            <map key='[X._Female_Students]' value='[Extract].[X._Female_Students]' />
            <map key='[X._Inter_Students]' value='[Extract].[X._Inter_Students]' />
            <map key='[X]' value='[Extract].[X]' />
            <map key='[Year]' value='[Extract].[Year]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[decision]' value='[Extract].[decision]' />
            <map key='[decision_date]' value='[Extract].[decision_date]' />
            <map key='[decision_method]' value='[Extract].[decision_method]' />
            <map key='[decision_timestamp]' value='[Extract].[decision_timestamp]' />
            <map key='[degree]' value='[Extract].[degree]' />
            <map key='[dt.Country]' value='[Extract].[dt.Country]' />
            <map key='[dt.University_Name]' value='[Extract].[dt.University_Name]' />
            <map key='[gre_quant]' value='[Extract].[gre_quant]' />
            <map key='[gre_subject]' value='[Extract].[gre_subject]' />
            <map key='[gre_verbal]' value='[Extract].[gre_verbal]' />
            <map key='[gre_writing]' value='[Extract].[gre_writing]' />
            <map key='[is_new_gre]' value='[Extract].[is_new_gre]' />
            <map key='[lat (CountryData.csv)]' value='[Extract].[lat]' />
            <map key='[lat]' value='[Extract].[lat1]' />
            <map key='[lon (CountryData.csv)]' value='[Extract].[lon]' />
            <map key='[lon]' value='[Extract].[lon1]' />
            <map key='[major]' value='[Extract].[major]' />
            <map key='[post_data]' value='[Extract].[post_data]' />
            <map key='[post_timestamp]' value='[Extract].[post_timestamp]' />
            <map key='[rowid]' value='[Extract].[rowid]' />
            <map key='[season]' value='[Extract].[season]' />
            <map key='[status]' value='[Extract].[status]' />
            <map key='[ugrad_gpa]' value='[Extract].[ugrad_gpa]' />
            <map key='[uni_name]' value='[Extract].[uni_name]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='218312' timestamp-start='2017-05-07 16:48:11.338' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Citations_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Citations_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Citations_Rating</remote-alias>
              <ordinal>0</ordinal>
              <family>UniversityRankList</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>499</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.5999999999999996</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>36</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (CountryData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>CountryData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States of America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>2</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States of America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1 (finDataFin.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>3</ordinal>
              <family>finDataFin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>2576</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F11</remote-alias>
              <ordinal>4</ordinal>
              <family>UniversityLoc</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry_Income_Rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Industry_Income_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry_Income_Rating</remote-alias>
              <ordinal>5</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>395</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inter_Outlook_Rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Inter_Outlook_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Inter_Outlook_Rating</remote-alias>
              <ordinal>6</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>553</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Students</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Num_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Students</remote-alias>
              <ordinal>7</ordinal>
              <family>UniversityRankList</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>207</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1855</statistic>
                <statistic aggregation='Max' datatype='integer'>137378</statistic>
                <statistic aggregation='Count' datatype='integer'>215058</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Research_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Research_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Research_Rating</remote-alias>
              <ordinal>9</ordinal>
              <family>UniversityRankList</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>560</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>99.400000000000006</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>38</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Student.Staff_Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Student.Staff_Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Student.Staff_Ratio</remote-alias>
              <ordinal>10</ordinal>
              <family>UniversityRankList</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.1000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>85.799999999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>215058</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teaching_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Teaching_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teaching_Rating</remote-alias>
              <ordinal>11</ordinal>
              <family>UniversityRankList</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>513</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11.6</statistic>
                <statistic aggregation='Max' datatype='real'>99.700000000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>37</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_Score</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Total_Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Score</remote-alias>
              <ordinal>12</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>346</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;96.1&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>University_Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[University_Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>University_Name</remote-alias>
              <ordinal>13</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalto University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World_Rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[World_Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World_Rank</remote-alias>
              <ordinal>14</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>204</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X._Female_Students</remote-name>
              <remote-type>129</remote-type>
              <local-name>[X._Female_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X._Female_Students</remote-alias>
              <ordinal>15</ordinal>
              <family>UniversityRankList</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;17&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;71&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>199511</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X._Inter_Students</remote-name>
              <remote-type>16</remote-type>
              <local-name>[X._Inter_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X._Inter_Students</remote-alias>
              <ordinal>16</ordinal>
              <family>UniversityRankList</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>52</statistic>
                <statistic aggregation='Count' datatype='integer'>215058</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X</remote-name>
              <remote-type>3</remote-type>
              <local-name>[X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X</remote-alias>
              <ordinal>17</ordinal>
              <family>finDataFin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40890</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4763166942.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21818.163646524241</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>43553</statistic>
                <statistic aggregation='Stdev' datatype='real'>12567.222699393431</statistic>
                <statistic aggregation='StdevP' datatype='real'>12567.193916648801</statistic>
                <statistic aggregation='Var' datatype='real'>157935086.37614951</statistic>
                <statistic aggregation='VarP' datatype='real'>157934362.93865463</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>138402522458134.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>41</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>18</ordinal>
              <family>UniversityRankList</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>439586105.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2013.5682188794019</statistic>
                <statistic aggregation='Min' datatype='integer'>2011</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7010898736860358</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.701085977675231</statistic>
                <statistic aggregation='Var' datatype='real'>2.8937067583571734</statistic>
                <statistic aggregation='VarP' datatype='real'>2.8936935034432962</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>885137242217.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>19</ordinal>
              <family>finDataFin.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2009-08-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-08-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
                <statistic aggregation='Median' datatype='date'>#2013-08-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision</remote-alias>
              <ordinal>20</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accepted&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wait listed&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218263</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_date</remote-alias>
              <ordinal>21</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1276</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(1, 1, 2011)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(9, 6, 2015)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218247</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_method</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision_method]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_method</remote-alias>
              <ordinal>22</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;E-mail&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Website&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_timestamp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[decision_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_timestamp</remote-alias>
              <ordinal>23</ordinal>
              <family>finDataFin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1274</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1232946000</statistic>
                <statistic aggregation='Max' datatype='integer'>13601192400</statistic>
                <statistic aggregation='Count' datatype='integer'>218229</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>40</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>degree</remote-name>
              <remote-type>129</remote-type>
              <local-name>[degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>degree</remote-alias>
              <ordinal>24</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;MA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PhD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt.Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dt.Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dt.Country</remote-alias>
              <ordinal>25</ordinal>
              <family>UniversityLoc</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States of America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dt.University_Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dt.University_Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dt.University_Name</remote-alias>
              <ordinal>26</ordinal>
              <family>UniversityLoc</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalto University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_quant</remote-name>
              <remote-type>4</remote-type>
              <local-name>[gre_quant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_quant</remote-alias>
              <ordinal>27</ordinal>
              <family>finDataFin.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.5</statistic>
                <statistic aggregation='Max' datatype='real'>170.0</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gre_subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_subject</remote-alias>
              <ordinal>28</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;310&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_verbal</remote-name>
              <remote-type>4</remote-type>
              <local-name>[gre_verbal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_verbal</remote-alias>
              <ordinal>29</ordinal>
              <family>finDataFin.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.5</statistic>
                <statistic aggregation='Max' datatype='real'>170.0</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_writing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gre_writing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_writing</remote-alias>
              <ordinal>30</ordinal>
              <family>finDataFin.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.29999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>6.0</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_new_gre</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_new_gre]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_new_gre</remote-alias>
              <ordinal>31</ordinal>
              <family>finDataFin.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat (CountryData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>32</ordinal>
              <family>CountryData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-25.274398000000001</statistic>
                <statistic aggregation='Max' datatype='real'>61.924109999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat1</remote-alias>
              <ordinal>33</ordinal>
              <family>UniversityLoc</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-38.153201199999998</statistic>
                <statistic aggregation='Max' datatype='real'>64.857220799999993</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon (CountryData.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon</remote-alias>
              <ordinal>34</ordinal>
              <family>CountryData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-106.346771</statistic>
                <statistic aggregation='Max' datatype='real'>138.25292400000001</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon1</remote-alias>
              <ordinal>35</ordinal>
              <family>UniversityLoc</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-147.79919910000001</statistic>
                <statistic aggregation='Max' datatype='real'>151.1873473</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>major</remote-name>
              <remote-type>129</remote-type>
              <local-name>[major]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>major</remote-alias>
              <ordinal>36</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Planning&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>post_data</remote-name>
              <remote-type>129</remote-type>
              <local-name>[post_data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>post_data</remote-alias>
              <ordinal>37</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1260</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(1, 1, 2012)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(9, 8, 2012)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>post_timestamp</remote-name>
              <remote-type>3</remote-type>
              <local-name>[post_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>post_timestamp</remote-alias>
              <ordinal>38</ordinal>
              <family>finDataFin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1260</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1263272400</statistic>
                <statistic aggregation='Max' datatype='integer'>1447650000</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>39</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rowid</remote-name>
              <remote-type>3</remote-type>
              <local-name>[rowid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rowid</remote-alias>
              <ordinal>39</ordinal>
              <family>finDataFin.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40890</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>22055586012.0</statistic>
                <statistic aggregation='Avg' datatype='real'>101027.82262083623</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>221891</statistic>
                <statistic aggregation='Stdev' datatype='real'>60413.959000360912</statistic>
                <statistic aggregation='StdevP' datatype='real'>60413.820634104857</statistic>
                <statistic aggregation='Var' datatype='real'>3649846442.0972891</statistic>
                <statistic aggregation='VarP' datatype='real'>3649829723.6097937</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3025029458039634.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>42</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>40</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F09&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;S16&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218207</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>status</remote-alias>
              <ordinal>41</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>214426</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ugrad_gpa</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ugrad_gpa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ugrad_gpa</remote-alias>
              <ordinal>42</ordinal>
              <family>finDataFin.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.0</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>uni_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[uni_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>uni_name</remote-alias>
              <ordinal>43</ordinal>
              <family>finDataFin.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalto University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>218312</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.461121' measure-ordering='alphabetic' measure-percentage='0.25859' parameter-percentage='0.280289' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:uni_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bangor University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Duke University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kent State University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New York University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Diego State University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Amsterdam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Connecticut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Kentucky&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Oklahoma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University of Sydney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Utrecht University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arizona State University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clemson University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia State University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East Technical University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pennsylvania State University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tsinghua University&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of California, Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Miami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of South Dakota&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University of Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aligarh Muslim University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cornell University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iowa State University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nanyang Technological University&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen Mary University of London&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University College London&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of California, Santa Cruz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Illinois at Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Southern Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University of Wisconsin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brown University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erasmus University Rotterdam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lund University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakland University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanford University&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Bologna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of East Anglia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Pennsylvania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University of Tokyo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington University in St Louis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bilkent University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Durham University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lehigh University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Carolina State University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shanghai Jiao Tong University&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Arizona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Copenhagen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Lausanne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Oregon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University of Tehran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanderbilt University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;American University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dalhousie University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johns Hopkins University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;National Autonomous University of Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rice University&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Aberdeen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Cambridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Iowa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of St Andrews&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University of Wyoming&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China Agricultural University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia Health Sciences University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michigan State University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oregon State University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas Tech University&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of California, Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Glasgow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Massachusetts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Sheffield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University of Victoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aalto University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado State University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harvard University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Missouri University of Science and Technology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portland State University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tufts University&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of California, Riverside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Houston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of South Florida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University of Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carnegie Mellon University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Washington University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Memorial University of Newfoundland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Old Dominion University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Temple University&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Calgary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Florida&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Maryland, Baltimore County&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University of Utah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;York University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auburn University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dartmouth College&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kansas State University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;National University of Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rush University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Alaska Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Chicago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Kansas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Notre Dame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Strathclyde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University of Zurich&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;California State University, Long Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florida International University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maastricht University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio State University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stockholm University&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Bonn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Edinburgh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Manchester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Pittsburgh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;University of Toledo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wayne State University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cardiff University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florida State University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Massachusetts Institute of Technology&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syracuse University&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Bristol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Essex&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Manitoba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Regina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University of Toronto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yale University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Case Western Reserve University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgetown University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Miami University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon Health and Science University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texas A&amp;M University&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of California, Berkeley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Maryland, College Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Saskatchewan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University of Vermont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zhejiang University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;City University London&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia Institute of Technology&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michigan Technological University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peking University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tilburg University&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of California, Irvine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Guelph&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Melbourne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University of Virginia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boston University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eindhoven University of Technology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leiden University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northeastern University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Simon Fraser University&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Arkansas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Delaware&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Leeds&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Ottawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University of Tennessee, Knoxville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wake Forest University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australian National University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drexel University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Keele University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Mexico State University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Louis University&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Alberta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Cincinnati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Kent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Nottingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Stuttgart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uppsala University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aberystwyth University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howard University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monash University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Princeton University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tulane University&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of California, San Diego&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Ibadan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Southampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University of Waterloo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carleton University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;George Mason University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McMaster University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma State University&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Technical University of Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of British Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Exeter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Mannheim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Rochester&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University of Tulsa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yeshiva University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brandeis University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Emory University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisiana State University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northwestern University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern Methodist University&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Birmingham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Dhaka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Leicester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Oxford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University of Texas at Austin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington State University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexandria University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concordia University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indiana University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montana State University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Purdue University&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University College Dublin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of California, Santa Barbara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Idaho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Southern California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University of Western Ontario&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;International with US Degree&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:degree:nk]' type='palette'>
            <map to='#31a1b3'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PhD&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MBA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MFA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MEng&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:major:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aeronautics &amp; Astronautics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Applied science&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bioinformatics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Conflict Resolution&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;English&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Governmental studies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Language studies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Material Science&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nutrition&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Polymer Science&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Software Engineering&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zoology&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Planning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthroplogy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Automotive Engineering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Communciation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecology&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fine Art&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Intelligent Systems&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lingusitics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MPA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pharmaceutical Science&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robotics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tourism Administration&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Actuarial Science&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Applied Developmental Studies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bilingualeslmulticultural Education&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comparative And General Literature&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electrical and Computer Engineering&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Genetics&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;International studies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Management studies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nanotechnology&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Physiology&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Social Sciences&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Veterinary Medicine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;African Studies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Architecture&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biophysics&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cultural Studies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Environmental studies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Human Centered Design&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin American Studies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mechanical Eningeering&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Operations Management&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Psycology&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Statitics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aerospace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Applied Statistics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Biology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Counseling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Health Sciences&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Languages And Civilization&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mathematics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nutritional Sciences&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Population Biology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Space Engineering&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Administration&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Applied Economics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bims&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computational Analysis &amp; Public Policy (Harris School Of Public Policy)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electrical Engineering&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Geography&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Intustrial Engineering&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marine Biology&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neuroscience&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Planetary Science&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Social sciences&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Visual Studies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Analytical Chemistry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astrophysics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cognitive Science&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E-Business&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Film&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Limnology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Molecular Biology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pathology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Religious studies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Theatre Arts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abbs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthropology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Behavior Analysis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Communication&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Food Science&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Interaction Design&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macromolecular Science And Engineering&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Museum Studies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philosohpy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Science&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Transportation Engineering&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;American &amp; New England Studies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Asian Languages &amp; Cultures&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chemistry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethnic Studies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Industrial Engineering&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Life Science&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meteorology&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Optical Science&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Regional Studies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Telecommunication&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Applied Mathematics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Biochemical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Computational Biology&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Electronic Engineering&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Geology&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Journalism&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marketing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nuclear Engineering&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Planning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Social Work&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Water Resources Program&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Africana Studies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bioscience&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dance Studies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Environmental Studies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Human Development&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mechanics&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Operations Research And Financial Engineering&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Public administration&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Student Affairs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Agricultural &amp; Reource Economics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Biotechnology&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Data Science&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Environmental Studies &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hydrological Sciences&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberal Studies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Media Studies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Operations Research And Industrial Engineering&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Public Administration&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Systems Engineering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American Studies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astronautical Engineering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Civil Engineering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Feminist Studies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Information Science&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lifespan / Developmental&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Microbiology&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Organismic And Evolutionary Biology&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Religious Studies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ancient History&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Audiology&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cognitive Sciences&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Earth &amp; Planetary Sciences&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Instructional Technology&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Linguistics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Molecular sciences&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petroleum Engineering&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhetoric And Writing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Theology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Affective Science&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arabic Studies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Biomedical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Creative Writing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Enviromental Studies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;History&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Languages and Literature&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mechanical&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ocean Engineering&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prostitution Sciences&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Speech Pathology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aerec&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Applied Science&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biochemistry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Computer Science&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kinesiology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Material Culture&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nursing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Political Science&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sociology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Womens Studies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Access&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apparel Design&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bible (Hebrew Bible)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Communication And Journalism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Foreign Studies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International Relations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Management&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philosophy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Security Studies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Urban Planning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alternative Medicine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asian Cultures&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chemical Engineering&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Divinity&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Epidemiology&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Immunology&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Library Science&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Operations Research And Information Engineering&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quantitative Research&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Teaching&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;African American Studies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Archaeology&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biomedical Sciences&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Criminal Justice&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Environmental Science&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Horticulture&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Languages And Literatures&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mechanical Engineering&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ocean Science And Engineering&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Psychology&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Statistics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Accounting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Applied Developmental Sciences&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Biblical And Theological Studies (Nt)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Community Development&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Educational Studies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forestry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;International Studies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Management Studies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nanoscience&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Physics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Social Psychology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Urban Studies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:World_Rank:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;111&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;131&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;151&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;174&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;195&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;29&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;49&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;69&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;90&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;102&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;123&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;143&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;164&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;186&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;351&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;41&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;61&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;81&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;107&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;127&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;147&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;169&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;190&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;65&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;86&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;115&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;135&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;156&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;178&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;199&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;53&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;73&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;94&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;112&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;132&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;152&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;175&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;196&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;50&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;91&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;108&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;128&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;148&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;171&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;191&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;66&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;87&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;100&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;121&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;141&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;162&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;184&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;301&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;59&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;79&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;103&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;124&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;144&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;165&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;187&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;401&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;82&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;119&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;139&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;160&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;182&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;251&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;57&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;77&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;109&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;129&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;149&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;172&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;193&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;67&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;88&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;116&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;136&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;157&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;179&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;200&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;54&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;74&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;95&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;117&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;137&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;158&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;180&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;201&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;55&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;75&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;96&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;120&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;140&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;161&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;183&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;276&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;58&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;78&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;101&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;122&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;142&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;163&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;185&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;350&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;60&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;80&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;113&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;133&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;153&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;176&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;197&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;51&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;71&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;92&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;110&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;130&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;150&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;173&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;194&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;68&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;89&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;104&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;125&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;145&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;167&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;188&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;23&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;43&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;501&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;83&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;118&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;138&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;159&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;181&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;226&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;56&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;76&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;97&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;114&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;134&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;154&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;177&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;198&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;72&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;93&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;106&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;126&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;146&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;168&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;189&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;601&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;64&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;85&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:status:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;American&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Other&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;International with US Degree&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;International&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[usr:GPALevel (copy):nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;Very Safe&quot;</bucket>
            </map>
            <map to='#8ace7e'>
              <bucket>&quot;Safe&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;Very Ambitious&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;Ambitious&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moderate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[sum:ugrad_gpa:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_writing:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
          <calculation class='tableau' formula='162' />
          <range max='170' min='1' />
        </column>
        <column caption='GREWriting' datatype='real' datatype-customized='true' name='[GREVerbal (copy)]' param-domain-type='range' role='measure' type='quantitative' value='3.0'>
          <calculation class='tableau' formula='3.0' />
          <range max='6.0' min='1.0' />
        </column>
        <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
          <calculation class='tableau' formula='4.0' />
          <range max='4.0' min='1.0' />
        </column>
        <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
          <calculation class='tableau' formula='162' />
          <range max='170' min='1' />
        </column>
        <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
          <calculation class='tableau' formula='&quot;Computer Science&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='WorldRankings' inline='true' name='federated.1lnhzl416ekhpq13j1c7q19n3qor' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='finUniList' name='excel-direct.0wgry8d0s7uu4w1c4vbpu1928nc3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/DIC/TermProject/TermProjFiles/Final/finUniList.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0wgry8d0s7uu4w1c4vbpu1928nc3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:N2589:no:A1:N2589:0' header='yes' outcome='2'>
            <column datatype='string' name='World_Rank' ordinal='0' />
            <column datatype='string' name='University_Name' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='real' name='Teaching_Rating' ordinal='3' />
            <column datatype='real' name='Inter_Outlook_Rating' ordinal='4' />
            <column datatype='real' name='Research_Rating' ordinal='5' />
            <column datatype='real' name='Citations_Rating' ordinal='6' />
            <column datatype='string' name='Industry_Income_Rating' ordinal='7' />
            <column datatype='string' name='Total_Score' ordinal='8' />
            <column datatype='integer' name='Num_Students' ordinal='9' />
            <column datatype='real' name='Student.Staff_Ratio' ordinal='10' />
            <column datatype='integer' name='X._Inter_Students' ordinal='11' />
            <column datatype='string' name='X._Female_Students' ordinal='12' />
            <column datatype='integer' name='Year' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>World_Rank</remote-name>
            <remote-type>130</remote-type>
            <local-name>[World_Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>World_Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>University_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[University_Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>University_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teaching_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Teaching_Rating]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Teaching_Rating</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inter_Outlook_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inter_Outlook_Rating]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Inter_Outlook_Rating</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Research_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Research_Rating]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Research_Rating</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Citations_Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Citations_Rating]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Citations_Rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry_Income_Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Industry_Income_Rating]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Industry_Income_Rating</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Total_Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Score</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Students]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Num_Students</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student.Staff_Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Student.Staff_Ratio]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Student.Staff_Ratio</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X._Inter_Students</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X._Inter_Students]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>X._Inter_Students</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X._Female_Students</remote-name>
            <remote-type>130</remote-type>
            <local-name>[X._Female_Students]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>X._Female_Students</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N2589:no:A1:N2589:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Citations Rating' datatype='real' name='[Citations_Rating]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Industry Income Rating' datatype='string' name='[Industry_Income_Rating]' role='dimension' type='nominal' />
      <column caption='Inter Outlook Rating' datatype='real' name='[Inter_Outlook_Rating]' role='measure' type='quantitative' />
      <column caption='Num Students' datatype='integer' name='[Num_Students]' role='measure' type='quantitative' />
      <column caption='Research Rating' datatype='real' name='[Research_Rating]' role='measure' type='quantitative' />
      <column caption='Teaching Rating' datatype='real' name='[Teaching_Rating]' role='measure' type='quantitative' />
      <column caption='Total Score' datatype='string' name='[Total_Score]' role='dimension' type='nominal' />
      <column caption='University Name' datatype='string' name='[University_Name]' role='dimension' type='nominal' />
      <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/DIC/TermProject/TermProjFiles/Final/WorldRankings.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 05:49:33 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2588' timestamp-start='2017-05-07 05:49:33.197' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Citations_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Citations_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Citations_Rating</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>847</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>157346.49999999977</statistic>
                <statistic aggregation='Avg' datatype='real'>60.798493044822166</statistic>
                <statistic aggregation='Min' datatype='real'>1.2</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>23.064788700982923</statistic>
                <statistic aggregation='StdevP' datatype='real'>23.060332167524074</statistic>
                <statistic aggregation='Var' datatype='real'>531.98447782098958</statistic>
                <statistic aggregation='VarP' datatype='real'>531.77891967654557</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10942673.929999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Argentina&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unted Kingdom&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry_Income_Rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Industry_Income_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry_Income_Rating</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>612</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99.9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inter_Outlook_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Inter_Outlook_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Inter_Outlook_Rating</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>802</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>133895.60000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>51.737094281298312</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>99.900000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>22.250447100948541</statistic>
                <statistic aggregation='StdevP' datatype='real'>22.246147912984355</statistic>
                <statistic aggregation='Var' datatype='real'>495.08239619210929</statistic>
                <statistic aggregation='VarP' datatype='real'>494.8910969663782</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8208147.4399999939</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Students</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Num_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Students</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>795</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>60518411.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23929.778964017398</statistic>
                <statistic aggregation='Min' datatype='integer'>462</statistic>
                <statistic aggregation='Max' datatype='integer'>379231</statistic>
                <statistic aggregation='Stdev' datatype='real'>17693.483604778445</statistic>
                <statistic aggregation='StdevP' datatype='real'>17689.985140363671</statistic>
                <statistic aggregation='Var' datatype='real'>313059362.07256365</statistic>
                <statistic aggregation='VarP' datatype='real'>312935574.26628745</statistic>
                <statistic aggregation='Count' datatype='integer'>2529</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2239606265803.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Research_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Research_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Research_Rating</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>738</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>92739.100000000079</statistic>
                <statistic aggregation='Avg' datatype='real'>35.834273570324605</statistic>
                <statistic aggregation='Min' datatype='real'>2.8999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>99.400000000000006</statistic>
                <statistic aggregation='Stdev' datatype='real'>21.24926092927279</statistic>
                <statistic aggregation='StdevP' datatype='real'>21.24515518854675</statistic>
                <statistic aggregation='Var' datatype='real'>451.53109004031916</statistic>
                <statistic aggregation='VarP' datatype='real'>451.35661898543492</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4491349.209999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Student.Staff_Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Student.Staff_Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Student.Staff_Ratio</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>309</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>46661.60000000013</statistic>
                <statistic aggregation='Avg' datatype='real'>18.450612890470595</statistic>
                <statistic aggregation='Min' datatype='real'>0.59999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>162.59999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.450787684164927</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.448523563987747</statistic>
                <statistic aggregation='Var' datatype='real'>131.12053858782318</statistic>
                <statistic aggregation='VarP' datatype='real'>131.0686917951827</statistic>
                <statistic aggregation='Count' datatype='integer'>2529</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1192407.8400000019</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Teaching_Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Teaching_Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Teaching_Rating</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>665</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>97586.600000000093</statistic>
                <statistic aggregation='Avg' datatype='real'>37.707341576506991</statistic>
                <statistic aggregation='Min' datatype='real'>9.9000000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>99.700000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.584119330039762</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.580721760820524</statistic>
                <statistic aggregation='Var' datatype='real'>309.20125261307805</statistic>
                <statistic aggregation='VarP' datatype='real'>309.08177763138826</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4479634.8999999939</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_Score</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Total_Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Score</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>414</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;96.1&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>University_Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[University_Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>University_Name</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>820</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aalborg University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zhejiang University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World_Rank</remote-name>
              <remote-type>129</remote-type>
              <local-name>[World_Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World_Rank</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X._Female_Students</remote-name>
              <remote-type>129</remote-type>
              <local-name>[X._Female_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X._Female_Students</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>70</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>2355</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X._Inter_Students</remote-name>
              <remote-type>16</remote-type>
              <local-name>[X._Inter_Students]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X._Inter_Students</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38810.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15.39468464894883</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>82</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.558121239916886</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.556026997857227</statistic>
                <statistic aggregation='Var' datatype='real'>111.47392411678409</statistic>
                <statistic aggregation='VarP' datatype='real'>111.42970597949065</statistic>
                <statistic aggregation='Count' datatype='integer'>2521</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>878382.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5212468.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2014.0911901081915</statistic>
                <statistic aggregation='Min' datatype='integer'>2011</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.677804713469105</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.6774805313168242</statistic>
                <statistic aggregation='Var' datatype='real'>2.8150286565391456</statistic>
                <statistic aggregation='VarP' datatype='real'>2.8139409329469744</statistic>
                <statistic aggregation='Count' datatype='integer'>2588</statistic>
                <statistic aggregation='Median' datatype='integer'>2014</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10498393160.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.262206' measure-ordering='alphabetic' measure-percentage='0.533454' parameter-percentage='0.20434' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='UnivStatByYear' inline='true' name='federated.1cawt361bttebc1baar1n1802oem' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='UnivStatByYear' name='textscan.1tc427d1vqti1b148zefz1ovn8kk'>
            <connection class='textscan' directory='C:/DIC/TermProject/TermProjFiles/Final' filename='UnivStatByYear.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1tc427d1vqti1b148zefz1ovn8kk' name='UnivStatByYear.csv' table='[UnivStatByYear#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='X' ordinal='1' />
            <column datatype='string' name='uni_name' ordinal='2' />
            <column datatype='integer' name='rowid' ordinal='3' />
            <column datatype='string' name='major' ordinal='4' />
            <column datatype='string' name='degree' ordinal='5' />
            <column datatype='string' name='season' ordinal='6' />
            <column datatype='string' name='decision' ordinal='7' />
            <column datatype='string' name='decision_method' ordinal='8' />
            <column datatype='string' name='decision_date' ordinal='9' />
            <column datatype='integer' name='decision_timestamp' ordinal='10' />
            <column datatype='real' name='ugrad_gpa' ordinal='11' />
            <column datatype='real' name='gre_verbal' ordinal='12' />
            <column datatype='real' name='gre_quant' ordinal='13' />
            <column datatype='real' name='gre_writing' ordinal='14' />
            <column datatype='boolean' name='is_new_gre' ordinal='15' />
            <column datatype='string' name='gre_subject' ordinal='16' />
            <column datatype='string' name='status' ordinal='17' />
            <column datatype='string' name='post_data' ordinal='18' />
            <column datatype='integer' name='post_timestamp' ordinal='19' />
            <column datatype='date' name='date' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>X</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uni_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[uni_name]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>uni_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rowid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rowid]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>rowid</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[major]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>major</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>degree</remote-name>
            <remote-type>129</remote-type>
            <local-name>[degree]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>degree</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision_method]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>decision_method</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[decision_date]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>decision_date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>decision_timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[decision_timestamp]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>decision_timestamp</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ugrad_gpa</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ugrad_gpa]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>ugrad_gpa</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_verbal</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_verbal]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>gre_verbal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_quant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_quant]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>gre_quant</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_writing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gre_writing]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>gre_writing</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_new_gre</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_new_gre]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>is_new_gre</remote-alias>
            <ordinal>15</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gre_subject</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gre_subject]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>gre_subject</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>status</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_data</remote-name>
            <remote-type>129</remote-type>
            <local-name>[post_data]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>post_data</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_timestamp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[post_timestamp]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>post_timestamp</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UnivStatByYear.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='UniversityName' datatype='string' name='[Calculation_843580509123076102]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF([Parameters].[MajorParam (copy)] == [uni_name])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
      <column caption='Decision Date' datatype='string' name='[decision_date]' role='dimension' type='nominal' />
      <column caption='Decision Method' datatype='string' name='[decision_method]' role='dimension' type='nominal' />
      <column caption='Decision Timestamp' datatype='integer' name='[decision_timestamp]' role='measure' type='quantitative' />
      <column caption='Degree' datatype='string' name='[degree]' role='dimension' type='nominal' />
      <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
      <column caption='Gre Subject' datatype='string' name='[gre_subject]' role='dimension' type='nominal' />
      <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
      <column caption='Gre Writing' datatype='real' name='[gre_writing]' role='measure' type='quantitative' />
      <column caption='Is New Gre' datatype='boolean' name='[is_new_gre]' role='dimension' type='nominal' />
      <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
      <column caption='Post Data' datatype='string' name='[post_data]' role='dimension' type='nominal' />
      <column caption='Post Timestamp' datatype='integer' name='[post_timestamp]' role='measure' type='quantitative' />
      <column caption='Rowid' datatype='integer' name='[rowid]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
      <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
      <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/DIC/TermProject/TermProjFiles/Final/UnivStatByYear.tde' schema='Extract' tablename='Extract' update-time='05/07/2017 08:26:57 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='40661' timestamp-start='2017-05-07 08:26:57.817' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40661</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>830789206.0</statistic>
                <statistic aggregation='Avg' datatype='real'>20432.089864981186</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>40890</statistic>
                <statistic aggregation='Stdev' datatype='real'>11799.232286473691</statistic>
                <statistic aggregation='StdevP' datatype='real'>11799.087192835637</statistic>
                <statistic aggregation='Var' datatype='real'>139221882.55016315</statistic>
                <statistic aggregation='VarP' datatype='real'>139218458.58413795</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
                <statistic aggregation='Median' datatype='integer'>20433</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>22635521460338.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>40661.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>40661.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X</remote-name>
              <remote-type>3</remote-type>
              <local-name>[X]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X</remote-alias>
              <ordinal>2</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40661</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>884015542.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21741.116598214507</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>43554</statistic>
                <statistic aggregation='Stdev' datatype='real'>12554.603128699027</statistic>
                <statistic aggregation='StdevP' datatype='real'>12554.448746363123</statistic>
                <statistic aggregation='Var' datatype='real'>157618059.7191394</statistic>
                <statistic aggregation='VarP' datatype='real'>157614183.32505861</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
                <statistic aggregation='Median' datatype='integer'>21789</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>25628235281436.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2009-08-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-08-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
                <statistic aggregation='Median' datatype='date'>#2013-08-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision</remote-alias>
              <ordinal>4</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accepted&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wait listed&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40651</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_date</remote-alias>
              <ordinal>5</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1267</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(1, 1, 2011)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(9, 6, 2015)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40646</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_method</remote-name>
              <remote-type>129</remote-type>
              <local-name>[decision_method]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_method</remote-alias>
              <ordinal>6</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;E-mail&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Website&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>decision_timestamp</remote-name>
              <remote-type>20</remote-type>
              <local-name>[decision_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>decision_timestamp</remote-alias>
              <ordinal>7</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1265</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1232946000</statistic>
                <statistic aggregation='Max' datatype='integer'>13601192400</statistic>
                <statistic aggregation='Count' datatype='integer'>40642</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>degree</remote-name>
              <remote-type>129</remote-type>
              <local-name>[degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>degree</remote-alias>
              <ordinal>8</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;MA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PhD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_quant</remote-name>
              <remote-type>4</remote-type>
              <local-name>[gre_quant]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_quant</remote-alias>
              <ordinal>9</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>92</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.5</statistic>
                <statistic aggregation='Max' datatype='real'>170.0</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_subject</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gre_subject]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_subject</remote-alias>
              <ordinal>10</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;380&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_verbal</remote-name>
              <remote-type>4</remote-type>
              <local-name>[gre_verbal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_verbal</remote-alias>
              <ordinal>11</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>42.5</statistic>
                <statistic aggregation='Max' datatype='real'>170.0</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gre_writing</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gre_writing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gre_writing</remote-alias>
              <ordinal>12</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.29999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>6.0</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_new_gre</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_new_gre]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_new_gre</remote-alias>
              <ordinal>13</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>major</remote-name>
              <remote-type>129</remote-type>
              <local-name>[major]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>major</remote-alias>
              <ordinal>14</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2883</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Planning&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>post_data</remote-name>
              <remote-type>129</remote-type>
              <local-name>[post_data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>post_data</remote-alias>
              <ordinal>15</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1248</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(1, 1, 2012)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(9, 8, 2012)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>post_timestamp</remote-name>
              <remote-type>3</remote-type>
              <local-name>[post_timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>post_timestamp</remote-alias>
              <ordinal>16</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1248</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1263272400</statistic>
                <statistic aggregation='Max' datatype='integer'>1447650000</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rowid</remote-name>
              <remote-type>3</remote-type>
              <local-name>[rowid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rowid</remote-alias>
              <ordinal>17</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40661</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4076805715.0</statistic>
                <statistic aggregation='Avg' datatype='real'>100263.29197511129</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>221891</statistic>
                <statistic aggregation='Stdev' datatype='real'>60204.613666171041</statistic>
                <statistic aggregation='StdevP' datatype='real'>60203.873337799472</statistic>
                <statistic aggregation='Var' datatype='real'>3624595506.6929088</statistic>
                <statistic aggregation='VarP' datatype='real'>3624506364.8738022</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>556130015030981.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>18</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F09&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;S16&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40641</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>status</remote-alias>
              <ordinal>19</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Other&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>39857</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ugrad_gpa</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ugrad_gpa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ugrad_gpa</remote-alias>
              <ordinal>20</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>242</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.0</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>uni_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[uni_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>uni_name</remote-alias>
              <ordinal>21</ordinal>
              <family>UnivStatByYear.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>137</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American University&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;York University&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>40661</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.458685' measure-ordering='alphabetic' measure-percentage='0.372681' parameter-percentage='0.168634' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='University' datatype='string' name='[MajorParam (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Mexico State University&quot;'>
          <calculation class='tableau' formula='&quot;New Mexico State University&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='UniversityToDegree' type='sheet' worksheet='WorldMap' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='UniversityToDegree' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Top 200 Universities' type='sheet' worksheet='Top 200 by Country' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Top 200 Universities' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Acceptance Rate By Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column datatype='string' name='[Country (CountryData.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[status]' derivation='Count' name='[cnt:status:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column-instance column='[status]' derivation='Count' forecast-column-base='[cnt:status:qk]' forecast-column-type='forecast-value' name='[fVal:cnt:status:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lat (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat (CountryData.csv)]' derivation='None' name='[none:lat (CountryData.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[lon (CountryData.csv)]' derivation='None' name='[none:lon (CountryData.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (Country (CountryData.csv),lat (CountryData.csv),lon (CountryData.csv))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country (CountryData.csv)]' />
              <groupfilter function='level-members' level='[none:lat (CountryData.csv):ok]' />
              <groupfilter function='level-members' level='[none:lon (CountryData.csv):ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country:nk]'>
            <groupfilter from='&quot;Australia&quot;' function='range' level='[none:Country:nk]' to='&quot;United States of America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]'>
            <groupfilter from='&quot;American&quot;' function='range' level='[none:status:nk]' to='&quot;Other&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (Country (CountryData.csv),lat (CountryData.csv),lon (CountryData.csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]' />
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Status:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Students:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:cnt:status:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:cnt:status:qk]</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Ambitious'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
              <calculation class='tableau' formula='&quot;Computer Science&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509120688132]' derivation='None' name='[none:Calculation_843580509120688132:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509089865731]' derivation='User' name='[usr:Calculation_843580509089865731:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Calculation_843580509089722370]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509120688132:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]'>
            <groupfilter function='member' level='[usr:Calculation_843580509089865731:nk]' member='&quot;display&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]'>
            <groupfilter function='member' level='[usr:GPALevel (copy):nk]' member='&quot;Ambitious&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Sitka Display' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Sitka Display' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Count of Aplications to Majors'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
            <column-instance column='[major]' derivation='Count' name='[cnt:major:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (Lat,Lon)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:lon:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[World_Rank]' />
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:lon:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]'>
            <groupfilter function='level-members' level='[none:uni_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (Lat,Lon)]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' />
              <size column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:major:qk]' />
              <text column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Major:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Students:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:major:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Degree GRE GPA Analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column caption='Degree' datatype='string' name='[degree]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[degree]' derivation='None' name='[none:degree:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[World_Rank]' />
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:lon:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:major:nk]' member='&quot;Computer Science&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]'>
            <groupfilter function='level-members' level='[none:uni_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='DegreeStatus'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Student Status By Degree</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
            <column-instance column='[decision]' derivation='Count' name='[cnt:decision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[status]' derivation='Count' name='[cnt:status:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Degree' datatype='string' name='[degree]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[degree]' derivation='None' name='[none:degree:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
            <column-instance column='[status]' derivation='None' name='[none:status:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[World_Rank]' />
              <groupfilter function='level-members' level='[none:lat:ok]' />
              <groupfilter function='level-members' level='[none:lon:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:decision:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:major:nk]' member='&quot;Computer Science&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]'>
            <groupfilter function='level-members' level='[none:uni_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:decision:qk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Action (World Rank,Lat,Lon)]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]' value='University Name' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]' />
              <size column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:status:qk]' />
              <text column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]' />
              <text column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Degree:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Status:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Students:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:status:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Forecast_Gpa'>
      <layout-options>
        <title>
          <formatted-text>
            <run>UG GPA Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnivStatByYear' name='federated.1cawt361bttebc1baar1n1802oem' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='University' datatype='string' name='[MajorParam (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Mexico State University&quot;'>
              <calculation class='tableau' formula='&quot;New Mexico State University&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cawt361bttebc1baar1n1802oem'>
            <column caption='UniversityName' datatype='string' name='[Calculation_843580509123076102]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Parameters].[MajorParam (copy)] == [uni_name])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' forecast-column-base='[avg:ugrad_gpa:qk]' forecast-column-type='forecast-value' name='[fVal:avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_843580509123076102]' derivation='None' name='[none:Calculation_843580509123076102:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509123076102:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year :&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg. Ugrad Gpa:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:ugrad_gpa:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:ugrad_gpa:qk]</rows>
        <cols>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Forecast_Quant'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GRE Quant Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnivStatByYear' name='federated.1cawt361bttebc1baar1n1802oem' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='University' datatype='string' name='[MajorParam (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Mexico State University&quot;'>
              <calculation class='tableau' formula='&quot;New Mexico State University&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cawt361bttebc1baar1n1802oem'>
            <column caption='UniversityName' datatype='string' name='[Calculation_843580509123076102]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Parameters].[MajorParam (copy)] == [uni_name])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[gre_quant]' derivation='Avg' forecast-column-base='[avg:gre_quant:qk]' forecast-column-type='forecast-value' name='[fVal:avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_843580509123076102]' derivation='None' name='[none:Calculation_843580509123076102:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509123076102:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year :&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg. Gre Quant:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:gre_quant:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:gre_quant:qk]</rows>
        <cols>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Forecast_Verbal'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GRE Verbal Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnivStatByYear' name='federated.1cawt361bttebc1baar1n1802oem' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='University' datatype='string' name='[MajorParam (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;New Mexico State University&quot;'>
              <calculation class='tableau' formula='&quot;New Mexico State University&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1cawt361bttebc1baar1n1802oem'>
            <column caption='UniversityName' datatype='string' name='[Calculation_843580509123076102]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF([Parameters].[MajorParam (copy)] == [uni_name])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[gre_verbal]' derivation='Avg' forecast-column-base='[avg:gre_verbal:qk]' forecast-column-type='forecast-value' name='[fVal:avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_843580509123076102]' derivation='None' name='[none:Calculation_843580509123076102:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509123076102:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Forecast indicator:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year :&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Avg. Gre Verbal:&#9;</run>
                <run bold='true'>&lt;[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:gre_verbal:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1cawt361bttebc1baar1n1802oem].[fVal:avg:gre_verbal:qk]</rows>
        <cols>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='International Students Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecast of the Percentage of International Students</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column aggregation='CountD' caption='X. Female Students' datatype='string' default-role='measure' default-type='quantitative' name='[X._Female_Students]' role='dimension' type='nominal' />
            <column caption='X. Inter Students' datatype='integer' name='[X._Inter_Students]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[X._Inter_Students]' derivation='Avg' name='[avg:X._Inter_Students:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X._Inter_Students]' derivation='Avg' forecast-column-base='[avg:X._Inter_Students:qk]' forecast-column-type='forecast-value' name='[fVal:avg:X._Inter_Students:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[X._Female_Students]' derivation='None' name='[none:X._Female_Students:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:X._Female_Students:nk]'>
            <groupfilter from='&quot;17&quot;' function='range' level='[none:X._Female_Students:nk]' to='&quot;71&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:X._Female_Students:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:avg:X._Inter_Students:qk]' scope='rows' value='Average Percentage of International Students' />
            <format attr='subtitle' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:avg:X._Inter_Students:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:avg:X._Inter_Students:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:X._Female_Students:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[fVal:avg:X._Inter_Students:qk]</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='Moderate'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
              <calculation class='tableau' formula='&quot;Computer Science&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509120688132]' derivation='None' name='[none:Calculation_843580509120688132:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509089865731]' derivation='User' name='[usr:Calculation_843580509089865731:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Calculation_843580509089722370]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509120688132:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]'>
            <groupfilter function='member' level='[usr:Calculation_843580509089865731:nk]' member='&quot;display&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]'>
            <groupfilter function='member' level='[usr:GPALevel (copy):nk]' member='&quot;Moderate&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Sitka Display' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Sitka Display' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Safe'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
              <calculation class='tableau' formula='&quot;Computer Science&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509120688132]' derivation='None' name='[none:Calculation_843580509120688132:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509089865731]' derivation='User' name='[usr:Calculation_843580509089865731:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Calculation_843580509089722370]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509120688132:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]'>
            <groupfilter function='member' level='[usr:Calculation_843580509089865731:nk]' member='&quot;display&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]'>
            <groupfilter function='member' level='[usr:GPALevel (copy):nk]' member='&quot;Safe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Sitka Display' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Sitka Display' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 200 by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column datatype='string' name='[Country (CountryData.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='University Name' datatype='string' name='[University_Name]' role='dimension' type='nominal' />
            <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
            <column-instance column='[University_Name]' derivation='CountD' name='[ctd:University_Name:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lat (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[lon (CountryData.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Country (CountryData.csv)]' derivation='None' name='[none:Country (CountryData.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[World_Rank]' derivation='None' name='[none:World_Rank:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat (CountryData.csv)]' derivation='None' name='[none:lat (CountryData.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon (CountryData.csv)]' derivation='None' name='[none:lon (CountryData.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;1&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;200&quot;' />
              <groupfilter function='member' level='[none:World_Rank:nk]' member='&quot;21&quot;' />
              <groupfilter function='member' level='[none:World_Rank:nk]' member='&quot;22&quot;' />
              <groupfilter from='&quot;23&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;25&quot;' />
              <groupfilter function='member' level='[none:World_Rank:nk]' member='&quot;26&quot;' />
              <groupfilter function='member' level='[none:World_Rank:nk]' member='&quot;27&quot;' />
              <groupfilter from='&quot;28&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;30&quot;' />
              <groupfilter from='&quot;31&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;35&quot;' />
              <groupfilter from='&quot;36&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;40&quot;' />
              <groupfilter from='&quot;41&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;50&quot;' />
              <groupfilter from='&quot;51&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;60&quot;' />
              <groupfilter from='&quot;61&quot;' function='range' level='[none:World_Rank:nk]' to='&quot;99&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]' />
              <size column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[ctd:University_Name:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Number of Universities in Top 200:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[ctd:University_Name:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lat (CountryData.csv):qk]</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lon (CountryData.csv):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='UniversityRating'>
      <table>
        <view>
          <datasources>
            <datasource caption='WorldRankings' name='federated.1lnhzl416ekhpq13j1c7q19n3qor' />
          </datasources>
          <datasource-dependencies datasource='federated.1lnhzl416ekhpq13j1c7q19n3qor'>
            <column caption='Citations Rating' datatype='real' name='[Citations_Rating]' role='measure' type='quantitative' />
            <column caption='Inter Outlook Rating' datatype='real' name='[Inter_Outlook_Rating]' role='measure' type='quantitative' />
            <column caption='Research Rating' datatype='real' name='[Research_Rating]' role='measure' type='quantitative' />
            <column datatype='real' name='[Student.Staff_Ratio]' role='measure' type='quantitative' />
            <column caption='Teaching Rating' datatype='real' name='[Teaching_Rating]' role='measure' type='quantitative' />
            <column caption='University Name' datatype='string' name='[University_Name]' role='dimension' type='nominal' />
            <column-instance column='[Citations_Rating]' derivation='Avg' name='[avg:Citations_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inter_Outlook_Rating]' derivation='Avg' name='[avg:Inter_Outlook_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Research_Rating]' derivation='Avg' name='[avg:Research_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Student.Staff_Ratio]' derivation='Avg' name='[avg:Student.Staff_Ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teaching_Rating]' derivation='Avg' name='[avg:Teaching_Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[University_Name]' derivation='None' name='[none:University_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Citations_Rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Inter_Outlook_Rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Research_Rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Student.Staff_Ratio:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Teaching_Rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Citations_Rating:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Inter_Outlook_Rating:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Research_Rating:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Student.Staff_Ratio:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Teaching_Rating:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[none:University_Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:University_Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;ÃƒÂ–rebro University&quot;' />
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;ÃƒÂ‰cole Normale SupÃƒÂ©rieure&quot;' />
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;ÃƒÂ‰cole Normale SupÃƒÂ©rieure de Lyon&quot;' />
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;ÃƒÂ‰cole Polytechnique&quot;' />
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;ÃƒÂ‰cole Polytechnique FÃƒÂ©dÃƒÂ©rale de Lausanne&quot;' />
                <groupfilter function='member' level='[none:University_Name:nk]' member='&quot;BabeÃ…ÂŸ-Bolyai University&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[none:University_Name:nk]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Citations_Rating:qk]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Inter_Outlook_Rating:qk]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Research_Rating:qk]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Student.Staff_Ratio:qk]</column>
            <column>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[avg:Teaching_Rating:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]' />
              <lod column='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[none:University_Name:nk]</rows>
        <cols>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Very Ambitious'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
              <calculation class='tableau' formula='&quot;Computer Science&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509120688132]' derivation='None' name='[none:Calculation_843580509120688132:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509089865731]' derivation='User' name='[usr:Calculation_843580509089865731:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Calculation_843580509089722370]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509120688132:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]'>
            <groupfilter function='member' level='[usr:Calculation_843580509089865731:nk]' member='&quot;display&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]'>
            <groupfilter function='member' level='[usr:GPALevel (copy):nk]' member='&quot;Very Ambitious&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Sitka Display' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Sitka Display' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Very Safe'>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopN' datatype='integer' name='[GREQuant (copy 2)]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='MajorParam' datatype='string' name='[UnderGradGPA (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Computer Science&quot;'>
              <calculation class='tableau' formula='&quot;Computer Science&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_843580509089722370]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='topNCalc' datatype='string' name='[Calculation_843580509089865731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF ([Calculation_843580509089722370] &lt;= [Parameters].[GREQuant (copy 2)])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='MajorFilter' datatype='string' name='[Calculation_843580509120688132]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([Parameters].[UnderGradGPA (copy)] == [major])&#13;&#10;THEN &quot;display&quot;&#13;&#10;ELSE&#13;&#10;&quot;NA&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[gre_quant]' derivation='Avg' name='[avg:gre_quant:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gre_verbal]' derivation='Avg' name='[avg:gre_verbal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ugrad_gpa]' derivation='Avg' name='[avg:ugrad_gpa:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Decision' datatype='string' name='[decision]' role='dimension' type='nominal' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509120688132]' derivation='None' name='[none:Calculation_843580509120688132:nk]' pivot='key' type='nominal' />
            <column-instance column='[decision]' derivation='None' name='[none:decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[uni_name]' derivation='None' name='[none:uni_name:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column caption='Uni Name' datatype='string' name='[uni_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_843580509089865731]' derivation='User' name='[usr:Calculation_843580509089865731:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Calculation_843580509089722370]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_quant:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]' included-values='in-range'>
            <min>10</min>
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]'>
            <groupfilter function='member' level='[none:Calculation_843580509120688132:nk]' member='&quot;display&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]'>
            <groupfilter function='member' level='[none:decision:nk]' member='&quot;Accepted&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]'>
            <groupfilter function='member' level='[usr:Calculation_843580509089865731:nk]' member='&quot;display&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]'>
            <groupfilter function='member' level='[usr:GPALevel (copy):nk]' member='&quot;Very Safe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[cnt:Number of Records:qk]</column>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Sitka Display' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='6' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='cols' value='Sitka Display' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Sitka Display' />
            <format attr='font-size' value='6' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[Multiple Values] + [federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:ugrad_gpa:qk])</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='WorldMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World Universities By Probability of Admit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='GREVerbal' datatype='integer' name='[GREQuant (copy)]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
            <column caption='UnderGradGPA' datatype='real' datatype-customized='true' name='[GREWriting (copy)]' param-domain-type='range' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
              <range max='4.0' min='1.0' />
            </column>
            <column caption='GREQuant' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='162'>
              <calculation class='tableau' formula='162' />
              <range max='170' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
            <column caption='QuantLevel' datatype='string' name='[Calculation_843580509085728768]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1] AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt; [Parameters].[Parameter 1]+2 AND MEDIAN([gre_quant]) &lt;= [Parameters].[Parameter 1]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &gt;= [Parameters].[Parameter 1]-5 AND MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_quant]) &lt; [Parameters].[Parameter 1]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='UniLevel' datatype='string' name='[GPALevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Very Safe&quot; AND [QuantLevel (copy)] == &quot;Very Safe&quot; ))&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF (([VerbalLevel (copy)] != &quot;Very Ambitious&quot;) AND ([Calculation_843580509085728768] == &quot;Safe&quot; AND [QuantLevel (copy)] == &quot;Safe&quot; ))&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF ([Calculation_843580509085728768] == &quot;Ambitious&quot; OR [QuantLevel (copy)] == &quot;Ambitious&quot;)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF (( [Calculation_843580509085728768] == &quot;Very Ambitious&quot; OR [QuantLevel (copy)] == &quot;Very Ambitious&quot;) )&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;ELSEIF (([Calculation_843580509085728768] == &quot;Moderate&quot; OR [QuantLevel (copy)] == &quot;Moderate&quot;))&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSE&#13;&#10;&quot;Safe&quot;&#13;&#10;END' />
            </column>
            <column caption='VerbalLevel' datatype='string' name='[QuantLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)] AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+2)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt; [Parameters].[GREQuant (copy)]+2 AND MEDIAN([gre_verbal]) &lt;= [Parameters].[GREQuant (copy)]+5)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &gt;= [Parameters].[GREQuant (copy)]-5 AND MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-2)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([gre_verbal]) &lt; [Parameters].[GREQuant (copy)]-5)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSE&#13;&#10;&quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='University Name' datatype='string' name='[University_Name]' role='dimension' type='nominal' />
            <column caption='GPALevel' datatype='string' name='[VerbalLevel (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF(MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)] AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.3)&#13;&#10;THEN &quot;Moderate&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.3 AND MEDIAN([ugrad_gpa]) &lt;= [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Ambitious&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.3 AND MEDIAN([ugrad_gpa]) &gt;= [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &lt; [Parameters].[GREWriting (copy)]-0.7)&#13;&#10;THEN &quot;Very Safe&quot;&#13;&#10;ELSEIF(MEDIAN([ugrad_gpa]) &gt; [Parameters].[GREWriting (copy)]+0.7)&#13;&#10;THEN &quot;Very Ambitious&quot;&#13;&#10;END' />
            </column>
            <column caption='World Rank' datatype='string' name='[World_Rank]' role='dimension' type='nominal' />
            <column caption='X. Inter Students' datatype='integer' name='[X._Inter_Students]' role='measure' type='quantitative' />
            <column-instance column='[University_Name]' derivation='Attribute' name='[attr:University_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[X._Inter_Students]' derivation='Avg' name='[avg:X._Inter_Students:qk]' pivot='key' type='quantitative' />
            <column caption='Gre Quant' datatype='real' name='[gre_quant]' role='measure' type='quantitative' />
            <column caption='Gre Verbal' datatype='real' name='[gre_verbal]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
            <column-instance column='[World_Rank]' derivation='None' name='[none:World_Rank:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
            <column caption='Ugrad Gpa' datatype='real' name='[ugrad_gpa]' role='measure' type='quantitative' />
            <column-instance column='[GPALevel (copy)]' derivation='User' name='[usr:GPALevel (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:major:nk]' member='&quot;Computer Science&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-size' value='9' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]' value='Probability' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.039999999105930328' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]' />
              <lod column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]' />
              <tooltip column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[attr:University_Name:nk]' />
              <tooltip column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:X._Inter_Students:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>University Name:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[attr:University_Name:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Probability of Admit:&#9;</run>
                <run bold='true'>&lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]&gt;&#10;Rank:      &lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]&gt;&#10;% International Students: &lt;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:X._Inter_Students:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lat:qk]</rows>
        <cols>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lon:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='DataProduct' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>University Finder</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='249' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6432' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6432' />
            <zone h='81846' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='17739'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Universities By Probability of Admit' captured-sheet='WorldMap' id='1' />
                  <story-point caption='Grade Statistics for each Category of Universities' captured-sheet='UniversityList' id='2' />
                  <story-point caption='University Rating' captured-sheet='UniversityRating' id='5' />
                  <story-point caption='Avg GPA/ GRE and Student Status Analysis for Universities ' captured-sheet='UniversityToDegree' id='11' />
                  <story-point caption='Top 200 Universities and Acceptance Forecast By Country' captured-sheet='Top 200 Universities' id='12' />
                  <story-point caption='University Score Forecast' captured-sheet='Forecast' id='4' />
                  <story-point caption='Count of Applications  for Majors' captured-sheet='Count of Aplications to Majors' id='7'>
                    <capturedDeltas>
                      <worksheet name='Count of Aplications to Majors'>
                        <filter class='categorical' column='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]'>
                          <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Forecast'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Forecast_Gpa' w='42000' x='0' y='0' />
              <zone h='50000' id='8' name='Forecast_Quant' w='42000' x='42000' y='0' />
              <zone h='50000' id='10' name='Forecast_Verbal' w='42000' x='42000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='11000' id='7' name='Forecast_Gpa' pane-specification-id='0' param='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='7500' id='11' mode='compact' param='[Parameters].[MajorParam (copy)]' type='paramctrl' w='16000' x='84000' y='11000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top 200 Universities'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Top 200 by Country' w='84000' x='0' y='0' />
              <zone h='50000' id='7' name='Acceptance Rate By Country' w='84000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='57875' id='6' name='Top 200 by Country' pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='29250' id='8' name='Acceptance Rate By Country' pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]&#10;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]' type='color' w='16000' x='84000' y='57875' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='UniversityList'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='50000' id='7' name='Ambitious' w='42000' x='0' y='0' />
                <zone h='50000' id='8' name='Moderate' w='42000' x='0' y='50000' />
                <zone h='50000' id='9' name='Safe' w='42000' x='42000' y='50000' />
                <zone h='50000' id='10' name='Very Ambitious' w='21000' x='42000' y='0' />
                <zone h='50000' id='14' name='Very Safe' w='21000' x='63000' y='0' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='11' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10750' id='13' name='Very Ambitious' pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' w='16000' x='84000' y='0' />
              <zone custom-title='true' h='7500' id='15' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='10750'>
                <formatted-text>
                  <run>GRE Quant</run>
                </formatted-text>
              </zone>
              <zone custom-title='true' h='7500' id='16' mode='type_in' param='[Parameters].[GREQuant (copy)]' type='paramctrl' w='16000' x='84000' y='18250'>
                <formatted-text>
                  <run>GRE Verbal</run>
                </formatted-text>
              </zone>
              <zone custom-title='true' h='7500' id='17' mode='type_in' param='[Parameters].[GREQuant (copy 2)]' type='paramctrl' w='16000' x='84000' y='25750'>
                <formatted-text>
                  <run>Top N Records&#10;</run>
                </formatted-text>
              </zone>
              <zone custom-title='true' h='7500' id='18' mode='type_in' param='[Parameters].[GREWriting (copy)]' type='paramctrl' w='16000' x='84000' y='33250'>
                <formatted-text>
                  <run>Under Grad GPA</run>
                </formatted-text>
              </zone>
              <zone custom-title='true' h='7500' id='19' mode='compact' param='[Parameters].[UnderGradGPA (copy)]' type='paramctrl' w='16000' x='84000' y='40750'>
                <formatted-text>
                  <run>Major</run>
                </formatted-text>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='UniversityToDegree'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <datasources>
        <datasource caption='GradAdmit' name='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge' />
      </datasources>
      <datasource-dependencies datasource='federated.0n8w7gx1xm1qzv1a1v2ah0ytghge'>
        <column caption='Major' datatype='string' name='[major]' role='dimension' type='nominal' />
        <column-instance column='[major]' derivation='None' name='[none:major:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='WorldMap' w='84000' x='0' y='0' />
              <zone h='50000' id='11' name='Degree GRE GPA Analysis' w='42000' x='0' y='50000' />
              <zone h='50000' id='14' name='DegreeStatus' w='42000' x='42000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='9250' id='6' mode='dropdown' name='WorldMap' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='19875' id='7' name='WorldMap' pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]' type='color' w='16000' x='84000' y='9250' />
              <zone h='7500' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='29125' />
              <zone h='7500' id='9' mode='type_in' param='[Parameters].[GREQuant (copy)]' type='paramctrl' w='16000' x='84000' y='36625' />
              <zone h='7500' id='10' mode='type_in' param='[Parameters].[GREWriting (copy)]' type='paramctrl' w='16000' x='84000' y='44125' />
              <zone h='13625' id='13' name='Degree GRE GPA Analysis' pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' w='16000' x='84000' y='51625' />
              <zone h='13625' id='17' name='DegreeStatus' pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]' type='color' w='16000' x='84000' y='65250' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='WorldMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[GREQuant (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[GREWriting (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:University_Name (Sheet1):nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:University_Name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lat:qk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lon:qk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='UniversityRating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='136'>
            <card pane-specification-id='0' param='[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[none:University_Name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;BabeÃ…ÂŸ-Bolyai University&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[:Measure Names]</field>
            <field>[federated.1lnhzl416ekhpq13j1c7q19n3qor].[none:University_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Safe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='104' type='filters' />
            <card size='205' type='marks' />
            <card size='68' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='DataProduct'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='International Students Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:University_Name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:X._Female_Students:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Moderate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='74' type='filters' />
            <card size='234' type='marks' />
            <card size='68' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Ambitious'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='108' type='filters' />
            <card size='201' type='marks' />
            <card size='68' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Very Ambitious'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='19' type='pages' />
            <card size='66' type='filters' />
            <card size='138' type='marks' />
            <card size='45' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Very Safe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='29' type='pages' />
            <card size='108' type='filters' />
            <card size='200' type='marks' />
            <card size='68' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Calculation_843580509120688132:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:Calculation_843580509089865731:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='UniversityList'>
      <viewpoints>
        <viewpoint name='Ambitious'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moderate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Safe'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Very Ambitious'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Very Safe'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Forecast_Quant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</field>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Forecast_Gpa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</field>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Forecast_Verbal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cawt361bttebc1baar1n1802oem].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[none:Calculation_843580509123076102:nk]</field>
            <field>[federated.1cawt361bttebc1baar1n1802oem].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Forecast'>
      <viewpoints>
        <viewpoint name='Forecast_Gpa'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast_Quant'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast_Verbal'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='DegreeStatus'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]' type='filter' />
            <card param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:degree:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Degree GRE GPA Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[:Measure Names]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 200 by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:University_Name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:World_Rank:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lat:qk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:lon:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Count of Aplications to Majors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[avg:gre_verbal:qk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:major:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:uni_name:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='UniversityToDegree'>
      <viewpoints>
        <viewpoint name='Degree GRE GPA Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='DegreeStatus' />
        <viewpoint name='WorldMap'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[usr:GPALevel (copy):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Acceptance Rate By Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]&#10;[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:decision:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]</field>
            <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Top 200 Universities'>
      <viewpoints>
        <viewpoint name='Acceptance Rate By Country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Forecast Indicator:nk]</field>
              <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:status:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 200 by Country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0n8w7gx1xm1qzv1a1v2ah0ytghge].[none:Country (CountryData.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Acceptance Rate By Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ambitious' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Count of Aplications to Majors' width='192'>
      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
      Y3N25CtZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DataProduct' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Degree GRE GPA Analysis' width='192'>
      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
      VZ2sJ/wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DegreeStatus' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
      L3/yFtqweAYBS/dxhsMNvPD8ExjOt8vKu6qorKzBNdxHS3s3OYsX8dnXp4iKS2FdaDDZmakk
      Fy8nM/L6n6vPg7GOHj/OTatWXf8dFPzCkqXF7Nm7n+cevpMtW55l966PAcgpXs3jj9zFG2/+
      AVmWAYhPSmf58uVXpZGz/BZ2v/85GllLqFZFRGQky9Zs4L71RXgcTlRaiI6NvWptv8Pcg6wJ
      49C+vdz1+PMkB8lse3XnNf0sXn0bL5xvAtlMdZhOtEFpBq1tXcQUFtIdFkmoYayJHBmbxH2P
      PUOwTo3T6eDY5x/S1jvC4sQIhBCUn2tny4sv0lF5kLOjkJZTyl+WrKHx5D4OnW3DqFLj9XoA
      3XU/13EFsHvHVrQhkbS3dTDigE3rFRHMJrELiilq6+HlrVvRaTQUrb4NUJOUlIAxPJbnnv5T
      3tuzh4cfuYvBnnq2bdsGwF0PPE563PlmrDaEGJ2ViIVjm8bjslegLX+TV7YdRWeM5MmnHiEh
      4dLx6Ukxobz+6qu4hYbHnngS2dzO7je2EhoeTXR8AgAJ5/8PgFpPUkL0xT9DEnNJ1Fazbds2
      opMX8lB6JL0Jl+zvuesOfrt9Kxqtlvyla1l39/fZvWsXBz2CdXc+wIL4CLa9+m9feCkAAA5q
      SURBVCrRoXpSCzOpKz/KibONoNHz+BO3o0rX8tqbL5NXuoaNt664ruc64XLodd/bwBdHzhCk
      lXnx+ecnlaCyGlQhkBhXAA21lYzaPeQU5ON1eoj0ce7LBRQBKAQS485dCclNU301H37+9aQL
      v4JCoDFuH6C9vR1NUASrVpTOpD8KCjPKODWAYHFuHvaRQeqbJn8GpIJCoHFNAbzz2r/ywR9P
      M+zysvGWlTPtk8I8pK3yKL/8t9+w892Prpja2r/vwLTeV/Pzn//859/+sHDpapLCtfR2d9Nn
      8Vycpp4MQggl+ojClOluPEvK8rsJHapiVBvJR+//HpfbznvvvU9IdCwfv7ubr8pqWLNqma+T
      FafEOH0AFRnZ+TyZne/HWyko+EJgGhxF199GbGo2bn0UK1es4NbiNA4dCqEgNREP4ONkxSmh
      vKoV5gRxadmU7X+P1JL1FOVmYxnsJS0pgdKCTL6pGmBdaTp2Se33wNZKkLx5yKWz/RWUpzAP
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast_Gpa' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast_Quant' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Forecast_Verbal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='International Students Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moderate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Safe' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 200 Universities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 200 by Country' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='UniversityList' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3Rcx5no+bv3ds4NNLqRExMIZpGSKFI5WLYsR3kcFPzGz2HS83s7+856
      Z+bN7J7Z9czunJ3dmTkztmzJki3LsmzL2YqUqEAqkCIJkiAJkgCRMxod0DncsH80iUAARA4k
      +3eOjtiFqlt1q+q7lb7vK0HTNI08ea5TxJUuQJ48K0leAPJc1+QFIM91TV4A8lzX5AUgz3XN
      RAHQMrzws18iz2Jf6I19r0/4HfN3cbK5C4DGxpOj4e+9997CS5mHEw0NqJd+qGkajp9ZyeIs
      GCUZ4uTZ9tHfZ080kFTm96yhnlaeefoHvPCbFxmJp6eM8/7+F/ne979PODUxfIIA9Jw+jEKW
      Q019AERDfsIjEU6cbCSjqLSdb6LfHwZgcHCI7vYW2rv7AbA4CyktctPTcYGXX3mZY8eOEc+o
      rF275uLTNVrPn6GzdxCA+EiAaErOPWsgFxYJDtHQcIJYMjO/mriGUUOdNHaGAOg6fYigagag
      t/MCrZ29AKSiIUbiGbraztPT00vq4pcsONQ3+u/VgmR20vDBO6O/Pzh+ErME2XSck8dPkkiP
      9Y1MIkp7dw+9vf0XY2v091/6t8wLv36FL375K9x58xai0ThoKq3nmzh9tgVVg4GeDt4+fIob
      d+3CpMv165OnzqKo2kQBOHy2n899/rN0nnwfgOaGA/zwhZdJjPTzd3/zv9PlD/PjZ38MwMhQ
      B+c6Bji6/7e8dayFTLCTdxrOjz7r0vHCG2/kRooXf/5jzncPc/zgy7xx6Aydpw9xvj+Wi/P6
      G6DG+MFTz6PIaRpONC5ubV8DbN97B6cOHQTgUGMnt+6o5cg7L3OosY2W4wd4/f3TDDQ38MTT
      z3D8XDfZkW5eeec4AH948TX0OmEliz8FIgVmkXBGIzPSg9ldCUqSJ77/FKlMkiefeAoZeOk3
      z/Ojn7yAogq8+LvfImsQ7DjJ4bMDF58jYSDOa6+/hdFZTHlxAUPdF2jtHSbUf4FfvfQWAIIo
      omka0aE2nvnFyyRGBvnhc79CN1oeNUVXdy8nj5+mu7Od9MXx9v4HP019MbR3Rrnz1j10d+aG
      Lae3mvvuug3Yw0+e/TmUbQegvHotFeXl7Nq1a8LrBrMiX773DuB2nvvpTymtcl1WH2aKCwwc
      /vAIe+5+YJEr++pHNBUgZCNoWpasYMIkwpGjDejsXgJAtO8w626uZv22W/jU7ZsBjTfefwrl
      lgp0Dh/SSr/AFNy+ZyvvHjqNK3aePXd8gkB7Ix3+GPqTjfg7z9AVlEllBL7+za+gFwW0XbW8
      29hFqKmRex567OJTBL7+X79F67lGfvLEv3HzA49QY5dob24CQSCh6Sl+8C7KK3J98sDvf0wy
      k+JUUzNn2vrGBKC14SDFG3agaRo3rC/i/cZOHLN4iXD/BSR78YQwWVEnxcum0igaKPEAGdWI
      IAioqgKaSjKVBlnmM1/+E8w6ePIHT3NDfe1C6vaaZEu5k/3791O2eTcALk8Jn374K1j0IqlU
      koEz7+PxeC7GFthW5eap517k3s98YeUKfQXcVVuJvPtzYpLArW4jKdnFtp17ePTTd6Jmk2QF
      Hc4CD3oxN3qtu/FuDjz9Y8xmOw7DpREtSzQis6ZuG18tcfGLfWc5l+jlK9/4E6Rsgqd/+suJ
      ebpc3F53Pzev95FKpcYEoDOk8UcfvxOdANywmZdee49SnweTITdL8vmKcv/3+gAotIk8+eQT
      aJKZx778KGKkiyJ37jtT6jLx/Sef5KEvfQWvLxf/gXv28P3Hvwuini8++p+wKCGefOY5Ttsd
      6GxuULP8/NlnSMsaazbfuGSVfjWz5Zbb+Kd/+SH//VsfBeDBj93Hj554HEmno/6GvaxzuHGY
      DKPxb7z7Y7z4D/9GrceyUkWeAZFyr42sOfcBNRWto1h3gu997/tIehMPf/k/jfYfAAQ9ZdYs
      9q17JzzlxV8+SySrIepMfO6LXyLac4YnHv8erkIvPl/u2Zf67ea9H+X5Z5/hxFsqtqIKhLwu
      0LWJko7z9hsvI7s2cv/ezStdnEWhp72F37z8Fn/2F98YN3dfGHkBuEZRM3HOtg+yacO1M5Xs
      6biApbCUAvvijWh5AchzXZM/Cc5zXZMXgKsKjaamJmYzZDeenHiWMv6kfnBwYDT8/fev75P6
      q1YA5FSM3gE/Q0N+APq6OsloKt3dPQwODq1w6ZaGkZ4z/PZXv+NsX3TGuKcaT034bSuqZNv6
      SmDscBJgz56JOypXI2F/P4FQiEA4d7Da2dmJnInT09OLPxi5YtrFWkwvOzpiHDrWyjpXghf/
      0EtxcTW3V1Zx7MCr+NZsZt/r71BW6iIaiWLWi/RFBB790qeu3hcG3v2wiW/+z3/KH145QP3n
      Ps6x/b9i/9kQdi3CSErCW2hlMKLw1//TnzAy1MHTTz/N8OAgn3z0G1TrB3nxTIIK3TAffHCI
      WCzBZx/5Kvt+9zyPPPIYxw7u44NTF1BSSe576DHoOUKidC+7alw89+xzPPLoH/G9f/t3BLOd
      ivWbeeCuPStdHaP0NTfAmp2ce3U/WY+TUqeZqionb7y6j3XVVbyvCuiTA4wEU1hLqzCbzNx3
      xy3AVSwAGAspc7VSUFbDWtmIqDOjZWW2772P4FAvRV4PJrsLT6EHJZPAUeK6eoc7AFTisojd
      6kZLhkYV4x783KPUF8Nzz77II499jmefew7IndQ/8tgjaHKcH//sZarv3QTAzXd8lAs9fh55
      5LEJTz/V1sd/+fM/By3LM8++wI1rnBOz11SSyTTVazZxy407lvpl50T1pp2cPNdN3c71hFMK
      Zr2EnBG56ebdBKMxCiURW5GFAncK1WTH6xs7uL16BUDQs3tvbvgur147GmyvrqK6umqlSrVk
      DLc2cKali+9///uE+7tGFeNmQpUzCKJ+QthUawiBGXSFRBN/+Vd/TU/nBZ798U/4r3/+9VmW
      fOmxuIq5ZXfxpPD6LTPrMowKQCRy5bnSVGQyGQwGw8wR85BOp9Hr9Yji7MchnU6HxZLb8z74
      4Vn+l2/9JTa9gJoK8KNfvc22yW0+ihwf5sknnyASifGlr/wpZDpG/6bEAqMn9ZfYXFvCf3z3
      ceRUgo889BglYoDv/ORJGn0eugYjkAzyvWd+gSAIFPgq5vz+l5NOp0mnp1Zdno6l6G8LOgeI
      RCI4HLPRGFqddLc3oxhcuJU+/vxvn+Dv//HvkDSF3z37BHs+9nlMRiNb69ctSl6jdaWpvH/o
      Q/bcsntRnns9sRT97eqdAi0CbpeLn/76t1TadBQ4zfz4+V/jsYLJquet197EH4vyz9/+H4ua
      ZzQ4TE9PN7H0jdiMq1FH8/piVYwAkcAAHUMxtq4v4R///v/m/s89jMViJjsygL+vn6aQwje/
      /LlJ6fYfa2coHJ9VHnffUI3PbZsQ1nSyAVkWqfMUoIRCJI8dQ1dcjO2euxFNpgW/13iu9tFy
      NTC+DmfT9redf4/ja3cRk4zTxlkVI4DD5WL/T36NFt+IVS/QMRihp+UgG706Pmzyo9ntyEwu
      7JsN7Zxun7jnr1dlZEFCQMOmZHAqKQrkJDv6yjFKMnIwiBIeAUWhEBAtZmIFBUgeD6LZjOz3
      M/wv/wqqhrF+I6YtmzHU1iKMm7u39YWIp7Kzejev24rPbV1YBeWZxFRtfznh0ADvdDaRlPTT
      xlkUAfjU3/xs1nG//bW72FLrmxDW093NzbfcwrZdO9i26y46Wpqo8NyEEB/h6/d+EZ8rtxDU
      MhmUSAQ1FkMJj7Bu4AKeET8OOY1FzWJX0lSkwyRFPVHJSFQyMqIzEdaZEF0uzHXVSAUFSE4n
      b57snvwFuTRAVICWTpM6cwbjK0+zzSxTXFOGsb4e847tPPXSqRkr/xJfvHsTX7p3y6zrJ8/C
      SIb70SQLep3G8xkj1mQcFZl0MouzqGRS/FUxApRXr6OsUkX2+8m0tmF+Yz/V+pzUam8eYPDi
      JE0w6BEdDiSbDdHlQpSzBHQWOoxuEqKeqGRCrymkRB0ZceKr3btpK8ZxgjebLwgYwLMV8e5N
      1O0oJdV4ivDPfs4nzrSxSTFy3lzEeXPRFb8weZYXvclC7/mj2AqqkZQQZw+9QvHOu0mPhOYn
      ACP+Xg6dasGgZhgZHsToKmb7njvxWkVUVUWW5TkVUFVVsrEY2a5u5K5O2o+fw5UI0z0Qpk8z
      0mN0oiAQd7tIFxUjFoxNH77ysW1UF48d0JwbfIczqV6GOs7grtpOpKcRJaugMztBjqJgQs5m
      KVm7ZVJZ57L0UTUNnE5Mt92K6bZb+cPTbxM638qGpJ8/HjqKXlMZ1NsYNNh427lmUlpZlueU
      39Ki8sorr1NVWYZeFDAZBCJCEeELH5A2+agpdWGyOIjEo5hMdiQ1hbe8GoO02myKpyYZCeIu
      34Td7SYRLaDmRgea3oy52Dll/BkFIKsKlPiKKfU4MNtuJRgaodihRwBEUUSnm/oRFiVDUtTj
      lpNUpsOUZiKUZCLYnzpDyGnDUFmJvqaG7wasDOm9qEWX7Y+rwGAcGJumJDPyhPxyZpUymcgg
      /p5WXDYH0WCAVHwYJeEHYxXWi7rjl5dVEGbfoKIgTHxPQaTX6KTX6ORN11r0qsytkc4rpp1L
      fkuLSDQ0RLTIS1fbMVJDSYp2fRSPu4Te7n5inYc41a3hLC+lzA29Z1v52GN/zpqSqTvQasPu
      rRn9t9VpBKf7ivFnFACPrxSPr3TsodaZjREETeN/695PWGei2+Cix+ik2ezhHWcNf/31j1I7
      bioy8IeOGZ93xbwkPa6qHVgLfGSTMXyeXAVEh3uxOt0oTL8DsFhkRR1vuca+/NnYAMFAHG/V
      miukWjk+/3BODeLmXRNVGnZdtET95PjATyxPmVaKJVkDaILAP5mrCbpqEYxL2wEFUY+tICdQ
      BvPYNqfdUwYsk7qrkqH54K8ovuEBRlreJBKMIBgLEIUYDW+2EDj3Dh///KMsZBc0Gp1ZA/Rq
      wGw2TztrAIiGAzSeb0eXDmNyFJBIyWzYsgOnaeKUe7GmlAsSgJ6OFkbSucOcQPc5JFFDViUk
      Lc75ri4qdlRjWfoP8IqjyCkcpbUo6TSOsk1YS3ToDBY0OU5BzQb27lpLoWlhomi32+ecpqnx
      GJbCCszxDr73u5M88plbMdt9hAe6KC4vxR9KUrd2/npTY6fbCpFoEofDNnOiGZBEMEgGvJUV
      9PUFsTlcWIw6JEmYMI1drCnlggRAVRROn2pg8PxZhrqbWbPzbkRVIjrYj9VuJ5vJgNW8KAVd
      zUhGB8Xrb774yzvhb9U1G9ixY8u8dK0Witvl4g+v/haPkEaOJTh0vJELxxvIikaOnOrhphs2
      8K1v/SUO82T9mktqIgUmlYZTrTSdeIetez6GUclQWVpERm/Facu17cmGdxkIm7j/npsnPWeu
      WByF3LirEICq6gU/bkYWJAAmk4XPfu5hXrzwB2zeSiSTDYvZhqPQN3PiPEtOV1cPe/bezea6
      tXwWyPb3c7I/xkjDCW7yuLG29zL89/8HIauViM5ERDDQVn8jj33yplE1kbr1O9DrBXqGUrzz
      zf+OIzJM2FuLefde/uN//AkAW7bdiL07vLIvO08WJADeskocjtw2pdV9BdXEPCvCxq07sEkS
      /n/+f1GTSUSbjW5TKc+W3IIi5KZk3/7aXfz29RMkzp5jfXKAtZ0vcP6Dl3j+Qj/9Zi+9J4Ls
      SfTwZW8hP7/543QZncg6Cx+7Z+xwT9RZqK1Zrb6HrsyqOAjLM39mOqdRdDqw2XF9+THOd7fR
      1yURazxAKq1gNFv45//rr7jQbySQUFm3+262VBfxyJ4ahCd+wzeCZ+lOuMh+9hHSG6ppeHrM
      ma26as41FkZeAJYZVU7T0TtETVXFTCYos2Kmcxq9xULRn34DAHfgPK+8sp+s5ESTQ/Q3n2HD
      liKyzefQVAeZLAgCqBYbDbYyDqUUoqksf2G0IYoTNVfFVXOusTDyArCMKIqCpDMS7G6hsLgc
      p3HhnehK5zQ/e/MML3146YBO43M7zOzdu4cDR08hFK+loHwdf/K1u3DuP8Pp9iGyyTBnTrbB
      PRtpfudnGJ1eUsk0L772OrVfuJOB1iaK19QvuMyriavbTHYcTocFl3lMnku8Tgyr7CMlSRKZ
      +AgOXxWmZf/0CGzfeQvV5UUY7F7sVgMGaWLzy6ko4VCYkw1HsBV6kSxeiqrrKHI7aG45R3ig
      e7kLPSf0Zis3rS/irhuqKbCbuXlDMS6HlT0bS6hbX0mZbXJ3v/pHAEFgQ1kBdWuLOXGqjRKv
      i56Yxq3rnZww6hkcGCYyO83lZcFgdbJ+3cqqFZhtNr7xwGYOHjo3GlZeWkj9tlL6Ilm23bCF
      re0SNpOe3oEQN9+0ic21PupO6bhlazm9vcMrWPoroCpkNIEyu4XKIgfb68tIKz04bWbcNjuD
      iQC9sYkawIsmADqDniK3nbs2eXn7RA9ZOUswqbKh2EZcEckkEvSHk4uV3RgaeN0W+v1x1tQU
      U+Ox8W5LkFBKw2U3kwiJRLKT3bWPx+mwIGQzhJOzV+wb/76/fvscJouJcCyFyzbx/6sTjVA0
      iTTOxkFWNGRNGL1HYGtdFWsL9Lx9bKLdrk6vp8Q9cccn6B9AMNhwOxd+ELYQsukUJ1pSnGjJ
      afmeaMvdPHTiCmkWTQAEnZlbNxWjiSKbKtxYzEZaA1GqC6wcaQtiFGa3a2C3mjCIGoHobA2m
      NQ6eGhuaiwttDARinL9CirFCTx49znYOU+hxU2TScNlMHD43MHXSce979w1VFNjNnOiN8pEt
      pRw4O8DmEhs/2n92lu+wvCRjcRouDNLcGeRTF8NKC21IWopL13Q1nGqD+nIGguOFWKC1ewAD
      OmrIqSOoqorZbKbh9Dn27p54KQpANDhEW3+YbZvWz6ps0XCApCIhKUmMNifh4Ahl5SWLsmEw
      FYsmANlEhBfebJoQ5rBbyMRTIMt0hab/GuqNJqq8FgpMEo6CAkxqmtdOD7CtxEZfTMFAho6h
      2Zk+DgRisy/0FKOHnFVZu6GSkY52AonstG4IJ76vwMbKAs52BUin0rT3BIjHC2ZfjiVGEGD8
      rqXBoMNulFDGhTU291Bk1lHoyU3PijxuXCYRm2XM1kGv07BYncSHhy4+N6eeEAqPUFtbPWXe
      Q8P9nG7smLUAhAPDnG7vwYRCZHgAg6sEyeGZpH6/KnSBZiISTRCZjQ6XIFHpsVLotjM4MEIo
      q1JX4WZNuYvgWT/lBY5ZC8DcmHr06AknMIoa2cxsFw8aZ7sCALR05ebHZzsD8yyTSjqtYDQu
      hpGNxJc/dRNSKsLzr50bDbvn1jp8okzD6VxIQYGVdaqAII9NUVs6+ugL2PGN02HaWFvOtrUF
      HDo60SdRaXnltCVIxVKUVpaiquqsXMJUrNlAxZoNU/5t1ekCLRbZVJy3G1N4bHqGRnIjhaTT
      MTAQAknH4XPz7Uxz49LokUykWILVyixI8K//8P9w22e/zs6NpTNHnxGF5gv9FNiNjI2/Ap19
      Qdw+6+h0J5aUWVvpoaerlzGR13PPrjIiAyOjIUOBCGqti3Bi9mslk1lPvG+Qk00X2LF5dqPA
      crIqBAByinVDI2MXxSqyjD8yN2uzqx8DtWvW4PNd2Yhj9khs2ViCHB1hzMeFjF7S44+MibjF
      bMQsaRh0Ipf2C3xuM9mMSrt/hOKS3HROb9QxHIzPYfoRJ57RkUxoq7LzwzV0DnBtoKCJBg6/
      8jKLo/2v8INfHuLNUwOMn8y19oXIiuKoUISDEY62BYikxj5ABrMBNasQH3dnc3dfkHhWwWKa
      rXc2C/6eVopryhf8JkvFjCNAf1cbzT2DqInootkEzzXNdGnnZNe7QJvghaadTZq2li4qq3w4
      K7Ywvfa/hqKoSFJuw3J4sI/O/iHEbIZkIopgtI8akGiaRkllCT4pTdxuQFVVVFUlForw9rGc
      eraqqmiaxsBQCE3VqC01oKoK3X1Bqnw2LCYDqqblbvRE5d3jHQDsnsX7JEeG0Yx2tHm293Iw
      owCYzBaqKqqwGZiTTfB0zCfNdGnnZNe7iDbB80k7qzRKgtauIXbXTl8//o6z/PQPH/CNb34V
      Mznnt0azHbMljauggFgyO2pAIggSJp1MTbGdxp4RRFGctBAVRRFBEEhc9HMkCFzU+xnr7HsE
      YV66QHqzk4riQs51z86R70owY090FxUzfkY6G5vgPPPDW1bNPd5S9FfwSmd1uDEYdaMN5y2r
      vswEZzwaFT478WwKNatMG2up0BkMiKSJx1fvCDBpDRDs7+KtNw6yWs8wr2X6u5t57kdPc75j
      +l2vTDqD2+Xiymfbl9A4draXEUVjpXx4ZzQLG2qnFtELZ49w6GjzMpdoIpMEwGIx0tTWvmIV
      dj2zrn4HbqcNp2M6M1KZo0eP0nXuwqy3aWMjcd4/3sVSnKJcoq25iXMXOqb8W3Sog/eOnCIQ
      mmwSqhMkuvpXVsFukgAkoyP4+4fyI8CKkKHQU4Fu2r05HRs3bcdbUcSsLa01DUWb+lKMxcJi
      teGwT60H5Cz0IilxWtq6Jv1tJBQeveNtpbhsDSBzpOEMO7dsnOUQm2euKHKa7j4/VZXlU+i3
      6AgFh5HlzBQpc2SVLBUVlczXsfrtxpPUOn86+rtKV0+lbgBZn/sSV+pUYLIv0yIpzGcsB0Z/
      bzTYgJxHieKy6U6C48RTJm694y62bZp4uhv199IVSLBhzWSvFAcOHMCgxgknZDTRNOWu4xKp
      QujYurme7/3ol9z92Y8vSgZ5xlAUBVXO0tl6Ho+vHNsklzFpuvp66H7m5/yXv/smU203dLS2
      ULJu+7xPMD3SCA7DmBc7s5DiMdvrKK4jAEi2XRj06/hJ0bdH4xisf4Yk3sRD1jEBMOg3MbO6
      okxrczP20tJJAmAvKqPKe459H5znvjtvmfC322+/nd7udtY7iigYp2E6fifvb90/QYkfmcOb
      T82keoyms3zmCw9NWfl5FoYkSUiSjTvuumfKv3e3D3DvR+7DWlg1bf3f+dGryVWbky98+fPT
      XIWUQNOV8KkHa6dMWVZRM2X4YjNJAPq6O4jIZjZtqls9ehLT8KhtHxHnqZkjkhvqYXW7a4mP
      hGjvaKe+YHW6VJwP3W0tNJ1vpm7HLVQVj9eQVblwrgnf2nWsW8HXndTHb7v3gTld5AZMmBvO
      RJF0A4vVEat0gyiGqZ3SXo5ZWLxl/W2mk6yztMwqbm6uPLv7AWrrt1O3/aYFlOyyvPWdGMa1
      Ta7ul5eAv58L7d04vVWXCYCFz3zxIURxZe1WJwnAXDs/MGFuOBNm8Y8n/K7Tz64DA1iEud0q
      eCXmMnqUmR5mfCe+3dSIYp3d/NOg3zTrMhkMIuHBHjqDMts2Vs863XRs1HeyfVzbmMU/RkEj
      mVZoDclsLh5bhGiahgZXXFynsirt/gzrSkyz3iYXNYWquu3s3rn58r8wj6626Kz4LOdvXc/O
      Oq5Zdxcwve75XJjL6GGQlsvrWZLv/+BpBNXNumkWwZejqQrtnd0gJ0HUE09mWVdXh0k33ZdV
      4ydvB+hQRf7mY8bR7dQPWmJERR0PjN6AqvLE/mFEl5k/v3ih5aELUd5qTvKJmwuZ7T3xNXVb
      SbasXmP6VSCDecYQ2Limno98/tOz3oQQgGBwiFAoykBPB7FYlERaQVGU0a3CWFIhIasXleHg
      wR12nIac/e8lZTg9Gh6LiKZxUfFNIJpS2OA1oKo5Zbg7NlgpdhpY65ZQ1dlsQ8q88vtfEM+u
      3ht0VnwEyDMeiZqNm6gqLZx9ElFi186p1w2CIBCJZPjW74d46NZCPimKaKKI3aLDZ5eQGFOG
      609o+AwqGQGMogRo1BQZETQQxZwynCAKbPAZ6Q5m8Y6bu7e1tVFbO9Vujo7Pf/nPVsQx8GzJ
      jwCriI6mM7x+8CCpRVNc0zjYnmRblYU7q8edHYsCZjT64mP53LHWgmKQxl0nIvKRehvlrvHf
      SBGrIJO42G0uGcVHwiGyyvRHp6v5etj8CLCKqK7fxWOFpaAtngAMhLLoDboJBjGBUJq0SU//
      UJq6i2GNPUki4y4WfO5dP40BhYd3F054Xm9EwWvJdfZLRvHbb9i5SOVdfvICsMoo8i2GLfAl
      RL56p4cLA6kJDa1pGqFIFoNnbKXhsunwD42Jyd71NgKNUZr9GW4cS0mzX8bqWjr1Zk1VOHmq
      ES2TnWTgsxSqEPkp0DVOvz/FzxoiNPaPbSEXuIzcVWPGNv7WGk3DaRjbBK32mtheZkCcoLEk
      cPcmO+X2+WoizYwAWCw2HE4bJeVV2Gz2iwY+0qgqxGJeOpgfAa5xzHqB3rBMqXusqTVZpS2Q
      5Z6tY4Y3mgpG2/iOrRFKwsaK8V1EYHgkg7fKypIhSqxft27pnn8ZMwqApiocfO8gSnrx7gm+
      6myC1QXYBKsre0+wySDxNx/xYDONdW6ny8inXBM18bZO6tQiD2xzMvF6YIEHtl0d16XOlhkF
      QADWr69Hh7zqbIIzC7AJnltaYcFpV+qe4HRGoaEvwz2euZs46a+Sy7EXwsw9UZQo9o2ZtOVt
      gq8upvra5xnj2lwDaBoftifYUmXFvHTrtTmjKAqoKc6c72XrEjiKSkWDtHQOzqAKsfh0d7ah
      iiaqKhZzB2vupGJpftqUpj+c5mPrzJwcUri91sSbF2KYZdixycmmgoldfhl2gTR++2GA93un
      t3KaikxG4Zx/dml+3xjhD0eDvHoqwj++E6SvL87rbSn2nQrTOU8fh029SY73zk2DVM7IvNIU
      IznNNn7Ol4+IxTK914eFkIiGicWiJDPL6wEiGAoRiYzMHHGJEfQ6bq4w4NSBIEncXmcllVXJ
      KCJbaiyTOj8s4gjw7skgQpGdoy1RbIKC0aRnfZGepqE0A0MZBOf0jdLam8DhMdPSm8SgKljd
      ZgJ9cX7fl+Hz68z4PCYqHNMX1WOVsBfoONSRwieBXxbYVWqgxC4haSrTyXkqkQfE3mwAACAA
      SURBVOFAn8JgIEWZRUC2GNlbquc3TXGyiSxZvY4dZVN31vFfm1qXjqQKN7pFDrameK8nTZlV
      4M/2TvYQLenNrK2du0LfbNQJdDYPm+o9ICeIREAu2gKbHkXTcv5+FMGO5tyAclmYWnE3qnMD
      mgaSs4yMYEMeF0d21iFMESan00QiEWpq1826jBaLZd5rwJkwGiU2lUhsKhnXZk4dm0qnt6Be
      tJKsr7IxnFJQFJUKr4Eil4Eis4jLZUSolCn2TD8PjSVkTrXEOdqV5NZSHYFskrAscFOxkVRK
      5v3ONF/YMn1R96zJ7WBsKR9bn2ybRZkFUUBLy5zqS1G73Yl/OMUHWYX+sMyda80YDdPnmfva
      aLwVS1Ps1CHrJDwePY86jPhsErFF/gjPR53AuvV+JOmB0d+KoiCVb4T6eyaHjSMX9lezC5NW
      0RxzHiyaAHhdBrxAffFUX8wrZ7NtnYNtwBafnjVFEwWlO5DhZvfSaBMaTXru36Tn/k0XHRFe
      vOv23rqZbzqZ8msDlDhzZZ2DOtuScalzRoYHkBxerOMOuqJBP5KtEMu4sM7eIarKvGOdWkkx
      GErh87gmhPUHEpR4C676zg+r7CT48s4PUFFoQL/CVkNXNarCkD8wyS2KImfHPH+oGc43naG1
      s3dS8qy8/B7lADrbmunt6eLU6bOk5KU7Q1lVApBn8VGSYc62NJNIT+xELm8x5kv7/KIBl9tJ
      hXdsChn0D9DW2Yf+MidFr7z0EullEAo5HafxROME+4ZLh5mLebB4bW6D5hlFUGWSig6DONZh
      lLifn//+De752EP4XLkDskwigiaOrTOSsQjd3X1Urpk4HSyuqEFSF880dToKvBXct2E7unGj
      //jDzLkcRl6JvABc42iiyNqKYpIyuC6GSXoDmXQW47j5v9liZdA/dr9aWc16bM4CjPaJl3VE
      g0NUrpm4aF4K3IWeJc8D8lOg6wA9g6EoHvvYt06RVaqrKxhv1ZiKx0mGJroxP3bsQ3p6+yeE
      GQ16kqmlHwGWi/wIcI2jKgp6vURWUdFfdMNwtrkVm82Epqhc8gNhLyik2lo0Ia3NYkUat2c/
      ODiIpNOTTCYYG0+ubvIjwDVOIBxA1OSJPvo1Bf/AIKObK5rKUH8f/uHgaJRUKkU46CcSGztK
      9/l8DA8NkMmuXn//cyUvANc4RYVuBgaGJjg73rhhHbIM4qUdHk1B0hlJjXNhmEqlqFlXh9M2
      ds4xEhrGYHHgcEx/gdPVRl4ArnGGAyFchV6sxrEFb0NDA5LJgHbJ+F7Uo8kpUukx3av4SIBj
      R44Qio/Tx9KgfvMWYuHVe+XRXMkLwDWOaLSxsczJyDireF9JGWgClnFGMrKgZ/04HSVvaSVr
      1tTishhHfQBpmsJIJE519WSX5lcrcxKAVDS45Cdz1zrLXYfZTAbZXESpY6yzG8026jasnXBr
      xkgoQHf/4OhvvV5PKpmgr+cC4YvrB1ehj3Q8xKB/eS4uX466mpMArJS67bXEctehr8DF4EAv
      sdTYKsDjshENR0iOWxjsuGkvu3dM9N8pyzLuoioK7GO6WNHICLKyPGVfjroa3eOaj7pt+qI6
      bGbTo5PiXlKbvRxVcCCMy2shaeWLarxLnVZ21pFeYNpLdXV5HV4JnU6HxbIwC7zhwBDnGo9T
      W38j9oteILKqQHdPL7X1O3Jlz0R5+8BRHO4Cbt6Z06MNDPaAzozFOlGVWK83oFsEJbh0Oj3N
      vQFjTNffYOo2uJzp2mQ8grYApYqFqMPm0y4PamqEC50DFFWsxW3J5R/oPs/hsx0UeKrYfUPO
      NVb3hTPERCcba3O3uvsHemnt6KKyZh2lvtyprCJnee/t/ZSs38a6ypJlf5elqMMFHYSNL8zR
      Dz9k/Ya1RCMjBCIyhQUOdJqMZDCRlrMYNAVrgQ+LUTchbfuF86Q1Hf6BPtatXYNOJ5FIJLG7
      CkjGExgkFUFvJBpPU33R5E6SJFBSNJw4S3GJD0Fn4MLZU2yoq0cDMqkUBl2Ww409VFV4Kfe5
      MVgLsFuME8p87kwjRnshZp2GZDCTTSdIZ8FTYCcdHuCtDxq58d5PUV1onPS+Hx4+RHVVBYLB
      St/Zw/gVN3V1NVgkkZGRCE6XE03UUehyTEq7nCSSKc6eaqSwcszViKugCC3VxOC4k1+z1U7f
      QBjICYDBaMTr9WEwjBnTK9k0gWiSqhUylp/Q397dj6usksBgEJe3FKshydmmQWoqCrH5SlGT
      MQRRQs2msRX48He3ohispGMxCgscpOJJLB7P4pwEp0aGSCdG2LdvP5t37qSz/QJd3WDMpBkI
      y7jKC/EaMii9MfbsmjhsBfx+nL4KsskQb+5/G0uBD5dFIB0+REBwUmrJMhJMktQ78ZYWY5Eu
      LluUDIOBMJlImKCgw4JI4wf7GE7q8JUUYyCJEolx/EyEdLyAtNLLbXt2Tch7aGiQWquJY0fO
      EEzA3huqOHy8A4PdTJXLgKLktBCnYmRkhDPnUmhxP4FIFsGY4VyzipAYZCSYQHCVYNEL3H/P
      HYtRxfNmsKedZCZLevxCUhAoL6+kdMP20aBUKkk0OLa4dbo9tLacxzROF8hgtlFa5OIKbkCX
      DavTxYWmMxh0Jk41tXHnR25EjgxwtHEYk7OXQrNIWlbQiRpC5xDVxRZOnDlPgVXC33mK4ZQd
      m7tzYVOgPKsfNRPnpVf3sffuT1Bgy33v1PQI//GdH/DFr/03vBdNTUeCfiJZHRW+sQ7/4q+e
      p2zjTeyoH7vD6NihAzhK1rCuqmx5X2QONJ0+CXoL9RtmdrC1is4BNBKJqS3YE4nEjKmnizNz
      2pXKd5mQk0gmG+r4z7aSZe3mrYjaWFhgsHfSotRdWIjdNnERrijaoiyClwpNlaleu3FS59eU
      DMn0ZBWORVOGO/LeW2QMdrSsjM/lxB8ZocTnQ6c3UlE+tbuMfa+9RlV1FWgKOoMBf98gruJK
      TFKaZDyFpjehqgJKKsJILEqJz0uBt5pCl5n9r++jrqqaIU3FKumJhQax2jxIJj2xaBKHRSAr
      WIgHu4gnJYqKPJTX1mIz6haU7/GDr+OtXUdLTwyv20gmPoLdaiWrGTEaFALDCdxuPQOBNJIS
      x1How1voxuNZHvXey9HQIWUSyOM7raIQi6fQjTN20RtM9A0Ps7ayeDQsd3fAWJxL+kHGwsW5
      pWdx0HjttdeprqxAVdIYdDr6AnHKq6pJxiKIpNHQYyJFe88g9sIyCos8VJf7EFnEEaC8sgYJ
      MApZzp07S1aTGOjrJplV8ff10NbdMylNWUkRqmggkUwzEgpgtDmIR0L0dXWRScUwGU20d/cg
      awJmk4Wh/iEczty2XGV5CeGshpJIEouGQWchlogyMthDPDKCyWKht7cPBBGTzcngUD+2iwvw
      heRbUlHBcDCOWcgQiUZRNJFINEE2GSCZyaIzmOltbSWZyWAwmsjEgqi6lXMmJqgZbL4qbPqx
      hatgNOO1G8lq48JEgWhobA3Q2XqOWDLLeN+4qVQKq8tDsWeijcDKIuRslk0Wkuk0ocAwNqeD
      cCjEUE8XkXgGPWkGh4Po9Cbcbjt9vQNjHV+7WpBTWkd3/7ySZhJRrXdweNnz1TRN6+jomHfa
      xUBJhrVf/fqX2nAkMxqWDPu1o0c/1IIJZTTs5LHDWsPp5glp33z199qZlq6xAFXRPjjwptba
      Nf/6WGlCwwNaKJoY/b2K1gAzIBmpKi+eOd4U6M02Sr3z9NOwgHwBqqpWVm/mww8Pk03GSY/b
      zOrxh1lX4iatjO1/iJkEmmHMKUF/1wVG4mni49YyHc2n6B6O47Bdve4xXYU+XLaxw728Qcw1
      Ts3ajXjLa3COuwugyGWl8UIfe3aPrQvs3jIk85gAFJVW8+nPrmVgYGA0zO0tY6f+2lGFhgWe
      BOfJc7Vz9UyB8uRZAvICkOe6Ji8Aea5r8gKQ57omLwB5rmtGBSDm7+K5X7089hc1xbNPPU1s
      Bg8Y+15/Y14Zn2xsnFe66xVNlXnz5d/y5FM/pOF0y5RxMrFhHv/Of7D/vWPLXLqrl3EC0E3L
      mTO0B3KKYa0N79LU0j0qAD3tLTS3dY8mTCciHD9+nOa2zlyAptLcdIr+4TAA/oFBFFWhueUC
      oNHVep6Tp8+iqBoDPR28/PIrHDt2jJF4Bk3NcrrxJMHIKlEgW4W8++KvsK27kf/85YfRaTlP
      DfGRIA0NDQyHY6BmePXXv8BWXk9NRcmk9sgzNROmQLfceTuHDxwE4Mi5AXZvyqm8vrfvN3xw
      uo2OpsP88uUDZGPD/PvjPySTlfEP5/RHfvfzH9Ptj/DGr39CS3+EA6/v47mf/Ah/JEV0qJvT
      rb0kQv389FcvjeZ36QjiuaefIBRP8fNnniSQuHacLi0mpVVlHHz1Rc6297NlyyYAjn54GEVR
      +OkPnyKu5K6CvWQ0cnl75JmaCQKgs3hRE8No2Sia0Tl6TNw+EOOPPnE/H3nwc2RCPTQde48H
      Hv4GN990I2urc0Jy4uRxWs+fIZ6Kc+joSZCT3P3JL7F352YEnY7e9mYam1ro6umhuLya8opy
      du3ahdMQ5cSpDs6eOkky4qehqWu56+CqYM22W/mLr3yB3uYG/vV7PwY0UhdH4aHeZobiBtav
      q2H9pm3UVpZObo88UzJJFWJ7dQHPv/Ai2+/8OO37f5ELVNIksyomIU0sKWOzWukcGKS+pHrU
      Yqp8zRb+89e+hoBGKpXmpRe68LhyOiNvvfI6n/3KN3BLWZ54+qcAqJd8zOus1G3dxte++iho
      Kql09vIi5QGikSg2h4v7H/wsA089RTbRT1/KzTe+8QVe/dnjk+Jf3h55pmZUAAxWB27JRP32
      29l37Fk2ljoY8RVjEOGTD97PM09+DwWBT3zuYSqLrHz4o6f5QYOOcCo3jbnrlm185zvfRa+T
      uOOjn8bj840OL7tv283zTzyO3VVIoc8HwLpSF49//0kefOhL7Kov5ruPfw9JknjwoYcpM+Xv
      tb2coa5zPHvgCDqdjjWbdqG3FGNNvcQPnnoKSdXYpgPRUYBkyjXp5e1RV7U0N1Ne7eR1gfJc
      1+TPAfJc1+QFIM91TV4A8lzX5AUgz3XNVSsAcipG74CfoSE/AH1dnWQ0le7uHgYHh1a4dHkA
      ero6CQ77Sck59yudnZ2MBAbp6eknsUocLF+1JpE6Yhw61so6V4IX/9BLcXE1t1dWcezAq/jW
      bGbf6+9QVuoiGoli1ov0RQQe/dKnrt4Xvgo5fOQoOzdu4kjjcXSCAYPehOa28MGhI9TetIPU
      YD8XOvwYPCVU2RUsnlp2batb1jJevf3BWEiZq5WCshrWykZEnRktK7N9730Eh3op8now2V14
      Cj0omQSOEtfVO9xdpezatolQWqDUU4ymKWiiHrPDTt2NtwJJdDY769bZ0Yw2nCYoqZjaf9RS
      kj8HyHNdM6f7AS4nk8lM8B680vR2tGAuqKDAsfpOPedTV+PvB7gW2mc1sqARIBKJ4HA4FrM8
      cy9DYIAPTjRz/22b+Id/fJzdd9+D3e5AFwsiFjoIh1LcuffmFSufKqc4da6DmsrSZa+r5Wsf
      mX0vvYLNqOfEYIIbKt14qzdSWzF/f0rLxdW7BriIrKqcPn2a4gIdG2qKCYdC+Pu6OPrWQdbe
      dRtO3TLoFWUT7Hv9LW6+52O0HDtAStXhD8ZYW2al68IFnnu9mX/5//6alf1ULD4Rfyf/9PgL
      /Lev3MsHb79NQLEhWvRkBvVkDryHxenii1/9Mzzm1etMd0lGAE1VCfz7dzCsXYPkcCAYDYhm
      M4LBiGDQI5jNCHo9gtGYC7/M27ASi00ZPhXxSJDhSGbUe5umqgiiSH9nG/biKmzGxa/8/cfa
      GQrHR3+r2QTvvPRLPOt2ooY7CKRtVBa7ETNDpAIRauvruO/jH6XcvTIjgJqJ897h09xy280L
      /uKdahvidHtum3m4v5Mz5y6wfsNGYiNBPD4f/cMxCiwCkqWAkaEe1tbVj6b90j2bp3vskqCp
      KkowSOzNtxANAi+PRLjn83/MmYMv0traRcrsW5wR4Pn9pyeFyReCpAdUNFFES6XQUilEReaO
      TaUUGgS0bBYtnUFNJuGySyiyPd2IVhtSweycsJqAS/cbysMBdEUezBs2gK+bVFEROq8X3WXe
      mX/wYgPt/bOzlrr7hmru2Vk7+vvNhvbRTgCgqVmyaR/x3hT+qAmD1UJPp0I2pvKVhz7NI/dt
      ndccfqH0dDTT3B2kWu/nYFOKLv8g1myIeEplMK7hc9m4KzSMraICwTzmLlCQJJCm3jMbauql
      rWnM0XEZItEjpwDQnz6LXWem0ewlqI8BcLR3rG8spQDEkhlC3f0UhgfJtHeQbmunu3uImMWO
      5Haj2Q00DfXS9vzLbC4UcG+4ieMfvLcwAejpaMFSWMEzL/yWjuYubDYNva0UncGE2epEjRqx
      OlxgJPcfsPvjd1FY6xt9xqf+5mcTnpkM91Nu2krKaCeemjh9+fbX7mLLuLRTdWJN6ENWgcND
      uDLteLJxCuUEOzxGrCYDgsmEzuvF0hpGiGkEdFYCejNpUY9OVZDFsRFD0DTMapZdbpG0TUaN
      x1BjcbZ2n6Y2MIxZzWJVM9iUDAVygj7ZwRPFufWGBBgKShFnuqVtCenv6iAUyVBSUcHWDQqx
      QBtxvQOPx0zFmgJSCpjULILZjGgd5+9TUdGucBPk+DfSawrixUmESc1Sns6wJhXAJacAiEkG
      hvQ2/HorqXPn0ZeWIi3CTfNKJEqmrS33X2cnscFhTvpTdBucdJpc9BhKSbou+mWNX/wPN1yI
      cfgCQBtQsjABcLtc/OHV3xLsvoCWzZDM2JEjwxhJoLPcRLCjEeu222d8TjYZJjTYj7einO5T
      h4hVbYZQAOQYRmcZ2USEwor1k9K194cnfIlzXHwlY2Huv4us/9pd1Nb6UFMp5MEhEoP78YT6
      2JD0U5SNo9dUfNkYCVFPVMoJnoZAQtRRenqARKYCyW5HtNkYMVppsuqIi3rikoGEaMCsZpG0
      5b87KBoO0h8YQaemQNQTT2ZZV1eHSSdw4+0f4R6HY9yHogaSQAToy3XQdyiBDoDUpGfXlLj4
      2oM3TAgbUk5zuHv2Jyo2JY03E6NIjpM8dozoSy+jxmIgSeiKPOjLy9H5fOiLfehKSqac9iqx
      GNn2dtJt7WQutKLGYog2G4baGgxr12C79x4GhlP88Advzrpcl5hRAEb8vRw61YJBzTAyPIjR
      Vcz2PXfitYp0dHRx0+7beanVwaU7A5V0hNBAL0oyhLts8hU1qqoiyxPtfjVNI+rvxmiSsLmc
      ZFMx0qkkHm8RqegwQ53NFFSsn5R2LsuX0bQ6HWJZKW2FlZyJTrwCtDwdJinq6U1EEYwujKbc
      durn99az/a6xuWxHi0J73D8hbUKaertR1TRkWZ5TWeeCpqn09XVjN5pIJyMIRgeJtIJeEEbf
      ua0vxJkO/8wPm/RsbVJbqerchDwmGYmZjbRRyLe+8LmxPygKr796mHf3NeDLHqMom8CrJPA5
      TdicNpSsjKDXkw5H6BxJ02l002l2I5dUIvrsfPtrd4+VE1DV+OTMZ8GMApBVBUp8xZR6HJht
      txIMjVDs0CMAm7bvvLgIPjEaXzI68FRNv9gTRRGdbmK2oqSnpO4mLHYXzuKxL30mGcNebMPs
      8CBMkVaYw/RiqrSjI0/1BoYuNBCyFKBqGuHOD9HZqzGZLXjWbEMUhPnnezHtXNLMBb1ez47t
      u3DaJ7ssv/TO881bEJjcVuL8z9MnPEunI2wr4LS1mNNM3C41prLcGO2h3+Cg1bIWxr9aOAvh
      4BTlmt9mx4wC4PGV4vGNHVFbrYvvG15ntDHVbqXBbAPAVrA0+8mjI48REoFusiNJLDYLFncF
      gs5IMtSDomxbkrwXC7PNiXnmaKueZLgfTbJgMuro8w/yqkFEbzSTGuzCbHeQzapYnQWLnu9V
      fw6wEC6NPGabHZ3Jg8VdNLrAU+U0iWgFhuu6hpYPvclC7/mjWO1eIuFhTPoUsXMfgmggo0iY
      rWbW7Lx30fO9rpt3/MhjdRdN+JuoM2K7LCzP0pGMBHGXb8Jo0CFZnLiLl+civutaAPKsHuze
      mtF/G5fxEpq8hnCe65q8AOS5rskLwDKiKAqqnOYPv/0tydVhEXjdkxeAZUSSJOR0iqrqSrLy
      8p8a55lMfhG8zBisTrZuv2HmiHmWhfwIsCAENlR5MFzXtTi5DtZVFbEEWuhLwqKPABXFbqIj
      UcLJq8fP/5a1JXT3+i+WWWD7hhJaOwaJpqefqOvNVu7cUYFHr2IVwWCQaAnKbCu3ISgKKVnl
      vaa+5XuJFWB8HVS5zcQzCicGM9xUW0iJVUcqq/Bhy+p2UbN4AiAI7K4rp7TERc9ACCUZYzCj
      Z6PHQAgTQx1ddI1M7fpcZ9BT5LZz1yYvB072kM5kCSQUCmx63HYTrT0hpp8xC3hdJqxWK4Ue
      G1tcBn56uJN1JXb84RSJRHL6jiwIfPTGtVhsFtaWWpFU2HdqmA01Xta6DcSyGq8e65w6rarQ
      0zNE0GwkoQhkkgpeu45IPEU0kYXrwdfAuDqIxdOgaXhNEmf7RhgMJSA9WcN0TogS9RVOznUG
      r9D+UyAI7K4rwesrJOQPoqgqH7aH2bOxGJcBwimZ9092I7OYAqBBLJnkVGuGVCqFw2rEY1AR
      dAbURJqsIAFTC4CgM3PrpmI0UcQsqtSvL6N1YISNtR6cZhPxcIS+2HSdGHZvLKcvobHGJSGL
      AmuKbcgK7NpYRiaV5vWGjmnLfKqtn6wmoikKPocRSU1x4Fgb4VgGzxWUbLLpFGe7FtjAK4So
      N7Cz1s3JlkEyKtSUF5JJZKhdW8JgexfN/tm913R10D6PMunNVrYWG3AVODnRFmCt18qQYqTe
      K5FOyRQ4zRxpHpz5QZDriymFuD/CBreFTCZLhcdKJJFmOJjGIMCl+ckiToE0TncMTw5unyLs
      MrKJCC+82QRAebGbc51DdA3HaO0NzCJbjd9/0Mr66kJePhsgmlEBEZ/bSENLlmT8SmqyGr3D
      sdFf/ktmjtFco3YnZ87+akNvcfDpvVXYJCgqcNF2oYOaskIknYjTaSU1aGAq24AlR1XAaKK2
      2M1IPIvVIKEfSdAxLGC2WbHo5/IwjdPtOWE5NUPMVbcL1DMQmkcqleYJ+u4qg6EkOeuPqw2V
      dFrBaJxTi88eOck7H7ZgMhmIJBXMeh2HznSBpmK1WfD7V+Y+sWw6xbFz/Rw717+s+V7X+xer
      jwT/+g//J6fb5m68MluymSxDIym6BiOEI3H6A3FCsRSheIaewTDp6+x4Ii8AqwoDtWvW4PPN
      zhlAnoWTF4BVhYImGjj8ystEZ5kiGg4wFAgTGOonlkjQ09PPdbD/tGjMuAbo72qjuWcQNRGd
      ZBM8lX3vTMwnzXRp52UTPJ+0l9nGziftbNK0tXRRWeXDWbGF2WoEhwPDnG7vwYRCZHgAg6sE
      yeGZ0D7ztUfWNBZsEzyepX3W/JSrZhQAk9lCVUUVNgOTbIKnsu+difmkmS7tQm2CZ512uWyC
      lQStXUPsrp19/VSs2UDFmg1T572abYIX/VlLZBPsLipm/Ix0KWyC8+TwllVzj7cUvWn1Ofe9
      VpkkgsH+Lt564+BK7ARf9/R3N/Pcj57mfMf05x/59llcJgmAxWKkqa2dvFPt5Wdd/Q7cThtO
      x/RH0Pn2WVwmCUAyOoK/fyj/hVkCFEUhk4hw4OAHTL0NkKHQU4HuClPjfPssLpdVtcyRhjPs
      3LJxbspHeWaFJEkIoojNIpFKTxVDRyg4jCxnpnlCvn0Wm8sEQMfWzfUcO3GClXPpem2jN9m4
      YedN2Ka8tiBNV18Pv37m5ySmTJ1vn8Vm0i5QNJ3lM194iPxez/RU6gaQ9d2ziuuRymf93O72
      Ae79yH1YC6umrf+Vbp8iMUydfhoV8auQSQLQ191BRDazaVPdrDXl5lIhFmHKsX9ezKUjXp7v
      QjrxY7bXUVxHZpXWYLIBt84qbnwkRHtHO/UFa6aNM5/2WUxuMzVys+vZeab+Xyf8+qzlAA8W
      fXeez/rihF9WITUvwZxUh7fd+8CcDyj+dg4VYtbdBYx5/fqM5cCs0xZJNwBj9wPMpSNenu9S
      deKFUFu/nbrtN10xznza53qgUjc4p354iUkCsNyV+5B19gJgFv946QqyCjAYRMKDPXQGZbZt
      rJ4yznzaZy6j3cR01/5Se9XZA1zfJPn+D55GUN2s+7tvLto8fy6j3Xgk2y7g4UUqxeokLwCr
      CoGNa+qp3HFzfhNimcgLwKpCombjJqpKC2eOmmdRyK+mVhEdTWd4/eBBUtm838TlIj8CrCKq
      63fxWGEpaHkBWC7yArDKKBp3HVWepSc/BcpzXZMfAa5yNE0lGAyDksZocxIOjlBWXpLXFZol
      MwqApiocfO8gSnryPcHXjU2wugCbYHVp7wlG0zjZeAxB0fI2wfNgRgEQgPXr69Ehrzqb4MwC
      bILnllZYcNqluidYECXuvuu+afLOvfNcyjvh2VPYBCuLaMe7mM+Sl8omGFGi2Ocd/Zm3CV4Y
      SjZJd3+Y6sqSlS5KHq7xRXBvIE0gNfdhtmUgRVKZ/bThzbNRXjsXmzGeoiiARjA4H/ePeZaC
      RVsEp/7/9s7lqY3sisNfv9V6tAA9QWDA2Abz8Jh4JjNVKcZT2SSLZDWpySKp7PMvZZvKOpss
      skgyVSGxp8b4FRvGFsYOLxsLJIMaSd1Sd98sHM/YIAw2UJ4x/S1Vfc7tPke/vrerz7ndaDFX
      avGkIeiNSQSKQp8pcbPiMRiTaKAwkT/6TlYRCK4tOzQdj2hUZbslGLRkbpU8FpZtenosvpiI
      Hdj20wGDP/xjnU8/SmPJgstD7Wc8Z9vlT7dqXF9rcqlbo4FM5t4Wf1tuUvEk+i2Z3//k1S+b
      K4oCSpQfXRw98jgchqebTSRNIRt7s2XEyzH4fDxKxQHH8XnmBkRkQSSiTsEnKAAABb9JREFU
      8ruPOg7kSwSCv8zZLD5p0J+L0JAVvhiL8cevNxnL6pSa8PPh9nls52tnXqdOGXw5XycSUXB8
      +OxMFJkjFIAkBN+UWqxWmqj9BkHg82DFp2j75EdM5jbcPQXwr9sVpEyCmXmbuORjRDQkP2Dd
      FZgaxA2V33yYbD8usFRx0RyPoi2QESRjEbJRGT9r0hXbe/3bzrZDCrg0FEdHMLvm7ikASVP5
      8YBJT6fGSLdBRJPBF/wsYVCwFGrf03dZC6t1rLTJ/GoDRYaPB6L8+cYmqqlxKqkyeTpGJnKw
      hcHLMeiKq0z2abi+wG4KTEkQMQ/+95KADlPGyhksBTLC9Zi+Z3PnscN4t8G5fNsWuj197cxr
      LPBZtz1KZY9cVMYDdI5QAEZU59eTKqvbPv0dz3c2rjU8PmmBaPn8YmzvnQ7O9cfZcHx8P6Av
      q5Pp0MnGVapNwUbFIWq95uJliV9dTPKo3KI/pSNL4LV86kLn44F9nlfa2AJcGAS77jGe23vG
      MgyFiV6TiR0NX93/v/b060d+Z2zXPe7M15hZajDZo2OsOvSlDNymz7rtU3YEmQNuS7RnDN7m
      xGSJqaH4rp+nzltv5atdXi+1OfRI3wOoqkx/x3d3j5ipEjP3HybboZMFRvOvRr4AkD3AskmS
      GEx/d5yqKRw4bDtsX5CIqgfenvCHxAdnLT4AJnIaQ5nnN5aLhfdwI6498rqT9/ohOGRvXvz5
      TzqhAEJONKEAQk40oQBCTjShAEJONKEAQk40oQBCTjShAEJONKEAQk40oQBCTjRvJADHrnDn
      7jc4XvghzrflOGMY5ufNeSMB1O1NtrdtGs3vaanjD4DjjGGYnzfn2yq1arW6/8HxNGOjafDq
      VKvgui7VapXm2G93HSvE85a6nQSShfTSWIex9fp+SpB89ROhx2HrJUdwD2n7IlY7Y/g6VFUl
      Gn1e0XqY/LQ73/3OG0C2Cng7xvWTw/htcrafLwBxjL6ElKD1Fr4kcYhubd/3nzd5hLbHavu2
      HOWY76uvQwngZb7+6gpqJE4hm8JMWNSeldhs6SQiKqYu0UInn+lqa1teLnL17gqTH14gInzc
      QEZXJXQFqvUmqqqTz+2usC/em0UxEsQNhcXiQ/omxzH8ANdt0fQCLFPm+p0io2eHyBcK39aF
      v6BeXmbm/iqdyU5SqS6kwENRFSIRne2ay8KDIlNTU3tec+DVmZ6eweq06MnnKT5a5MLoCE69
      RirXjbpzwHfAw9kZbLmLfCqBokjYWzbpTIZGo4bTCuiI6UhajEfFuyQSceqeRjxmUq+WyeZ7
      0AwTK96+r2K5eAspPUzU2+L+/EMKQ0NsV8qkOy3mZx+QGz/PmXyure2r+Ny6Mo2aO0fKlNBU
      qDWamGaUWq3B4vIiF8eH0aKdxCLaLuvKSpGNIImoldFjSRrbW2QyGTQFHA98p4YRS1BeXaQq
      IuRSSZJWglhEO7p+gEp5HaFWKC89ZK0hOJ012ag2CVCRzSiWIZG/fLmtrefWWF9/ytWvrnMu
      G+e/tkfK8Nm0PcyogYQgn/tsl916qUSh3+A/M3dZ2/SoyIKE4hLrGuDOtet05rqQ6htcu/aM
      S7EUvZ2v1r0Lz8V2mtSf3sYZPM/92TnOnR2gWilRqhtkU/vVkwuqVRvZ3+SvN28Sz53i5u0Z
      SktrXP7l5+SS777OvrG9yd2VEk5vii17neaGja1ZZCyF5VKV3nSU3jOTCM/hwfwTAi1B6fEa
      qe40S0uLdA+McOH8mba+3ZpNubbC6sNrICXYcpsYsuDejX9jJAcoz85xOpfbdePZjUI0IqEb
      8Pcv/0kykyOheYh6hcdboMY7uXplmtOjnzB8urDLWlMVlhdW6BIVbtxeIJGNY2+WUYKAtZaK
      GdRRhE/1WRkvXsD0qjxrFDDstaObAUJCAAhcZmZuku4ZYqA3cyhXjcoKj7Y0RgcPMoscnKer
      jzCSBTriOv8D+btS6DUXezsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='UniversityRating' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5Qdx3mu+3Ta3b1zmD05YwDMIGcSzEkSk0RKokSLoijJSo7XZ9n+oXXW
      Xev+sY/OPdf20bGPfa+XbMtKtizLoilSEhNIMBMMyCDiDCbHPTuH3r073B8AAQwnYPYgkJTm
      /QGsmem3qjp8VfW99dVXguu6LstYxm8oxPe7ActYxvuJZQNYxm80lg1gGb/RWDaAZfxGY9kA
      lvEbjWUDWMZvNJYNYBm/0fi1MQDHcZbEs2371563lKUex3GuOm8p79B13SXzbNtGrppZVSUO
      mXQGV5CIhIOL5pUNA0XVEIU5ynRsyhUbTfXM+P3Lvbt5beDlJbTRxaPECPu3L+r6UDbHjW+8
      jeu6CMIcDVxEfYIgIHlL6C3jVfOWWt+V4n078xkqF35G73781dTp2pSLBTzeQNVt/T+/cCOw
      tLVc13UvvwGUkgP86FcHuf+2zeRticd++iPSmQKf/9LX8AoGouojlUwSCAbJpvN0rW7kf//N
      v/Cxbd1UGhpRLIHM4AkCHWuIB3Ucq4yLSCadI1IToZgcp3c0QSFdYcPWtQR8OvF4nPHcGAdG
      956/OdsmPZzHF/dSKTv4Ih6KiQKirqH5Zt62qjRQG2kDoJiYQNR8JEfGiXd24JbzFAoW4boY
      AhBPJNm+/8Ds+66UOV0waNAUho0Ka0JBxvJZBFmlSddmXS8Hc3js05f12buuy9FRA8kjITsO
      NREPQVng5GSZxpiKX6neEC6GfVPXY6JUxakUMyBJ5KcnCda2MXnsBRy1hoauDXN2egvBxeVS
      7uoyG4DLkcOnGOvdy26tzMDgOJqq4PUF+On3/pZAQwtWMUkpFyEatiBQR/faVkqFPJYj8fbz
      jzOUEWlVXLypJIZSy8D+51jbvYrBrERQSGOXHWyPhmH6Ge79Ptfc/RDxeHx2UyoWmf4kZdsm
      dSxH87oAw8fS4EDPnZ3z3sH0kdcxAqsYO3IIZJXhvXuQFImej30Cry7NyytVTPZMjNLoD3As
      W8ArSXicCk8MJ/nGyo5LekmLheuAZTu8dTRP2atSPFpkYxgGXJnKYIWv7ghchVYsDMtI0//6
      Lwmt3MT0wHGQVAq5PEopR9lch65e3Vn5ZTeAeNtKvvalNgYn0rS3dyB7NDTJwRuupZKZRAvH
      yGQMdv/yXxgcMgCdRz53N2lL47aGu8iXbSQR6pqacVyRzOo4pqixXvUjmRkk1UvZgXximmTC
      T0dHy5wflysIqBEvXq+Kul5BUAV0D6gN0QXvILxyM4WcgdNaj2PbNHe3MzZSQL3IixEEgY5g
      GK8s0+p1cFyHUcOkxiPjwlUxAFGCcsXl/p0xTo8Z1K7ScRwIZip0NuhXoQUXh2NZCJJDqVAi
      HKvDcRxa1l+PUbbRrvLHDyC8X8Fw05NjWKJGXU1kSXzHrjA6nqCpqQEBePbYk7zY91zV5biu
      i+qJE/HvXNT14UyO2195/ZLn1rKviN42Wg2Tq2NG1eHPM1/Acs/3o+7ZdlbbUvfsv9Uyv/X1
      2wEXSZp/dJ6zvrNO8PtmAJcbtm1X/RAALMtClqsfCD9MPEmSqjZW27YRRXFJPEEQEMXqevN3
      1aNq3+FSeVdFBZpdq0MqnSUSCS94WblUQtH0eVUgw7TRtfeoQH27eW3gpaqb5Dgu4jyel19f
      g+ZpnfNvix0B1p7sZUX/0AU8B0E4/3GYtkXOdoh5PHPRz0Hy59GbJy9a32La6bowlbOIBmTk
      eW5hKSPcIbOTXxavAaia+24/XD0PYO62NsWDfO3eLQvyr7gB5BL9/PSpg9x760YKjof/+MmP
      6WppYft112K6Mq31Pv7nX//onAokWwLZoRP423uoDXpxLAMXiUwqRyQeppCcoG80QT5VYePW
      tQT8Xmpr40zkxjk4un/ONriWRWq4QKDeSzFRwlcfQLAtjJKDL6zO2/awXyfgnTl3rhRzTI8l
      qe1so5SaRo/EMKYnKJkC0cbaWQN4vLeXpiPHZpU9XshhIPLS8AArYg3sjIUZL+QRZZU6bbYx
      KJEMHnvg4g98Qbjs6y/hmBY/PlTggZtr2RqCE4kKXXUqnmolmPcgYeTZn2tfEtexSmTGh9HD
      NQiSjuoRSI0P4Yu34fFUpzK9i4JRueg1V3gdwOXo0VOcOvIWr4UcDveP4JVkTg/0MzQ6giEI
      /Mn/8TWM4hkVaO/uJxjKSLQoDr50mn1y/JwKNJSVCZDErrjYyhkVaOynP2TH3Z+jtnYOFehC
      iCKFgSnGD1j4GwOMnszTtt7H4IE8Pbc3VXVPVqnAyIG3qJgVel95hQ13fQyrnKP/4ElCH78L
      WVrcR5QqG7w8lcR2RfZPjROXbXZNJLEcm9/v7qlKRl80Kha7juWJ+CSaQiK9E2VOHyui+SQO
      5eDBVbPl2qsFqzjNRO8B6jtWkCooxCMeJk8fot5Xt2QDWAyu7AjgOjS09/CH32hjZLpAQ1MH
      iiTjlR0kVceVdQR0vvjQvaRtjdub4xTKNqIAdY1NOEhkuuswJY0NHh9yJYPo8VJ2BArTCaYm
      /HTOowJdCCtfAq9GrDGALDnUrtKxLZeGNQtPxeaCIIpE2ztRJBfXLGEYFRRJpHZFZ1UfrSQI
      rIvF6dBkLEnFsSvcWV+L4tGvzMcPFE1Y36Lh93vQBJeOqEKpWWEsY7G+ef6R8GrAdSWC8XrQ
      66jxS9jlHOHaJlx3aSv8i8WH1gl27Arjk9M0NNQjALuOP8VLfc9XXc5Cc92Adx262l4170Ks
      P3aSlX0XTF1ct7pV0rOQA/mqVo4vqJCrpR4dMLt4rHj92Z+WpgNdTl5rXZDf/+SOuVnLKtAZ
      fJjUnGUV6PLxrroKVC7msUUVr3bx+ZxRKqJoXuaaTruOdVYFmjlkv9T7PK9WqQI5FYty0UYP
      XXz4jwVvQRTPz5HfHQEqhTw2MppPo3Fiiu0HDi9c5wKq03uRM8sgygRkqSreu9BbRxH10hLX
      K2YOVJblkig51AcW/tBc92xfvISOfMiu5Uf5j1Tb1LPhEHNX6Nom5XIZzTt7FdzlCsQCAZQy
      4/zg0Rf41J3XkTZAtkuMnzrIgQmNu2/dgO0I+P1eppIZVnfE+av/9UPu3N6DWV+PVBHID5/C
      1959RgWqGLiCRDqZJVoboTA9Qd94glzSZOPWtQT9PurqapnMT3B4bHaMzruwDZP0WAlf1EMx
      axFpDjC8u5fpjM2au1fi8Sz8xhrMHkRXITudxTGyyIE4AZ/Dnp89TceNt1LXXIMzPMT6Qwsb
      wHwYyKawRA+KU0HXfATcMt/pHeLutg5W+JbmnCr2KeRAcUnc9+L7LydorPfS5hXwBz3U6QLv
      jJZprdMIXeTZLRZZs4UDmQ2Xpax3Mfj2L1BjK9BUGcETxB8Kkhnvx1+3EkWRroABuC5H3znG
      6MmDvBRVOXxqGN0u8NFr11KZOs4PvrcHQW9AlATShs2fffOrlEsFTFti3wu/ZDgj0Sw7+LNp
      Dsi19O/bdUYFyskE3CR2BWxFxTADTPzsX7jm7oeoq7t4s0RFIn1sHGFLC+NvjYDQjOkIyK6N
      VXHweC4+hAqOybFX3mD1lhUcf+V1OlfXIgaiDLz1JnXNd13SYzuaTDBatnAVL0VjhJtjQcK6
      h+dHJ1mxcu61iKuJjOmSGSjSsFrjscN5bm9XOT1eYswW+Wj7++tALwSzYmOOHEbt2oyRncKt
      ZJjqO4QcakNR9CsxArjUNnfxh7/fzsBEhpaWTjyySGtDDXfEu1B1nbHhEcKRMHh8SGh86fMf
      J2Nr3NFaR+FsLFC8oRHXFcn01GGKGps8PqRKFtGjYzoChelpJsZ9dLQ3L2q0LaeKKGGd/HAe
      b60X13Vp3FJPueSiexc3f3QFmc4tPWQSaXwhL3K4mZUbgqixxkt7ZLjEdB+iKrJCV/GqdTiu
      w07VoNZfvVJ1JfBbW0IUbOhPmMR1AVkUiIU91Ieq97uuJlrW7sRyZczMKNHGdorJMQK1jefC
      tj+0TrBjV5iYSlJfX4cAPHf8aV46vbvqchar5tSEbp/TB7gQTeOTXLPv4GWp73LwvO0jZ3wA
      hKrn5EsJ679U3qBVy/cLVY6k7tnooyVU6PIhNoD3YlkFmp+3rALNxiWrQK5jkUzliMWWEM3p
      OiRTGSLRyJwdk1Esoujzq0Clso1XnznvfLH3eV7pf6H6prguNaFbkERvVby2wRE2HT0+43e2
      YzNVrlCna3Pel+w10FpHMJc4AszFm8xYBH0SqbxNPDQ7tmfpI85MNefnxes5bHZUXc5iUCmm
      ERQfsrLEFd8Lljpu39LBrVsW384lGcArP/8BSvctPPPD7/DZr/wOkpFG8fpIZPKosodIQCWV
      LNB/6ih1q1bTEIoiyC7TqTwhHV556xCTY8Pcftcn6WmP8Jff/sE5FUg0BQojp/C1dVMbOqsC
      IZFKZYjVRslPT9A/niAzXWbT1nUEAz7q6+uYyk/wzvihc200cyXyKQtvUEJQVTweyIzk8dUH
      UDwze6f6SjeKHDrzLB2b1NgUulfGMAXCtRFSA/3IoTjByHkpTRseonzknTMc12Uwn+f09Bgv
      5Ex+p3sNXqfMZMWh0+87Zwx2MI9H7FvKI58TJ07neGrMZpUfBgyBR7YFmUibpG2B1XHPZV3+
      Gsg2cKjsu8RSXPJT/bhKEKFSwBNqQCiNcvqdd2jecDNeX3Wd0FxY11Fb1fVVG4BTzpGyZA48
      /jiBcJif/+O3GHca2dyqU67bQfHki7R0tfLGi++g1dRwe1zlO//+I9Sma2lmkJpVaxgemSLo
      8/Krx/6DNX/yu1SMIqYjsf/FXzGckWiSHYL5LAelOP37nmVN92pG8gp+J4FTEbAUDaPiJ/Gf
      /8qOez5Pff3sdlqlCpNHJok0qJhyACmbxkBicqTMqp0LPSSBE6+8hIiIDazauYPS9DiJvgQb
      b9sx70e1e3QIr6QQFR2OZTIcmRwlKAmEVvRQM1/I5SViMm0RklweP2WyISLzXH+ZZo/Dc30G
      XbEI8iUGt112uJAdP4FRLOOqPpze40RrdFSfxkT/aTrWrr3qTaraAEzT4trb7qVrdAhRdAnU
      NJIYPIUvFMETiNAnjtG07SbaurZSH1awlAC/270TwbEYfMeDv2sTrZEoqF5Ex8VF40sP30fG
      VvloWwMF80wsULy+AQeJ7JoGKqLKlveqQMlpxka8dLQ3zflRipJIpCOCP6adWSZpqkfPGvgb
      Ft6cL+CyYvt2jOkx0kUFWVGQfWEaauZXYwTg+vpGwh4Pk6ZFRJEI10Q4VLAILTI4bim4bn2I
      4KTJpzeFOJ2yiKkCGcNle+vcoeTvN1xc1EAcURcxMqOE29biC0ZR8tN4a94fqfcyO8E2Y2MJ
      GhrmEOZdh4mJKeJ1tYiXIdrLsS0mEynq6uIIwPPHn+Hl/t1Vl+O6LrHQrchidcN72+AQm985
      URVH8pXQW0c+kNkdZvPO/P8u9bHiDYvyAa66enT2n3d5t2/t5LZF+ADLsUBn8WFSc5ZVoMvH
      W7QKZJsl0kWLWHjhjAJGsYCiecE2yRRNIgGNYtnB9x61plAo4PMt3NuWCgU8Xt+8KlCxbM8q
      98VTzy1pBAj5rkFVaub8m5FL40oauveM/n/N3gM0TCbOtGOOntW/uh9BWjiB1XxqzoX48/QX
      5uS9t762+jBf//jWBctaxsKYxwBcnv7JP9Gw81Mw9hZPvj3CR6/dQLy2lpGxCWRRonvDBvb9
      8ruclFfT98LjbL/lBjZv2kZifJg3j/Ry6+ZO+tIazREFWRIJhqJYtsGbe4+wY30nqaKNabls
      WNPCX/7P73PX9jUYdbWIpkBprA+9dRV1IR9OpYSLTDKZpqYudl4FShhs3LaeUMBHQ0M9U4VJ
      jk4cOdN6xyHVn8ZbF8CYLuCtDaAokBnO4WsIzlCB4uE2NI+Aa5mkJlMIlTyWHCAShDeeeJFV
      t91BTd2Z+X93Xx/u8eMge8iYFTr9PoZzmXO5fzT9CKIy0wBc22H/sEFTzEPveJk1rV4KOZNT
      KZsdnTraHJP1w1MfAwTscpay6VDOjqOFW1FEk1w6Q6i+FVEQsJ1fi8H7fcWcBmCVM2RMl/0/
      +DvEUD1OcZpXnvwpQriWVNZFqOQwQysI1bZz9NHHUYIRUiP9fPfgCb7y8Gd455//ka46L4//
      4mWiDa1sbPDw9sAE7WuuJ9t/nIHTx7jrhs08/soA6zd0YpWLlB2Rgy8/xXBWoklyCBVyHJbi
      9L/9DGt6VjNa8OC1pnDtsyqQ6Sf58x+z456HaWh4zw3YNqXJHBNHE3iCOqPHMoT97hkVaNSc
      RwVyOPHqHuK1OvmKDzsuoceCnN5ziJpP3HjuqvHsJGNyLSemBrmzIc4vxtMIrsUf9PTM+YBd
      x2VwyuBwyiIxYSCoEgGPQMm05xzhLoRgpxk5NojiJiiXHYLxRlKn30aNNOCdY9vkMqrHnAZg
      GhVu+8RDJMYGMYoFNF8AyyjiiBKqR8N1baI1Eq53NX/0xxsopKdwRZlbVIVkzuB3fu+/4Ng2
      f/hHm8hPJ1i1ZiU7cwYej8LUVAuKW6Zgwr13NCGg8eVHPknW0vhYRxMF00EUoaauHtcVya1p
      xJRUtipepEoO0aNhOgLF1DQjQ1462uZQgQQBNeqnaUUc16ighTUsy8WbK+Orn28qJ9K1fQNG
      JodTquBrbKc9nEWvbZ5xVUOolggSrUoTHkXhk00eJHn+aE1XgNqoSpMoMC54UCSBsAxmVEW5
      yFTIlcLUtbmUMyqurGBmJ/EEYlzhTVK/UfjQOsGObZFIponHa86oQCeeXdJKcNi3A48SW9S1
      1+w7RP3kFDCPD7BqYFE+wMUcy2+lH56V7XI+H+BiWQ+WneC5sawCncWHSc1ZVoEuH+/Sd4S5
      LvlCEb9/bkWnXCwgql6UOSa6hWySMirR4HmuWSqAx4tniQtHL5zataho0Hj4owjC+ZiTi/XI
      1+49SOPEJJK/iLd1bAbvYmrOD/Ifpd+a6aBcbj1/Q2ctn7tjfdXlLeMMLshp5/L4D/+ezhvu
      5I3nX6S5vZPew3u4+fqtvDaicVtTmlcSNdQxQV19PYo/xsnD+1m1ZgM+TSaXzaJ6VIoOeN0y
      Q30nyUsqih5hdXsTqi+Kx86QKFg8858/5pOP/C7f/4e/o27VFrobApw6dpTGDTfhGjlkp4Dh
      6jSEZDKmSLmQZ2VPD8O9R5G0AKnJMcJNXbQ3nJ+6JApTHJs4QmEijx4PYKSL+GJeSok8Rlkg
      0nTG2PLOFkRRxXVskiPjUClQNCWaV3WQGhrAE67FHzpvmD2nTxMbHEYOZ1Gl/rOPymUwYeIK
      0J+qsK3DTz5nYggi7eHzj7Q/3cM7lYX7GMvIkElM4w8HyaXTRBu7yI0fwxZ9ROovnvEiGnj/
      Upn8OuDc27FKCQqOyOM//hf0+CqS4/3kcjmGBgYwhW40zUMum6Ot3svTu19GsB0UJEYHjrGi
      tY3nDoxQIxqsv/s+3n7se7iIBFtW0dUT5p//8Yf83je/yU//8btkHRvZVqiL+GhtqOOppx7n
      aNMqNoXz/OSH3yVU30Z5aghdh4ro4eaeWp7Yl+VL9W0c3vsmfZN5AGx3L/fffRuCJ0Bn2/kN
      KdPvjKG3OfS9PMi6O9sxCxXGjqYJNXW+5zQQgROvvsqam3ZSSU8zeWI/A8cmcKyjXPPA3Rf9
      8N48kaWpI0Sl4jI4bfDk4TwO8Ke3z72mMB8kRSc3tBfTXE1+agTZo6OoOuW8UVU5y1gazhlA
      uexy5wNfYGpkFM0DeRO2b99BIBRgZUWmvjHCjdYh6tq6aGhowXZcRFEkEgkTCAWoaz+M1+cn
      XNtA84Nfxu/TEBWNRGKajddsJ66LPPDgp8mVBSrFHC4izZ0r+er6nbiFaVzRw1dvCTCZSOPX
      tiBIIorgIKgB7o9OUBvUWL/1GrpMUDQPOKDpCsjn5UABqFnbgO2ArgpUbAFZk6ntjs76oAVc
      Vu68BtsoEevsQqgYrNpWgxKsuejHLwA7VgdRJZcBPIRVkU11CrklzNGN7ARKoAYBGV8ogqR4
      sI0cofquD2Aq3F8/XHEn2ChkKbseQv4rO1TvPvHsorJC1IRur8oH2LH/MA0TU0j+4oy8PIuZ
      y/9r/g4GrJlxUZfbB1jXWctnb50/inLZCZ4byyrQWXyY1JxlFejy8S5ZBcrn8vgD/qo4pWKB
      Qi5DBZlINIamzN3oYj6P6vPPGwtUMCz83pkjyu5Tz1aVGc5IlxB1FcUjLPoli6JKTehM3pr3
      68yuO156nWAuXw3xXKik7K/iTIKLJGpzbJfBtEVbVJkZwXkZE7yVXQ//d/qhRZIXU6FDKZNA
      DcbPRiQvIS/QoZceZ1jqwEr00dW1gkA4SmN9jP/2X7/JnZ/5LI+/eIDP3LqNUDTOxGSCeE0U
      R5QppKaZmhhlsm8/Y2KcHTtvI6KLrG6P8T/+4rvcfc06SrVxhDIYE6fRm1dSF/ZjV0q4SCQT
      aeINNeQS4wxOJklOFNm0fT3hoJ+mpkamCwlOTM3OwjwDts1UbxpVg8GDaTpubkOqlEmNFoit
      il80N5Ao6hTcbdU+MvITk4iqyMTgFG3ruskM9VF2derbq88mUejrRUtlLrilCvuSadr8PvoL
      JTbFYpTNIllXpvE94RJOKIuq9Fdd51z41VtJkh4PlVoZUxLpiXsYmCrjyCIdkcuTzLbiqByb
      /uhlKQsgefIlMmWNlp6tmPlpvKF4dQbgWGVGUgZ7Dj9DSHWQ8iMUwz2EAh42dnfyxO438OFw
      8I3nKaAx4dQTr+wmm+wn6VlNRMoR1WwEFR778T/T0b2R1V334FhlDEfkyKvPMJyVaBBtokaJ
      o0INp99+mjXdqxgr6ehvv4BrS1iKStn089Ivf8qOex5m0fmdRRHRKDJywkDzKgy9PU5tVxjB
      dalyxF408uND7PnXJ1h1z02MH+9FD/owxodJF1Tq2hsv2dF1HJvTmSQTFZupXAoEkTqxzO68
      yCMt1W0PrAYpwyGRNbCaAvziUB5xjc7P9xeQRfiDO2qqPDbv6qCcLyAIBmOn9pIaOknn5puq
      MwDXsdly/UfoXjuFYbmEQwGKpQodbY2MdbayU1aYzuaRnDKWK6AGYshmFjUYZWJoEF/Aj+u6
      uIjoukoyayCg8ZUvPUDOVrlzZRtF00YUBGK1tTiuSH59MxXRg+TxIlbyiIpGxYFiOkn/aS/t
      rYv/iOxSmbIrEe6K4wtIqEEPjmVjV7zIV2jboqio+CI65ZJLuLYGj+bBCUTxSZcpoEcQ6QxH
      CXlU6j0ytZoHTVS59Qqft3X/1jCjRZfpVJnWkIzukXloWxBk8QP58QPUrbuZQjaLJFTIjZwA
      Sf3wOsHvZqWIxs5klnjh5K6qc4OeKcdFWOT+QVFQiQVvPcN7n3yAW157k2B+8T7AhfVJvsWf
      TXy5skksnnj2/xk+gML/yn7movXNd0LMongfVgN4L5ZVoPl5yyrQbLwvZ4QV8jk0rx/pIj1u
      MZ9D9QXmUYEq5EsWAd/Mo4ueP/lM1adECoJMPHzXgicTfupXzyLMEX/8bg+pNU6ihLNV1VsG
      nixdw57ymkVz5uqR/+TBndRFq1PiljETV8UAUqMn+MmuI3TERLrXbiZXNlHFM8mpV7TX8N//
      n3/i3mvXUYzXgCFgTvajNndRHw5gVwq4yExPpahtjJNLjDM0mSQxUWDz9g2Eg36am5tIFqc5
      lTizSd11HTKjBXS/RKnoEmrwkh1I4SgqkcbzcT6CIGMIO8mNDSH6IpTzRaKNUUYPHSPYvgJ/
      QKd88iTJQhZHUsmUy6wMBhjKppEUL426B9kaQjJSZ+t1OTpSwuv3UDEqaF6FlqDEsRGDYMhD
      o/98LzWer+d4aeYimWVkSE9O4g8HKRbKROpbMfNTmBUBf3T2CnW5snDo9TIujitvAK7D/nd6
      mTq1D7dcz2v7T9Ac1BkzDSRH4Zt/+g2wy5RsiXde28VIVqJetImVDY6LMU6/9RQ93asZN3T0
      vS+BK2HKKqbp55Vf/Qc77v0CzbMqFRjZO4YkAqKAZdZhTuYx3MoMA3gXmVP7seqvYeLwHrq2
      bUUWiwwc6mXtdesAmMolGBRrODU1CA1xnhzPIAs2v9vdPausVL7CS31Fcq6EYOW5o03l+QkH
      rBL/5eaFD+l2KgbZsSN4gjcx3fcagiiQ6HsbURDQt39i0eePLWPxuCoG0LN+G91dnTz6i138
      9hcfxhFElEqeVMnFQeOrX/4sOVvlrtXtFCsOogDRmjguIvkNLVREFUnRkSp5BEWj4kIxleR0
      r057a8MccT7Qsq0BK1sik3HQ/QpuUQVn7tuNrtmBI6mErtmOLFSYyIHXf17LaAjVEUFkpdaK
      Lkus8uYJ+OcOeosFPNwU0/EJLpomYTtwf8gm4L+4NiLKKpHmtVRyk+jhOLJHo6apjUJJvOi0
      cRlLw1Vzgh3bJJ0tEYmELkuQl+vYpDI5IpEwAvDiyed4beDlqsoQBIlY8LYZ5/a+F/fsegFh
      jkf0rnqk1SeQQ7nFt/vsXP650lbeNldVzbsQv3f/NuLhhTNsLDvBc2M5FugsPkxqzrIKdPl4
      l1UFqhg5UkWX2uj8aQetcpHpbJm6eIRiPovHG5g3d2Uhl0XzB+dWgeyzKpB/tgr0Qu+uqtvu
      4hLwrsOnraiOd0GP7C2VuHvX4tYgtOYxlNACOr4Lp6dNGqMeLlzLmi/a5VuZhzHc+TNEVKPn
      m/lpXMmLqutLPcxyTt6X797M2vaLnOX8PuHSDMC1+du/+jaffvh+Hn3yba5bvxJN9yCqfiql
      NB4tRHpyhFBTF4WBt3nyzRHuuH4tw8NjrFy7ASSZno4avvU//pGPX7ueQjyGa0BlagC1aaYK
      lJhMUdcUJzc1ztBUksR4gU07NhAJ+WlpbiZZnKZ3+uT5plkWUyfTBJsDmEWbQExl8ngCT9h/
      bnfYuwiXowS8MzfGZ8eGKBoCslNA8MaINUQZPXSYQGsXgdDMLMb+fAGztxfXddFyefIAACAA
      SURBVOnPZWjwh5ks5mn1+zmVSjBiutxQF0cCFGEAycjwXpimzZ5Bg7hk8529RT5zYw1rvS4H
      piyubdeRBWZtlAfoTSQoupcWap6f7KViC0wcfw013EHHputwzDzlioB+kSRmi0GhZF5yGVcK
      l2QAU4PHiIYkHn1mHyNHXuSxoQG2b+3hzeNTbGjR6R0aBllBeXE35YqGFhDZ/ephaqUU+2yZ
      /t5Ber75NUTHpGiLHH39OUZyEvWCTcwsc1Kooe/NJ+npWc1E2Yu2/yVw5XMq0GtPPcqOe75A
      yxxtcy2bwkQWSxZIH8/RuD6MHvJQWeSEzywW6dt7nI03beLw62/jbl6HR7HpP3SC9Tdsmpe3
      b2KE8bLNTwf6+f2VXciKhlAucLEJgV1x6B0vccqFxrDMqTEDNSpxsL9Aa61Kq+/KhTYYuQS5
      bAFFC1AupslO9JIdPkjFu5qOnsWvVXwYcUkGoPhrue/hrzE6OILnlp0UM2m8kRrWrTWwLIs1
      G7aiKAqCqGAVUgiaF0nS0CULo+KwbeMabFfjq7/9W+RtD+09KyhVzmSHjryrAm1sxRI9iIqO
      ZOURZA3LhWI6xamTOu2t9XM71aJIsDWCFtEIhHRkj0h+Ik9s5eJy0Ks+Px1bNpEcnSAUj6Jq
      MDls4gsunCV6Z2MrpgtNHhlblJHsMm2h2TvSZjVXFtnQ6qMxopAp2tQFJLKGwzVdPiKX6RTG
      ueEiefzoIR+h6BpENYhj5tACNVQqlStY7wcDH1on2HVs0tk84fAZVenFU8+zZ+CVqstxXIeA
      txtdbauu/gvm1rpR5raX9yyKpzZMoASrP7p0vrn8/85+ivKCPoBzlldtrIx7di5fPe/MkWTn
      eQ/etpZVLQvnXlpWgS4RyyrQ/LxlFWg25leBHIvhsQTNTXMcu3L+IoaHx2huXnQk/pJQyueQ
      dB8e6eIP87kTT7O779mq67iwZ5XFALHQbVXzFoNAvsBdu1+ezXNhpJAjqPkJyAKyvzDnrq3F
      7nlK5y1KCDScDbtYLO9C7Cmv4YnizjM/nCVv7qrnCx/bWGVJH3xcYAAue578Mfma7Rx66Sk+
      ftdN2IKE7Yi4QNkR8Ng5So6XWp/D3//gZzz4ybsoly2C0RpqGlo4+tR3KbZ/lChZ4lEf6bKA
      aKSoKGE2rWriRz/6N+raOmmpr0WRBNLZDJo3iGEJbFnfxbf+/C944CM3MelRcUs2ciGBE22g
      KV6DVSnjOpCeniQYq8NBYs2q8wchpEpJTk/3zrg52zBJ9GWJrY5hJouoMR9uySCTMIm2BmZ9
      wLIUxhBmKzTn4NiMHn0HX10jmaFhalZ3o6sweqyPmq6VqOr8PXQ4k8XsO03OKDJtuYwXcqyO
      xsnlpnhsKsdDK1agyiJOOIuq989ZxkJDtWXaDOYs/n1Phru3R4jHZA4Olehs0AlW6UNMTZd4
      5XiBUNMaJLdAIVei/tc06O7cG7MrBhN5lwMHfomHIt/73ve49uY7eH7Xa9zz0R288NoxNBW8
      ukPJkYj4VZ58bje3rIzy2MvTbLj9cwRdm7d3P04s4CVRAMfJ4lMETEtmXcfnGZnKceMdXfzs
      R99FkP2Y5SJr163izb3HWbn6m3gkyJkOiROv0psWsQtFNlyr8LM3e7FSh2lfuZ7BwXFqA1CS
      okh2AcETYtWKuXQgcEyL7HAK03SY3D9G220dJA6MI3pFlJCXYLjKKYUo4dVd+g71UxfMcXrv
      EZTCEIYaZXraYsNNF8/QZlkFXpp2WCcXeWEygWbmiSsuryVz3Fsbqq49Z2FbDk+8leQUMkGv
      xPPvZEmERfZnHA6mXR7ZWK2UKePRdUrpcZIDB5FliaKxfUlt+6Dj3BfgOjbX33Efm7ZNUHFl
      PJSxRY3NG9ZhWg4NrauQFRlFlhBdi7wJmkeisS6Gr7Of+pYoQuMn6ZJ08rkcfk0iXTCQZQUR
      AdlXw1cevh9D1Hjgsw9ScSVsx0XzSHR1b0QRBb729S8xnXdY0b2CLYaFY9tE4/Vcu8XEKe0k
      a8K114posgOyBnYFYYHMzKIiE1sVR9ZkChEPoizRsLGGxFAJX6B6f8GpGKRTRXyyTcHU8If8
      1G64nVI2Q6BuoSnjeWhqkOsiJYZzZaIehbU1rWTNMi3+pfewrgBNUQ9jeZH7elS8mkShbDN4
      JM/17dWvEciqiotGIBTBv+lWKmYF369pOvZfGyf4pVO72TNYvQo0Y8eU5Cfi31k1bzHwF4vc
      /PpbOK674Blpkq+E1jRxyfVdCm+/uZLniptmLOmuaY/zqZvmPgPhQnzYnOBfGwNYVoHm5y2r
      QLNRdSxQuZAhVbTwahrBwMw5pVXOM52zqauZfw7rOjYjoxP4Az7CoYXnuvlsBi0QmnXqOZyJ
      BcoWK4QCMxe0dp14it29z8xfvwuFyTyesA+PKsz4/VzvOBq4CUWeO35/28EjdPYPzUn0xNJo
      DZMzfmdWHAYyNitqFOZS5E9aLXwv97F52w7zqzmf/8gGtnVXn15lGWdwUQNwXZt/+Ou/4p77
      7uT7P3+dLRs2UqOZCHqQcgUifplcJsmuV17hwYe+TsAe4r/99dNc05LFXXkvG1p9BINhhhMZ
      3njxSRpbVrKqvY58sYIaiLOpp54//+//wCd2biAXi+AaAs70IEpDJ/WRILZZwEViajJFXXMt
      +cQ4w1MpJkdzbN6xkWg4QGtrC+lSiv7k6dntt20SJ5JoYYVTTw8Q295OU6fOVG+WmtWxebNB
      FJ0eMsPDBMJeUskS9StayQz2kTdEViYmOHDgIFFFZNpyWRMKMJrPknMkNq40cOTRs8/O5Z2x
      MoNDBV5IOvzJbTVMTZYYM1xu6vKhnK06b5r0ZdLn6rbNPMnRQcL1LWSnxgk1rkCw8mSmk4Qb
      2mZMofIf4DibDwMuagDpkRNoPj+/ePpVHKHCgRd2kTOzrN20laMHD+ENBrjzvnsIeyUefeJ5
      vnzfBiIkGZpyiQR6+ffXj+EIQUR/AJ/kcKq3j4GBE0gVCUHT2bz+i8hUyNsiJ954gZGcRJ1g
      UWtb9A5H6X3jV/R0dzNp+tAOvgqciQUql3288exj7Lj3ERZcw7UdjGSe1BhoMZ3iZI58TKGS
      SJOOBaipV+chCvS9+QYiAprXQ6FQwutmSUwYuH6VXaNDKIi4rkvFrefV0UkcHNatnLnN8flj
      OSKqRERy2TtksCYmM1WuzDm6vQvXKlOY6iXZvw9fXQeZI2mE/DDoOoIeIxJZ+MTOZSweFzUA
      yVvLAw9/ibGRESSPSvL0IZ548W0sIcxDjzyMLMvEa2uI3PMgoqKh+1S++sd/jOiUQdFITm5E
      93oRVS+CZWA7ApJ0JjcQDrhofP2rn6fgeFi5fhXG2R1hoWgMF5Hi5o4zeYFkDdEqICoqFQdK
      mTTHjuq0t8xxKPeFEEUCLVFiARXHtFBDKsXJAng15ItMU3tuvgnV58UoVVAUidy4RSCqIpgG
      97W2E5AlSq6AIsDnOtsouyIS50OdBeC+TSECmkjKcPErAkaxQkudtuDilCBrRFrXowViVIwi
      Hl2nUogzNTpCIHjp0ZnLOI+qnWDHschm8/gDQeRFrNBeKbiOTa5QIhDwIwAvn3qBN4Zerbqc
      +VSZkH8bijR34Nu64ydpHh6dcyeZEsmixpNV1ddv1fNo8cZ5GGcwX/6iT1y3mnWd82eAW3aC
      58ayCnQWHyY1Z1kFuny8q5oXyHUdMtncRdWfd5HPZNCC86lAJtmiNUsFevb4kzy/gAo0f9uW
      rq97lCix4C0LXrfxyDG6T513zl1cRvI5grqf4BwjqL/7NKIyOwz5nArkwqnJMg01Kr5FvPPH
      i9fxWnndxS+cVZ97dppWfYq3B25Zw40bqouufb9wWQzAdSr8v9/+Nvc99DAnjx5HVmRWdPcw
      3Hca3a9hFrMMT5l01Grg8eFIKm5xGluNsbmnnj/71ne477ozKpBTEnCmh1AaOqiPhrDNPK57
      oQo0wUgiycTIWRUoEqSttYWMkWYw1b/YFlOaLIIqkhktEl8VxUzmyeccajpCi94K6JELlJ1p
      JgdHkd0ythIi3lxLsr8XwRslWhelY2KCyuAgACO5NKlyiV2JAp/vbMewDQ5kClxXW8e7h9c7
      sePgsWbVZVs2L/eVqNPhe2/kuGVHjNvrJd4aLrOpVUebJ2XKdL6d/tLsxDHzPhnXoZCaAruM
      Fm3GKU1joeOtYqU6V/zwKFOXxQCmBo7h9+s888sn6J/O4y8VeeG5JzC0NnQ3xT2ffoB9P/8O
      I2076KwRePNkP14ZKpbClvXfQBEscpbEiTdeZCQnUivY1DkWfSNRevf8kp6enjMq0KFXcV3l
      zI6wso83d/2cHfc+QnuV7S0nCxx7/BT1t7WR7ZvGRcCjweTRaULNwYumSZ8Jgd433qS9p4Oh
      vtO4uTr6j4/hVErs/OynZlw5nJrgZMVDSHZ4cniUVQGdk9kMW+NxPBfZM+ZaLgNTBiddgYaI
      zMC4waODJjlERh2JT62YT82qBi7TvW8yMTJK0O/BWzGRxRKZtIfW7tWXofwPHi6LAaihRj77
      yG8zMT6BKCsIrotH18kkU3i9OqFohK9844+xjAKyqrJywzYkWUZEwEXjG1//AgVbYfXGbgzL
      QQRCkcgZFWjLCixRQZQ1RLuIKHuoOAJGNsWRw4tQgeaAqCmEmn2IgkTdhno8PgVwadpUT9XT
      bEFg7S03gV2hq6YZzauxrrYRQZ3dY66ubWGVqFAwywQUmaFCgVafD2kR0wxBFtnS4ScekCmW
      HWr8EpmCynMnilzfdPnyMXsj9ciTCWpWXosgioiSjBp8/8SOK40PrRPsOg6FYgmf34cAvNL7
      Am8MvVZ9OZfgAyhymLB/4QMzVp/qp2NoeNH1eTuGEeXZKQ8vFkM0H54vbeRgZWXVPPfsEnnV
      HoDr8tHtK9i6urrV6WUV6BKxrALNz1tWgWZjSSqQY5XJlexZCsx8SKfThMLhOXsRq1ygZCsE
      vLPDbM1CmuGkQWfLzBDjdDpNODy3Nv/M8V/x3KmnF9WuGZgjyEZX2/CJq8kk88Qu2BmnG2Xu
      f+pM7qE5Y4gEl+C6kyyEpezQ+rDxHivewOvl+U+unJ+8cDKihpif//rwwusl1WKGAVSKGf7q
      777Llx/6JIeP96NIEqu6VzA4Oo1XLJNNTlFQ6gkIBqrPg9cfJjU2hK++k3Zfnr999ACbVwSJ
      x2owBJ3xwRN0dHQRDAUpZ6dB0ZhMl2mIymSmJphMFRkvedi+vpNwIEzY63J8cJoDLz/NzZ/5
      In//F3/GeFnmC198mHw2T++x47S11mIaNsFYnOnB4xjR1dyxfTVZI8NwenD2M7Vtpo5Po0e9
      ZEZzhDtjuPkimYRJw/o40hzqiVfzML3nGIOnC9z4lQexkpPkCzYdtVHMwUGOpDPEFQnB48Xr
      muxL59kRj6NKLk7DqYs+9KUOufPxUrkKfVmboOiSR2RTg4fecQNLklgd9yw5FeVS25nMdTFo
      zK88VQrTpKemCNbEsFwNr08nM9qLN96BR11g38EVmKucNwDX5eihfXjdAs8/9wv6xiq4Zo7H
      H3uWlvUrKY0P8cl7ruNXP/gJq268F7V3L/2pMoopYSlv80df/Ay2kUFUG3jthVfJuRUESUA2
      0qitHTz7kydZu7oGqekm3nz23wjE4jiyD8LdPPWzf+PTX/tjdj3+A4YzAuP5Eg/GI+BYqDj8
      /d/9AyvWbSA1cpqTp09wS1eER195Bc3jpfuGi/Q0toMxnSefcwlGFMqpIopfRfFYLJASFBcZ
      j1Bm/NRpxvfvpWy7tN/3cUDg+dERbo34OUGRTlXhWHKKplCYTv2qHrdwDo/vTTNegQe2hHju
      QA7J1XnqcAFFFFjxATyvS9GDFMZ2I3pWkZ828akFkqkSnkyR9rWbr2pbZryx5pXr+eraTSRS
      WW6QZHAdVFUjnSvg9ciEw0F+7096KBbyeJRmrnEFZFnGRUAJ1/Hlz3wMxR9j3eqV2M4Zc42G
      QyBrrGluR/JoePQgxpZ6NN2Hg0h6eoJDylZa4n6aPvsFEpkSklvB48L9D38FwxaJBXWmsiUU
      4RoEUaA2FiLSM0o4Esa0L9K/SSKhzho8Pg/5RIlQrRerZOLU+Bd0Kjuvu5H6zRYeRURbv4pU
      TkAQzkwLPt3egVeWqHVcXFxuamymTnl/Pn6AG1b6eGPKZiJpsiLmoS7o4cvXKrjSB/O8rmJq
      FE+oHtXXgi8oIAgWpdJBIq1dV70t77sT7NgVDNPBq1+ajv1q74u8Ofx69fXPoa6oSgN+ffbu
      J9U0ueXVN4F38+3MHEIEwcXXNXsadiHer7PFriZvt7GZQ5Xqcq2Ce9bxmL/OeMjLb98zc4RY
      VoHOYlkFmp+3rALNxpJUoFQqRTgSWZRT5dpl0gWbSHBuxSidShEKR+Y0+NMnjlLf2YMuQzGT
      oODq78mD75BKZYlEzitCzxz/JbtOzq8CSaKXePjO2e1kptpRP5Xg1lfemHXdeCGLpOh0rB1F
      0o0PhCpTNGwGcw7d8fknOpdSHxfhnrKa+U7u3pm8s8QL3+vf/NFdSxpNrgZm5AXa+/zPGBJX
      0KYVyZQt/JF6QkoJ05aYmsoynBjj1u0bmMqUyGXz1MYjDI1Mcf3NN/CTv/tLtn3iMxx/fR/B
      WJD2pghvH5tkXU8nkmCTN1zESgbNFyKTNhibGCSTmGJVz1pq6xtoaWuh98h+ZNnh0aeP8bsP
      a/zN9/6Ta9a38saRHJ994DaGhsaJxbzks1kGxgs88ImPnGt91sgyMHKSfN7GTBbwt0TxBiRK
      kwWkiBddDeIqeVzXZfp0L6HWFWRHh4m1tpAbG0AINOD3e/Ck00yfOk7KkcgbecLeEAG3wA9P
      j/PJzhXYtQMI/tLZJ7Y0LIVXLFocmKrQ6BU4mXG4o0vnn56dYm1XgFWSviD3Uob4hbgl02Eo
      k8VIj2ALKsXkOOHmblwjSSaVJtayckmLd1cT5wzAscqMpiz2HnmGd1QJTbCRgwKJvim613eQ
      qNRRSJ3kP4YHuPO2a3niyZ8hhBsQyyY1a7YRCvmZmpxCF3LsffM4g4MRJswQp448TihgoUU6
      mJjs46a17Ty9ZwSPJqErFcgOs3u0yCNNXnY9+xKiXUCOb0VSdGq9FfYe7kcVZH78k59SmhpF
      jjdx132/xcieH3LkYBzUMGtXtwMgOGWG92cJeisUCw7egMzoa8M0f7wH/YKQ+bFDb5PLGhzZ
      /Qo7Pn4H5aleyhEfXavPHHtUqRR4fCSFX9XIj0+yLRKgXld4fmKa6uMqLw+e3ZdmFIGTusJ0
      zqJGFxBkib2nC9zcvrABXGmY2X7ydCLlh5gaEonUNZMdPkygfgWap/pp6dXEjCnQDXfcy7ad
      GSxHQBZdXEFCdExcyYMoq7iVa5BEkYoDD3/tD0AQ8cgygbDCmgcfYWgkQcOa1WzMFhAEAUHR
      0RUBVXIZTeRQPTcS8uu0bzKRsREFl8Heo2xo60RRa/mtzz+IoukYFVB9Ojd/7NOEIhHKZRNB
      cDGMMqIoUSmniDeuoKGpGaTzurGgeem8VsUuVZB1BddxibQFwDrfjwlA54234zgQb4jgCUYI
      1OxAUM5/RH49wuc6I9h2BU1pxHUFOi2TkOYFLq7zXwns7PbzdH+ZVVGZMVWkOazw0I4Q1mU5
      cOrS4K1dj5hLkjeiaP4I5ewEerRhzqOlPmh4n51gF6NUwqPqiFUcAmeWSwiyinJBPP2rfS/x
      1vD8GZolUSM8R86f96odsVSabQePzFuO3jKOqJofKlXmSvGG7Tj/WZi5MjvXPoI//a2dFy1r
      ORboErGsAs3PW1aBZmNxKpBrkUoXiUSCDA0N0tDYjCyJWEaOkWSJ1row6bxJJDT3ZgmzlMdE
      xa/PrVIkkymi0cgcjXM4dewYbavW8N4ppG0WGU3kaGmcGQb99LFf8uzJJxe8nXluknd7K7++
      moB3cbP8QmICC51Qzexz0TYdPsaak71zsKhKllGCebztI2doF4TJ/F/pL1N0Fpfy8Fx1ToVs
      YhRfTRsX28p986Z2Hrh59hnIv444nxvUdfjpd75N0447OLnvDSoWtLbXc+TYCAFFJusW2LJ+
      G1EvTGYzPPcfu9m0cw1TJQHdsrj9/k/xr//fX/H5L36W1148QNYoEAl6mSpCZ0sLpmtgmy75
      1Ah+PYQUinPs0D7CmoovFGJF9xrWr25i19PP47g2fdkAnw8H+Jvv/AOfvOsjnDrRjzdWT6TO
      z54nnqNr5018/I4bzt1IrpxlLDsy4+bMdIGh/VPUbW0mdXiM+h0tFAYSZJI2LdvqZm1BCVhR
      DLcw6yFNHDvM5HiWgGYjhJtp7Qjx4o+eoH7TNlZvm32EUH56Gmt0bNbvD0yN02dYBLEI+aOs
      80n8YmSC1nCc7XOkOhGKGR7v24+lKtxYr/CrvhLr2nyMCRny7gKnt9gGk337kMNd2Mnj+Dt2
      ImRO8s6rz9B2/SPEFkhgBpDOGwv+/dcJ5wxg+vQBwl1befOF51A0H3Ypz+iEjCI5WFqADtXh
      1ddeI+CxcCSdhpYGbMdFkcGs+GirC9Ozqp2Dx4aIRxQyQ2WGkwJd6zfTe/wEtXKScqiL6XyZ
      jnqJV4/1ong0XLdCW8zDYNZlrZFjOpVBsC1iLSuJNzQRj0Soj/n5ee8ojbks/tgWok3tDBzf
      y0uygeCt5YYdG+a8OUEUMDIGE/tGSZ6YBs2DGvSQHZzC2liHZ5FxAq5ZIjUxTc2aBk4fOgDF
      VsK1UVx79tbFhWBaJoOFMjdEdPZMjmOEI3T5/bQsEF27peX/b+89o+S4sjvPX0RGep+VWVne
      oKpQ8JbegabJJttS20Yt091Sq3UkTc/snllJa4727J6dDztHM9Pbml5JK420M62RemRIqZts
      ki0SNAABAiThUUAB5X2l9z4yzH6ALZTLLBRIEMT/CwqZ70a8iIwb797/u8bKXFHnXFanzyux
      wStBetnhAGi6iCgopCbPUIoOIxtcUM7Q0LkZXatvznc6bgMfQOfDA/vp3LuPoHPt4RD/cPLH
      /PTcC8ucQicxHMfZ3UA1lUeuinhaHYs24Zy27Xgc9y17jtjIRSRPEG9gsdl2PR48fpo95y4s
      MxWNwWQSt81Jq8XIZL5It3NpE9LoyRDzDdPhNyOiMx6v0hMw8dvx/5G8vrzSaHKeVGQWu7+T
      anoKydONtY5Qk8890Md3P7/rU+ED3AYKsD6YjI8zn5tdfeANUFUNw2WjWDJ4MEkr97K6Kqep
      GMSlb7o/lcKbzi75naaqiDX+WKKpiuQsLDrfscomFGo7xvXXVytaGpx0N7vvKsAnCelCiqKy
      2H5fDbomYTQufAPbi0VMyjVTQTTJIC68TWtlna7IxVRPzQ/x9XImo4FGT+3V4e6yQEvjltcF
      CkciBIPBRYTH6VOn2di/EZvt0hKuKRUuDE3S6LVhaWjGaZYYGThN8+ZdOJaYnVpKcX4qRW9H
      CzbbNSbkjaHXljeBVoDTug2P8/4Fn332ncP0Ts1cG7N1BOly+MOq0HXOTBcx201s8i/vZPxv
      ie8R01Y2pZZCf0cD/+63n1594F3UhFuiAJVMmH//b7/P9/7lr7J//xFMZgPBlm7m03msuswb
      r7zEs1/4ImNzSZ7//IP85Cev8bXH7uX8qaPEEjpdDpHToxM0t3SSjo6jqRCN5WhsbcQmaOTL
      BV56IULfpg42929kx46FSTG6LDN3MozgsKLmK1iCbgJdDiLH5nDtbMZmXr/t+Q9Hc0wXdFwS
      YDTwWKuJn10osLOTFRXgRsTHPkTWjAhaFQw2gm1tzI+fw+xqI9DWtW7zvYuFuCX1Li5eHObL
      z+zltbc+RFVVNE1lZHwSf9tGCqk4/oCfE8eOcm5gEFk309pgYiRXRk2mKOZTzEdjtLY0Es/L
      jAycxWAQMTV2oCSnmZiaI1lQL+UaZ2cw+FoX0+rCJfannCgilxWK4QxT788xdyZGLlFZ12st
      llVmMwoTySpnZ0scmS7R7TNSVeqzLJVKjnIuRbmYRy7ESYTDOD0+nP7ai1rdRf24JSvAzvsf
      A+Cxpb5cIoXx13/ne5f/+szi8U89cP1/rv6lyiUOHHyPvubFnLZgNNL72Y2LPvc2WTG617fX
      1ePbPDyOzsBMiYDPTFMt9QqXQNOWp274RCefjGCxfHyZZp8G3DFO8FRigvnc3OoDb4CIA4s5
      sOCzpmgcR+FaN3ejO49wQ60eTVMRl2GBVsIVudNyL+UVOrwvkrvMHrlsJnb21taQD+46wcvh
      jmOBUoUkheryLJAgiEiGxWELqqJikNbA5nxS5NTL9Gmd8XCaqiKsQQE0TUNAWLKU+0rQNQ0d
      alIcR6GIqXppJ1zXdTRdx1CHwokWGQQNTdXW3wSKhEMEm5oXfqjrHHl7P9v3PYPDoPP6m/t5
      9ulngEss0PmL4wS9dqz+FpxmieGzp2jZsntZFujcZIq+zmZstmshzPuHfr4iC2QQHbT4f3Fd
      rvF2g1LKMTs4RtO27VguO/i5+WnS2Sqtm3pujaP3MeLZtw/RM73ynk9VkfkgnmCrP4j3hk4o
      rh1DGKyXfMF1VQCtkuYHf/jv+Nq3f5nTx07Qu/Nh5scG8TY4+fDdD4hUQZEV5meGqZZLKLqR
      57/4OC/99HW+vu9eDp16n1hCo9tpuMQCtXaSDo+haQLRWJ7G1gA2QaNQKV5mgdrYsmnTVRao
      mskRnqhAsYC5zY/HBTOnogTv7cC9+OV/R2Dmg4Ok0xWKRRkVkUIizuannmTw4CHsgTaa+3pY
      g6X2iYKuyrw5N4tgcpAqZNnd3EE6NcvZvELQ1YBXWmxq6rrO/oHs+irA+TPn+PIvPM27bx3E
      43Fw7MhhouEQdrcDp9tFZH4eyWTGYjQRD88QyYmogok2v4nhbBk9naZS1AmVNfp37yCSV5ga
      HKRv+04swQ609ChTBTDYnXi9Hgz5eSTfU1dXd0HXKKYrGCoViGWIpSXKmo98SAAAIABJREFU
      uQpyvgp3qAJUC1lM7lZUJXypd0IizeSxE3iaW5AV/VbUkrrtoCMQL5exi2YSlTIz6Shl3YjL
      oFLVlr4DApApKJ9cH0CVSxx49wiPPvEkJoOwciwQd7YJ9GlDLSbQSrjeBPrEKsCNmEpMEl6B
      BRIEIxbzYk69nticT6achriGXm6apl1KaK/TCdY1HQTqdp51/VJdoFqc56ZoHEexdFVO1/W6
      WCfJnUMwqJcc9jtFAZL5BIVqfvWBN6DWmB5BMCIZrsUM1RML5E1nr+bHqqqKZBQRLQs35DRE
      4kIjzQ1Lt0C9mxG2vnK3NBYolYhicTZgvZzOpcl5/nn/AZy+dh59cOeCsZpS4dzgGEGfHZu/
      FadFYujMSVq27sG5xOyUUopzk0n6Olqw26+xQG8O/3PdsUCaLDN/Joa93Ye3aeXKChZTGwHP
      yt3cl8Nv/vgFTNXrguusZdw7hheMyWg2/oPp3/BH/2px7aK7uHVYdwXQdY13/vFHqF2PU5o+
      gaOxE7FS5uLEOdDOk0rGic5cZEP/NlK5Mv/dFx/l5Zff4Ov77uXw6feJxjW6XRJnRidoau0k
      FR5F18TLLJAfmwBFucjLL4Tp7W9jy+bN7NxRQyluTSN+MYpssGLVSmg+D26rwuyJMC02+6oK
      cCPioxeZnwjjcFmRZYUNDz5E7NwJMgXY8vDKTTOUssKLJ9N43Ga2ugVeuVjks/fXVnL+LtYX
      664AhcQc3k0Pcvr0cUwGFXl2jIJqwmax4vI1EZmZRTVaKUTGGZoqIH/hKdoDZkZyZchkqZZ1
      IvIVFkhjamiIvm07sTV3QXaM2YKOaHfi8/kwFsMYGz5TW6U6HUQJMmMJkuk8xnaVshUaNvqR
      1lJBVpPJJrPochFRMjJ9+gxCOUcht/rSbzAZ2OIzooowmFRIFRWSBR0+3vI+n0qsuwI4/O08
      8Vg7Tzy2eiODL17+99u/9TuX/7oxHgZ44voMrSev/qXKJQ6+e4S+ptpar6Lr6IKRzofaECpl
      ZNGM27/2DDT/xh08snFxKmYtJWEFUcBqM9LVYEIQ4KmNDjLax1/f59OIO8YJnk5OEs4tTkRf
      DbXG9BhEK2bjtUoUK2WE3YiumTlEXbskp2pIJpBcCx12BQMj4hZ29Czd9O+uE7y+cndcLFAi
      nyAvL52GuBKusDlGyVdXuIyiqkiXb7qo6XgzmZrkdEMZaQ0LT70ZaDNKIzprS4mEKzSoeDWG
      SBQEOpuWbk914zw/SQqw6JUSDc3TEGzBIMLg2ZN0bd6JzQCFsozdZgX9UnfGQ+8e4tnnLjEW
      2dgc4YKAQauwobsLQYDjJ06yd+/eJR+qmeGziJ5OAg1OTDf8OOdOHsXa2Es5Pk6+bCCcTfHl
      Z1bPgHqrBhaomi8Rn8wT2Bzgxriy1sC3EIW1tZNw5At8+8WXaxpr753C1FCbslQrCgcmyty3
      wY5ernIyqvDQBhuWGp6t34/9z8jr2B7DbDTwD//n19bteLcLFiiAVi3woz/9Po989ZucOXQC
      i8dCOBqhkMtwcjTLno0+tEqJk6M5fJYyWjmDpbGfnb40b100sq1R4/2DbyI5G5FEhdHhEdoC
      diamYxhtFsyuRirJWTSDhfTcWwS39qKUJfbu3cvsxeOkigpnBk7ye79/D6FwkqmQnfnoID/+
      myT+gINSRaEYTWMPurG5mnl63/3LXRdasczksTDWRieF+SytD3cROTZPVRNxb2hAsq38FBWj
      cwy9f5rAxj7ikzNs/cyTJEfPEZnLsO2pR5YMMNN1nYOzUzgsNoYLFb7e1cahuVkyKnyho71m
      h6tSVnj1XI54popsM9FZ0jhwMoPNLlHssGKpq5H3YmTmLpBOprFaDCiYae7dwfzAfqzB7fiC
      zasf4A7Cgt9xbmKYR5/9IieOHsHqDOIyyIRCESLpEgGPhVQ6Q1Uz0OizYzZKjIyNY7HbsAU6
      UCLDSBYnOVkln4gSTSYJWEFyupiNF6BUoK+nk/DcDPF0Coc/gLepl/nR8zS3BEilUpRKJQLB
      ZswmCYvFjtHhIOBwocl5RoYuogkaU/OzzM9HmZqa5NCBNzn84dllrkxAzldQKwqVfJXUxSii
      w4IoCdRi9AkilAs55FyWQjLL1PETyJUixWyO5coBCUChWkEVjMSySd4KhYlVZIrVal0xOToC
      uqLhcJlwCHB2skijzwSCwDKhLXVBV0uUCnnKuQS56DTRqQEsDg/JufGbP/gnDB+rD5AKjXMh
      VOahPYurq9WL1WKBVsN6mkDRQo64ApvdzkUmYC0mUKFYZSBaZWurFadxbW/779RgAuWj44i2
      Rqx2G9nQGGZPKxbb0vsRtZpAnzQf4I5xgmeSU0Ty4brlrrA5FnM7Qh2R89c7pZKq0D5X27kF
      ax7JotU9z3oz0E7JfWgI6xYLZBAF7t3UuqrcXQX4mJDIx8mthQWqM9NKMrgRBOmm6wJdD186
      g0FdWSlu5nyiQUS4bi0SjFVE08olEjVVQxCF1cuaIzCjXKNuNU0DgUsMUh3QtEvXX6/iXMoI
      02qmpBfIaWvICIuF5nEHWzCJMDZ4Cm/nNnz25ZfabCLEqQsz7N21FavDjgEo5vNYHA5EQFPK
      nB4YoaXBga2xHZdF4uKp47Ruv2fpWKBikrMTCfq72hbEAr01/HrNJpCuqESH4jg7GrAtdZIV
      EPR+GZPRX5fMavjWCy/hvC4H+VbD0hLB2h5Zl2MVNAv/OvF763KslaDrKvGJ0yB5CHTU24Fy
      edT16+talRf/6of0PPnLTJ14D8lqZXO+wtnzIzS5JYx2NzNDkzRv6qcaHWfXc99i+I1XmSi7
      OX3wTe597jMMD8+SnDjLll17ieZ1vvnVz/Dz196+GgsUiWv0eEycGZsg2NJFMjQMuoFYvIC/
      2YdNFKhUS/zsxVfo2djK1i1b2LWzxsZFikJ4IEIxWaZQ1MHhQE3niE/mCO5pxbbGig5XMHf6
      OOmMjEnSESxuNmzrZvTDYxg97XRvv/kfTdd1Dk5P4nE5mMgW6fb48VPkeLrIRl+QLc7aSqav
      hA9Gc0xkVMwiSBYj+1okfj5cor/Lzq4VmvHdSsRGP6BYqlKKXsTg3oS/vYvQ+fcJbnu4jtp6
      S6MuBUjMDrHt0S8xcOYYoslFtw9GB8+BNUC2EMchmdAxMjl4jEIqjXt7jObeTYwePkOws43h
      s2eYCKXoaWojGppFc3ajCyY6ghaGcxUMhSK6ohNLFujftYNIHkITk/Ru3U7ZEsRUmCCS1xDt
      TvyBAJZKDJO/veYNLE0HUdJRBCN2p0YlmqEoqxTjeYo59aYVoFrMUcpVkVEol+OI1TSFTBYl
      PbMuChDOJXk3EmMjOpoG48koUaNIWdMoqerqB6gBpbJKQobnukzIoshboyXi2SoklI9NATzN
      3QjpHKhlJIuF+OQFqqUsmqbVlQy/FD6xPoAqlzh46CiPPPEEJnH1jDAArVolOZnD0erCYruk
      +9VciWxKwdfuqGnbf3UTSCM6PIKjpROb1UBoZBxf9wbM5uUfnnpMoIlUAqvdTZNp7WFctZhA
      UwmZdp8RRdE4My+zo92CeYlklYJm4bdusQlUykQxOQMY6qw0UQs+sQpwI2aT00QK9bNA9bIk
      ZmMTomhac4jBUnLt8xEMq/QaWDObs4ScwSJjsKxcIU/TLpdFWWV9VRA5K19b3TRNu9QgcS0Z
      YegIdTrPa8kIu4I7KiMsnouRlVcPMZBEJ6J4LRhnreyKXq3SmM3VNFYADPZS3eebVhpRL1u5
      61UXqMnnwGFdvSDXpyUYbk3raGh+lsamVgyiwMCp4/Rs34NNEtGqJU6eHabZ78Dd1InDLHH+
      9HG6tuzBblp8Q7RqlpNnZ9i8ecOlOKMrx58ZZ3wmTLClnd6udkbPn8LXvQ2fbXkz4u2RN2pi
      gXzOx7Bb+5b9Pjs/QzpVpn1r34rvPnuhyK+98NKq5wNAVPHeu7DzpFZVeXUwT3PAyj0tSz+Q
      /0fifyCjLZ0iuVb8r7/yCA9svVtv9ArqVgC9WuSv/+T/5sGvfIfzJ0/gtprRDHB+PMovP/85
      3nz9VZ7//GMcOHKcSqmEr8HN2YGLdG7qJzI5giRJTIRyNPqsNATczI9O8eYH79PksrNr+1Z2
      7dyO0+vnxCuv8bUWL3/1l39NQ5uHytmLiFYLjkAblkqYTF5gdmacDXuf5pkHNl+am64TPj6D
      Z2srsx/O0vd4J2pFZvJYlJ5HVv7RkxPDTF+cppSOYXX5ad7cR2b8ItFQli2PLt81BmAuHWWi
      AhcyaZ7r6CabTzKUL7KvrQuftFiNRqfzhFWR1wdzPLrDyFavyGvncuza5KbHWdubUy1nCA2d
      wOT0IJfKuNp2QH6SVKpA+9b7uQXm8h2Jug2n2clRnnj+K3z4+iskEylSuRTHTpxienaKclWj
      qcHBTEJDkHNIokY0mmD3jm5CaZ3w3BwujwN3oB2LWiSeyVCpSvjdPmxKAk2TeffkMHabBaMg
      kYnMMTkzw+x8hA0bO0jny+SyeQaHhpkZH0UymYiGIlfjbARArSjEzkeJjaYInY0weypKfCRB
      dZXWWIKuUMgV8DQ1I5lNzJ45jS5KZOPxVe+JrmtEZJVOo84rs7MM5grM57MklKU3tzRNJ5JV
      2NPtwFSt8mGoil5ViZdq3yG+FC9UoJhNo6kKuflBZMGOnJ6husx572Ixbg8foFrg5++c4Kl9
      96AKJqxrYDhuZIHiw3G8PQ0YRIgOJQlsakBgdRPoGnTiY6MYnA14G32Lvr3RBKpUK1zMFdno
      cVOuFJmXdbZciQVawgS6HvlClcG4wrZWC7brVozvrWACKaU02VQSV7Dzal5CORNBVsDpCy5b
      zaRWE+jT4gPcHgqwDphNzRArrL67aZR8GMRrLYbWWuVZqMp0RlZfHS4N1jG6LznMah3c9blq
      N4ouXZarPQPteqiXr+/KY9zT6sXrXD35+K4CfMIQy0XJVlZmgQTBiNGwMId4PWN61kPOn0oj
      LhEXtJKcwVpBMCy9EbbmeV4OhltKASaUZnR9acXQdA0QLgXS1QGDQaAz6P54WaBsIoxmbcCg
      ljl99EPufeYplttcP3/qGI3tHZSqEh3NDWQjE4TKDvo7A4sH6zrHjh1j8+bN2J0LQ4S1aon9
      B47w4H27ODswRLC1jb7ujrouBuCdkf2rskAmY5Cg9wt1H/ujxLf/4adXq54B6JrKofA8gmTn
      Yb+Ld0PzmM0uHvRfS090bBrD6K6/QeBa8Qfx36esr72gwFJo9Nj4s9/9/LoesxZc1yle573X
      /4kZoYv5kfdpczdzPhym1WVBEwwko2FsgRbKoRCPf/UbHP75fr78W7/E+VOn+NlPojS1BDFo
      KmfPOBDKRQqAkAnjCzQxVxRoMFR4841XCDa107/rHvZu7uTVn79NpRAnpPh54lGdV3/6M77x
      7a/x4j+dwSLpZGUVrZBElaw0OK3Iqk46FkbRjAS6NvILz+5bcDG6qjH5wTy+VhvJcIXu+5so
      ziZJ5iXaNtVYPWI1qAVO/nQ/nvY28ok4rfc9SnnqLOmSmS0P76m3DP+KKJQyvJMscT4awuNs
      4gGfjffC87Q2SAsUoGYoKj8/n0M1GMgVFbb3uXDKMq8OlfjOY75lX3Z1QZNJTJ6iavBRzado
      33of8dGjVHQXrX011G/6iHHVUKsWElhad6CkZ2kONmJxuzBrFWamp7C6PAhGK8n5MRKZLKWy
      xtadfRx5f4ig24rVZiUUimLx91JMxvCYy4gmBwpGetr8pBJJstk87W1t3Lezi+HZAkZUimUZ
      DBKtTUG0ahV/SyvpWIhYKodcKlJVq5RLKno1RzpXRK0q6EYLJpOVbHxicUaYAHJBBlGkmCwT
      Oh0iNBAjMVV/mPRy0BQIdHhIZQU8zS2UZ0YQPY2kJ0dZp3Cc66CTqFTodjfQahE4HInR5w2s
      OQyiqoFR1JlOyGRyCgcu5hjPqJRkhWSNTTBXg6aBaIByLoNSzhOdGECpFFGq69ubbb3wkfsA
      p98/QOPG+2nxrW8VqKsskK6Tmc0gWi04/RaUfIlsWsPXZl8XE0irlolOzOJpaUKuqLgaXGTm
      Z9EMNjyNDfXWkl2EG02gWlCrCaRUVU7OVejwGZlNq+xqNyOtYcLfXcEE0tUK6fA0toZ2zJba
      15QrJtBdJ3iNmEvNEitGVxwjCibMxsYFn91uTnBrOIJhiaVkpdgjyV5CMC690aGql1mnulsk
      aZdbJC3+7py8AXWZLST9cmKLUCcLZDQIbO0KfDJCIW5HGA1G7KZaOqinFvxPR0VcIarcIFqW
      7i0misve9IZkCmkZe2g5BRAkBYNFBj8s9bSq6iWmZGlcy+OdUwKUrmu+p+rLK05rwLVsXNBK
      NOiuZWZxRe5maNCPGrdAAXTmpmcItrcjCQKp2Qucjxt5ZFfvkqM1pcyJ0xdo9buwN3Xitkhc
      OHmMth33LpsRdmY8Tl9HKy7XtQf+wOibN5UUvxzslj58riUbvqKrFaZPn8e7oR+X99pcfumn
      r+JL1+d3mAJJ7BvW3vThCv4k/U0uVjtrGvsH33yU+zavnud7J2PdFUCVC/z1n32fh7/wNSZn
      wjjUIsdHxzlzMIg/6MLpsDOTUBHUJEarn1//pc+y/413+dpj93H49FFCMY0+j5nTo+M0tnSR
      mL2AIBiJxYv4m9xYDQaqSoWfvfgq3T1Btm/fzu5d21eelK6THImRz6oIsozU6KPBpzM/nMXi
      c9G0sbb+SVo5x4UPz2LSqigmFy2NOnOjM6jWwAIFuBHvzY6jm5yE8lkeautCKyaY1Ww86HMs
      K3Np2jqHBrPEEElFK9y71U27WeelgRxP7vbSaV/+LaspReaGBzCoGQyejfh8diLj57D4N+Fv
      /nTV/lkJ695AMDQ+xJPPf4OR4VHmp8YoVAQ2tLfR6PcwOT5JPpehrX8HZkmkWsiiYqKr2c5I
      oYJFVjCJKql8nr6+biqaRDoSxev14OveiIMymUyOkm6iqTmIU89iaexY1bzVAcEApZSMXKwi
      p/PExrJoqo6m1rHsClDJlwn2tuMJ+kgmFdwN9lXtT1VTSVYqRIt53guFiFY1spfbfK6GXEUl
      V9LY2mLkzcEcp8My2bJGrrwy5SQgoJTz2Bo6SU+dJpNIY3P5cTcuXXv004p1XwHaNu2lDbjv
      vgdXHvjAtXicX/717y4/7rG9S36syiXePfw+fU01dr8TJdrua8Z+E53iRbOTPZ97ikwkSlNb
      I0JPV01yj3X0ka8UmXC62Op21rxLKggCn9/jQ1M1BkIVvvuQGbdJ5Mn+lVcOAEGy0r37CXKx
      aTr3PIPFaqaYTSOtIanmTsYdwwLNp+eIr8ICLYXVWBmDaMcoLd50WomVaYrGMSrLsTJLn080
      VjHYyivMs7YMtPFqCwX9Gv24ktyGZi9ux9JU5d1YoE8YotkI6XKy5vEGgxODaKuLzmyKxq+a
      WzfKGewlBHH1MOSPg3YVRUPd+xOqqiHWUBfoRmiaRkzzkdFXX6Wux5UmeW6HhdZA7T1t140G
      1XWd6alpOro6r9nUaoXXD77PUw/u4M3DAzz79EI2ZPTkYeTGrZizk1j9bRTzFXo3tKEUE5yd
      yLBn64alTs2JY8fo6e/H5XQvTNzQFQ69sZ/enTsZHR3HbHezd+d2Lr3ANPa//iZPf/aZJS+o
      XhbIbb8Xl31hg4vI4ADxRJHND9+HuERGyb/40d9evTeapnBgfg6T2cUjAS/O7cNIK7zBPzro
      DM6UKBkM7G1Z33idWvGPuWd5s7xym6jl8MiODn7/Gw+t84yWx1UFkDMzfP/7/5GvPv8EsVQJ
      0eHFanUzfO59XA4r4xcGeDE8jM3fxNjQGD1bNnHx2DG2f7EL5dQBWp/+VVIXzvLay/9Ia0cb
      ui5y/vQJnBaVUFzBai0TcLuYmJfxNRh4a/8b9Ha2YG7ewkMPbOXAK68BKqfHs9z3yKMkw0N0
      7v4Mf/+j/4RodWL1txO5cIYfxRKY1BIlwc5vfGvpvr/piyHyFSNytoCvvwlJLRMeybHhsbal
      qzqrCufeOYShnGR6tkj/Q/cyc/Q9PFvvwe26ZiJousrrMzMYJCtPNXp4PxqiySvxSMC73r9L
      zRgYy3Mmo+KVIK6KfHu3nZfO5mlqNH9sCnAjdFUmOvI+mqWZajZCx45HiAy9R0U107FlbYqy
      Xrj6PAwMR/i1X3yaodF5picmiIXDlOUqRsnI8MVhjEKZqfkoM7Nh3C47M9NziHYnZkGnZ+tO
      zh09ir+jEavdSTqZQJZ8mPUSLY0eDFYraAK9vd2UinmKxRIdne1sv+8+Rsem8JpFZLmKYDDR
      2dmKyWbHJpmxmo3EE1nsZgMlWcHpa0LUShRUCUnJ8s7BQxx89/Ciysu6riO5bDh8VqqpHIoK
      lUwZbRkLRRCgWioiORpo7etk+sxZNK2KXJFvPDDZapXxXIpDkSh93kbaLB9PrZwrKMsqcwkZ
      0WpkJlzirZEi21rNuMy3kbMrCFQrJTSlglotEZ8cwB3swhmoP+p33af2cfoAIwPHEL1d9LQt
      EUJdJ27MCNN1jWJSxt5goRDJougSrqDtqi28lAm0Gv7Fj/4bg8kkbS4P7hsqNHxcJlAyIxOq
      gMegUxZFerwfr0IC/KgGE6iUiWFxBRb5JvWaQHed4MsIpedIlGrM0AIkgwuD6Kgr06otFFne
      CXYUl01KuR7rWU+oZrl1jgVaUU7TCasNpPT6ws+1y4+hz2mtqRXTtfPdjQUCQBQMSGJtbz9B
      MGCSLjENgq7XlKLozuURjNfdLlGAyzfdYC0jSAaoqVKlelWuPiwvN6s0UtSXoTM1FZFLdGZf
      mw9jjbWFboYGbRMEOj4iGvRmUZMChKYm8LZ2YbkuYTufzmD2uK+2YCjEpjg6lOH+TV4mEipm
      XWZjfx+CIPDhsWPcd++9Sx57bnQA2RqkqbEBq3HhxQ988B7Wlo04yXJ+Oo6cTfHsc89y7NiH
      zM+H+fKXv3R17MGxtxaYQOV4jlRMpnFjw6LnRjI4aW74+rLXO/HBEVSji94914ru7jt6jG1D
      o0uOd/SPY/Tkl/zuo8Cfp3+VwWrXquP+4n/6Io2eWgIGPz1YVQF0rcpLf/tntNzzHMVEFF1X
      SM1nSWej7H1kByNzsCWgUlQ05nIu9raVOHoyz442M//5wOuY3W1IuszFwUG6W7xcHJ3FYLfh
      cDSQikzh9vhJhf4ZZ2cPWlXkoYcfZmrgCPFclfPnz/N7/8tu/vzPfszv/NZv8nd/+af8l3gS
      q8lEIjzLqy/+GNXdwRefvtaTWNd1po/OUIiXMbuMVLu9RM+GKJYENjzUssgS0DWVwbcP4PQ6
      ScULbPnMPkLnTqN7excoAMDpyDxDpSrPtbdzNjLLnAxf6VyLI6czMVPgXFFkejbPE7t9eFSF
      ly8W+fr9Xnxr7AEWu/gOto5HiA29S/uOJyjGRomF5uneta/uN/mnBauuU6m5EXZ95htEp8dJ
      hOeJJ+LImsyGnh60qsrmLZsZG59mLhLG5bRg83Ug5mfA5kIw2dDLeQplmc6AE3dzG3nFgNdi
      oK+/B1SFiiLjbWmnsX0jmcg0rS1+lGoVg8FAe0cXFouZjS1ePjx5DouvCYkK+UIBm91OPJnG
      17CwUK0A6FUVT7sT0WIkMRzH2+HG1epa0gwWEFDlCv6eXrztrcwPnMXV2ktDU8OisRVVYTaf
      4+1QiC1eH71uD0vUvVoVlbLKu6MFToYqbA6YeHMgw4W0SqWikZFvoqaPrpGZPUcqNE5s7CTl
      chmlIqPeGW7eLcFt4wQn58cYjanct3PjmuRXqg5dTBSx+KxXY3CWMoHKqTiCw4fZuPQ7Yd/R
      YzSdOkVaM9Bjt5EoFXBYbVgEYU0mUD5fZSyngarT12ReUA+oXvxfN5hAmdAI9sAGpBvs/XpM
      oLuhEJ8whDLzJEuJmsYKGK5mhtUaYuDJZrFfl6p4vZzBVkaQVik9d1Vu/VmgKaWJgra0E3x9
      3aNNHX5MxlvvBN9VgI8B4UyIVI0KcD0+qtgcg8GOZHDVKafTEo6twzxF6uVBNU1FEOpXgEvl
      0VmyzLnkKIC49OOmX+7/KtRZ1HTN5dF1FvYI03WdifEJuns2LLhVqVQar/caLzt28jDTOY2u
      LXvpDly3nOoqxz44Rk9vB3nFSkeTl1wqTSEbpmRpoTt4Q4CTpvDTn73Olz7/FB8cP0dHowd7
      SxeeGjPCetqa8HiuHfPdsbdvSUbYesFp3YbHuXxj7yWh63zvr/7u1kzoY4B79+Cqzfk+alx9
      xCrpaX7wgz/mK1/eRzxVQnR4iEVTTI0Os7e/BVNjD5mZQVzeRiajKWTdxP6RUWwunUJM5lv/
      8jeYGTnOoVOnuK9vJz/5p4voyRD9ezeSTJzjPUmhJJcoxis8/sxeTp6bJxObR5Q03nn7Pb72
      2H0cOvUe85czwk4MjdDY2k1s6hwGg5lYooS/0YnFYEBRZX72YpyOrgZ27NzN3t2rZITViOiZ
      OXIlA0atjG6x0b7Ny/yJeSxdQfzN61I15yrmPnwb2dJMLjRL864HkEoRxgdG2fHcZzHehD9Q
      Kw7OTjEja3gFBY87yENeJ4dmxmkMdLDJ+vHvJq8XXjuTIa9BoxliqsRXtlg5OpQjbzXz2W7L
      NRbo/GiM7/7qs4xNRpmbmSGZzAM6fd0taBjo7wwQTmUJp0s4TQZGBwfIZLNk8zJOu5FCpYqv
      cxe7OzxEc2GymTTetjZ0RaNQKCBIEqjgtps4c+4i6XQci82OhoneNhejxSoOXcRhMVCQZbZs
      6UcXLVRyeYLBRpr6tuCzCFQqMqrkoLWtGZ9Uxt7UuU7FqHSsAQfFcOYSa9RoITKSQRA0Krna
      srfqgYCAXChQSseZO3mcbLZMtVylWmOm2M1il8/LRo+XgqIiVwq8Mj3NsXiS8cI6FQi6TVCS
      VcZjMumSRlXTeGekgEGESPbSrv0n1gdQ5RKH3vuQh/c9hrHGHmENxXY6AAAN+ElEQVQrQ6cY
      K6AZJARdw+azoctVUnMF3O0upGXYoVqxlAmkFDLEIlmC3W1LZ4ndQhMoXCzQaLUtOG8ol0Yz
      2mm9RQF+H4cJNBoq4XCZaLrcAFFVNQbmynQFLXjM4idXAW7EXSd4mXlq6uVQjzU4wTX0CFss
      t3yPsFvjBF8KfLxpJ/iTDh39cmXi+qChI9QgJ4oWjNK1PgEGUUW8seN7JouttJwJUQSKa36Q
      JUcOg1T/KiSqlx+OdQiGS6guIuriXgkL5FZqklddXvZWN8mzW4z0tF47v67rcGNG2PjYGBt6
      exGAarlAWZNw2taWVBGbvkhcdSPKOTb2b0TQFY4dP8u99+5ZcvzEwHEMTb00epxYFnDVOseP
      vIV/w27mh85icPi4d8/ORS2ADo29U7cJpJUrTJ+I4OhowN++8gaRxdRGwPPZFcc8eeh9No9N
      1DWHWuHecx7RePPFR0fnS0QVeKDDWndJkAPF+/lvhadveg7XoxCfpFhSCbSvX/f3pbCpw88f
      /vZnFn1+VQGUfJg//qMf8tVfep65+RjRmXkMgQ7cxjJ6pUIynqK1v59sMokkF4kXFDCZaW5s
      QC0VqSgSJgu4RBl7+w66GeF0dRedwgR/8fZ+LJ4ARqXC4NBF2lxGBicjWI0mvD3dJIZOY7a5
      yVWO4PV6MRjd7H30SUY/eJ1EscLkhVF+9w8e57++uR+HJ0ApEyYlG/mFZ5+s/Q5oGvELYUq6
      FatSQG/047VXiZyPI7pd0L76IXRd4+Lbb+Fu7SA0MsWuLz5Dauwi89NJdjyxegx7ulTgtdk5
      ejxezmWy/FrPBk5F5xkr63y9s21dK0vDJbPihSNJmjssjM1WeHKnh5cGsnicJva0WbHcBjkz
      4eFjYHRTLYZRVTNtm3YwPfAhnTsf+UjOf/UWDA7N8Rvf+SoTEyFioTns/mY8VgPoImaTkYYG
      H9lMBlE0IEkGAgEfLqeLbKGM0WTBbtKIxjPIuk6lUiXQvYP8xEms7hYsLh96OY+qm2h0Gmjv
      3QgmOy67ia2bNmMQTei6QnNrJ52b9hKamaUn6AAdTGYLnd0bMEoCjcFmmpsCXBydIR6dXFwd
      egVomg4Ggfx0kuhIiuR4guhEHv+mAOYaO8QLAJqKJhdR1SoTx86galBMpVYTvTQHQFZkstUq
      sqJxIBKmUK1S1XVuhSc2FSlxYqaMZDPS5TczPl9kZ5sVr91w2zTRczdtwGRz4w124GwIEJ+d
      RNeqV/MDbjVuOyc4MjXEfMnE7k3ddcmtxgLpmkZ6KoOtyYVeLFEVTTi9tdcIWtoE0klNTSA6
      /bh9rlVNoEy5yGxZYZPbiaHOHda1mkBj8yUcbiPoAkHHzcXav3YLTKArKGcTmJy+ujvL1Iob
      TaA7LhQikgmTqqMsyhXU6pSKohmj4dqO+FKZZJ5sDmt55bTItTrBgnVtTvCaO8xrGqKw0HlO
      aU5i6soFANbaKV67nLBdL5tTqxNsNUt0N1+b+x2XEabpKlWt/k0kTVPRhKVZILMxiHBdlpdy
      XVa9qmnoCPgyWezFYu0nVDWuz84XzVVEy+rNI1RVBXUNHe1VDfTlWaCSZmZcaVlimsv1CFt5
      FdI0DYT6e4Rpl+sCiaJOwGOnxV9bg/CbzSRboAC6rjI6Nklvbw8CUM6l0cxObKa1HXxq6Aya
      o5lKMcemvh5Q8hw7O829e7YsOf7CqeM4W7tp9vswLCwYxOG3XmXDjocZOXee3Tu6OD+d48Hd
      m6+OODR+YN1jgZobvo5kWPmHeOK9D9gyMr7mc1haoljbw2uWB1CrKj8fzGFzWnhyQ30hG+PV
      Zv739G/c1PnXG19+uJ/vfH73R3KuBQqQDo3zw//nP/GVZ+5hriCRnhnH37+VYjyGpJZI5mUC
      rR1UsmkETSdTKaCIFja3+sgUKpQVAYtQRStn6HvwSyhjJ5D7PocUOsEPXvgnOrb1IheqDJz5
      EJdJYD4t47UbcPndjA/N0djiZeJn/8yerR3kjM3s2/cYR994kbKmMXI+xAP7nuIvf/4CM5Fd
      pPPeBQqwEmKDYbKJKpIEmEy0b/MyfSKE5HTStn0VXruS59zh0zS1eYhGCmy5dxODR04hmm1s
      eWRxB3ldVXh7bgrZ5MRQyeN1B2mmyJFUng2eAPd466uYthRSGZmXR0uYy1U8TXaebJU4Olag
      q1OiDl7s5qFmGDr8Jg3dW0jPT9Bxz7PIiXHCM5P07H3qE5GFds1w0nXGZ2J8+xf2MZsoEZ6b
      o7GjE4sIBoOE1WymMeAjmy9gMpmRTEb8vgY8LisVVcdidWDSyqSyBURJoqppdG3awczZo3iC
      PXgbAlRKBXTJScBtpburHYfXj8Vsoa+3H5vFiKBBd88GNux8kOjcPEG3GVEUsdnsdPdtQNBU
      Htj3ODazE5dNrJkFUstVNB3UqkYhWiByIY5aVSnEaoh7EQQ0tYKuixTiUabODSEIApJx6XAB
      XRDIKiqaoiAIOuOpGIP5MoIgYFwX6kXn8FiBgZkSmzpsnB7Pc3C0xPZOO12uj5bX1BTwtQZJ
      RyMIgkJqcoBSsQhVlY8mounmcVs6wZNDZyhbgmzqbKpZZvVYIJ3URBpHqxujBInJDJ5Ozwpd
      V64zgXSNxOQE5oZmHC7bgjHLmUCqqnA+k6XP7cG6ghO6FhNIUzVOzVdwGQV8HhMNN0Ho34wJ
      pKsVsvEIzkBb/aEIK6AeE+huQsxlXCqOWxsffz1WYmVMxgaWK3VyRc6dy2Mr1V4Q68bziaYq
      olleQWL1ea4sd4kFWk7Ny7qJaWVxzwBNUy+zQOuXELMSdF0D/VJvMZ/LQrBGU/G2UwBd1xg8
      c5Kq0cXOLX2r2oGaUmFgcJQmnwObvxWnRWLozElatu5ZOiGmlOLcZJK+jhbs9mudJm++PLqI
      xVR755QrKYrWUgV/snbFW4o+lVwFhGWYqJXkajufVlPdoxuhaZdjgeqQUTBwvtJxWQHqDGrT
      dHRYsijxinI10qAtDU6C13XkuYU0qMDrP/spScGLJD/ERDhDOjKP1RNEKkVJq2YskohZ1EjI
      Lr71K0/ys5f38/V993L49PtE4xrdLokzoxM0tXaSCo+iayLRWJ5Aqx+bAKVKkZdfCNPb38aW
      zZvYuWMbh2tigXTiQ3EMDhve1oWxP4Jgoi3wzbqvtntqhs+9c3jVcdlSnmPpPA8Eg9hv+JFd
      uy5gMH9SrOblkdOs/JvE767rMav5KIlIBH/X1ptq7vHNZ3bw1ccXs4+3wGvSsTvdNLntHD72
      AeOjI+SqAvGZUc6cPYdSLZDJlcgk43Rs3IxJMNHeaGYkV4FMlmo5RySeoKOjmXRJY3poGLPF
      hK25CzEbYW4+TLqs42vwYSyGMTYsH0OTmUwy9OYk6akUo4dmAYW5kzESE+lVr0LJxxk4+D6D
      b7zOxaOnQM/z3v/3X4lFMqvKakqFl8eHeTOa4KdjwwwXZY6E5xjNpIjI695Ne1nMhEv85/cS
      /OO5HH9+JIUKvHM2xXj+Jkqv3EqoWYYOvEg2lWT6xOvIikJs/AT52BTl8q3JI/jIfIBqKcVP
      XnmTYPsG9j2wdNujeqDKJQ6+e4RHnngSk0HgYmiQieTCym1qpUo+JWOxiORzKhabiFxQQQBv
      +yV+X9evmLkGHNb+a8Jahch0BK1SQRDA5vWi5NPoNj8NQQ+6riMIAq5cns650A2z05nP5zEa
      TcxlMzQ7HCQrFUwCOK0uGm/YVzH5U6vWFb1yvnqgaRDJVnGZReYLKpIoYFQ1bG4zvlWiQK7d
      l9pR1SXeKe9ac1CfrqsU49NUNSNoVawuD5VCDlEEo6sV8zL7UbXMtb/DT+8N4dCapt05TvDt
      1vD6dpJba3mTtcitNaThZkIhNE1bkxN8RyXErJWGuyu3vnJr3fy6mU2zm7nG2yAifH3wUd/4
      euVmh0/z0mtvU1Tqs79L6Rn+4oc/4KWDA3XJXcFaAtM+arlqPsoLL/yEULK+6nrFyAX+6Ic/
      5J0PRuqSg2vzvGNMIJD54//4/1LVBL73r/97Vgt0HjrzAX//6iE6AjbSuTK/+Fv/imb76sng
      2XiI7//Jf2Fru49oocLnfuU32eCzrSr3yl//KecnY5RFF8EGice+9C22tKxeQz8fHeUP//2f
      0NqzkUJZxNXUxm9+4/Oryv3kz/8tOVcPcmaecLJEwOdl4/3P8cTulbvIv/u3P6TQsY9Tb79M
      k9+PZhLY8vDzPLRp5U3Jt//m+9gf+HWO/OSP6WptJ1HWadn0MJ97qH9FubP7/4bjUzkm40XI
      Jujq7cHdeQ9feWrninKn9/8NYwUn7x06SHdXJ1anE8nWza99/YnlhXSNA6/+PYNxDTkZQ5Fz
      d44JBEbu2bsLRbJTS00Dg67S193Nht52MvkKPkttNuTE+CjhmXE+9+xTeIoVmpy1pYw++NSz
      GM9N0RJwMp8q0OarrUan0ebh8aefpamjm7nJcVp6ttYk17VlD7hbiIY8PPBIkNm5GFu6G1eV
      a+rbSUrU6OjuZEN3H7lihY1tq/dAa+nfQzh0kWg0Sv+efXQoCps3tq4q523tZ1ezi/bZSZpb
      g4TmY/RuWz0XxNe2ETlv4OnPPkdnWwuhuVla+1a/N5pgoquzCWdXEMnqvpNWgI8KOqlkCrfX
      d9tkVd1OyGXSmGxOzDXWIP24cVcB7uJTjTvGCb6Lu6gXsUjoTvIB7uIuVsaRl/6SQtODaLkI
      Loeb8NSJuyvAXXx6cN/Tz/P2T/6WjoCdAy//HSPR6l0f4C4+TdBJJJI4rRIT0/MgGu4qwF18
      uvH/A7cku0Xoh7QrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='UniversityToDegree' width='192'>
      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
      XYv8P3NqMJZfaaSbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Very Ambitious' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Very Safe' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='WorldMap' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
